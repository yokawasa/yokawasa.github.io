[{"content":" Preface In this article, I‚Äôd like to introduces Finched Rails CLI that makes it a breeze to try out Rails without installing anything but Finch. Finch is an OSS CLI for building, running, and publishing Linux containers create by AWS. As long as you have Finch, you can quick start a Rails app only by copying and pasting a few commands. Finched Rails CLI is a fork of Docked Rails CLI and simply a Finch version of it.\nNOTE: As of Jan 2023, Finch only supports macOS (on all Mac CPU architectures). For its future supportability of any other architectures, please watch Finch repo\nWhy I created Finched Rails CLI? It\u0026rsquo;s very simple. I don\u0026rsquo;t currenlty use Docker Desktop for managing Linux containers on my Desktop for its complexity and high resource consuming resason. I use Finch instead for it.\nQuickstart Please install Finch if you don\u0026rsquo;t have on your desktop\nbrew install --cask finch Then copy and paste these below into your terminal:\nfinch volume create ruby-bundle-cache alias finched=\u0026#39;finch run --rm -it -v ${PWD}:/rails -v ruby-bundle-cache:/bundle -p 3000:3000 --entrypoint \u0026#34;\u0026#34; ghcr.io/yokawasa/rails/cli\u0026#39; Now you\u0026rsquo;re ready to start develop Rails app using finched, the alias you\u0026rsquo;ve just created.\nLet\u0026rsquo;s create a Rails project named weblog and start the Rails server as follows:\nfinched rails new weblog cd weblog finched rails generate scaffold post title:string body:text finched rails db:migrate finched rails server Your Rails app is running, and you can check it on http://localhost:3000/posts.\nopen http://localhost:3000/posts That\u0026rsquo;s it!\nEnjoy developing Rails app with Finch!\n","permalink":"https://unofficialism.info/posts/finched-rails-cli/","summary":"Preface In this article, I‚Äôd like to introduces Finched Rails CLI that makes it a breeze to try out Rails without installing anything but Finch. Finch is an OSS CLI for building, running, and publishing Linux containers create by AWS. As long as you have Finch, you can quick start a Rails app only by copying and pasting a few commands. Finched Rails CLI is a fork of Docked Rails CLI and simply a Finch version of it.","title":"Finched Rails CLI makes it a breeze to try out Rails withough installing anything but Finch"},{"content":"Yoichi Kawasaki Software Engineer, NoOps Practitioner, loving üßñ üç∫ ‚õ∫\nBio Yoichi Kawasaki (Â∑ùÂ¥é Â∫∏Â∏Ç in Japanese) is currently a tech lead site reliability engineer at ZOZO, inc. He is responsible for leading ZOZOTOWN microservice platform SRE team and delivering service reliability. Prior to joining ZOZO, inc., he worked as a solutions architect at Microsoft and responsible for leading technical engagements to win based on solutions leveraging the Microsoft Azure and OSS with a specialization in cloud native application architecture and development. Prior to Microsoft, he worked as a software engineer at Yahoo! JAPAN and engaged with development of many large distributed sytems. He has a BBA degree from the University of Georgia, Athens GA.\nMy recent publications and talks can be found at this page\nLinks Codes on GitHub Tweets on Twitter Profile on LinkedIn Slides on SpeakerDeck, Slideshare Articles on this Blog, Qitta Email: yokawasa [at] gmail.com ","permalink":"https://unofficialism.info/about/","summary":"Yoichi Kawasaki Software Engineer, NoOps Practitioner, loving üßñ üç∫ ‚õ∫\nBio Yoichi Kawasaki (Â∑ùÂ¥é Â∫∏Â∏Ç in Japanese) is currently a tech lead site reliability engineer at ZOZO, inc. He is responsible for leading ZOZOTOWN microservice platform SRE team and delivering service reliability. Prior to joining ZOZO, inc., he worked as a solutions architect at Microsoft and responsible for leading technical engagements to win based on solutions leveraging the Microsoft Azure and OSS with a specialization in cloud native application architecture and development.","title":"About"},{"content":"I presented on Apri 28th (April 29th JST): \u0026ldquo;Accelerating ZOZOTOWN Modernization with Istio\u0026rdquo; at IstioCon 2022. It was an awesome experience for me to present for the global technology conference like IsitoCon.\n‚õµÔ∏èIstio is a synonym of acceleration \u0026amp; modernization. Register for #IstioCon to learn about \u0026quot;Accelerating ZOZOTOWN Modernization process with #Istio\u0026quot; by @yokawasa ü§ìüëâ https://t.co/SWyXAsfqcO #Istio #CloudNative #ServiceMesh pic.twitter.com/BNyeLsAVHI\n\u0026mdash; Istio (@IstioMesh) April 25, 2022 You can find the slides for my presentation: https://speakerdeck.com/yokawasa/accelerating-zozotown-modernization-with-istio\nAbout the session It\u0026rsquo;s about an application modernization of ZOZOTOWN using Istio. ZOZOTOWN is the largest fashion online shopping website in Japan run by ZOZO (https://corp.zozo.com/en/). It was launched in 2004, implimented as monoliths, and became a big fat monolith application built upon onprem as it grew. In last 3 years they have worked on ZOZOTOWN modernization project that they call ‚ÄòZOZOTOWN replace‚Äô where they achived gradual migration to kubernetes-based microservice architecture and adopted istio / service mesh as a key enabler for our new ZOZOTOWN platform. Topics covered in the presentation will include:\nZOZO‚Äôs gradual migration storategy How they integrated Isito into their microservice platform where they had their existing in-house API Gateway How they achieved zero downtime migration to istio-based microservice architecture Further Istio usage at ZOZO to achive more sophisticated DevOps experience You can find the session info on the event site as well: https://events.istio.io/istiocon-2022/sessions/accelerating-zozotown-modernization/\nUpdated on May 16, 2022 - Video is here: Why I applied for the CFP? I applied for the Call For Proposals (CPF) for the IstioCon 2022 with the following motivations:\nTo share knowlege and usecase of Istio / service mesh with the community To raise your technical presence of the company in the area of Istio service mesh To step out of my comfort zone by presenting in English (my 2nd language) The biggest motivation is #3 - giving presentation in English. As a Japanese, I\u0026rsquo;m pretty comfortable with the presentation in Japanese (see my presentations history at public event) but NOT with the one in English. There was the time when I was a part of global team and had many chances to give English presentation. But in my current role I haven\u0026rsquo;t have a chance for about 2.5 years, thus I got to be reluctant to do in English and even worse I became conscious of my weakness in presenting myself in English. So, applying for the CFP (ie. to give the presentaion in English) was to overcome my weakness.\nI\u0026#39;m super excited to present at #IstioCon 2022! It\u0026#39;s a 10 min lightning talk. Talk title is \u0026quot;Accelerating ZOZOTOWN Modernization with Istio\u0026quot; üöÄ\n10ÂàÜÊû†„ÅÆLT„ÅßÁô∫Ë°®„Åó„Åæ„Åô„ÄÇÊó•Êú¨ÊôÇÈñì 4/29 12:50am„Å†„Çà„ÄÇÈ†ëÂºµ„Çã„ÅúÔºÅüí™https://t.co/TGfpEbBcGw pic.twitter.com/gAqyZOxw6i\n\u0026mdash; Yoichi Kawasaki (@yokawasa) March 31, 2022 What I\u0026rsquo;ve learnt through event The challenge turned out very well. After the challenge, I got to be feeling very positive about joining the global event like IstioCon. Also I\u0026rsquo;ve learnt alot from the event.\nThere is no barriers to joining the global event except language and timezone. Speaking of the language, there is more chance to pre-record the presentation which allow non native English speakers elaborate and spend as much time on the presentation to get over language difficulties. All you need is motivation and guts There are alot more things to do with Istio / service mesh to improve the application modernization that I\u0026rsquo;m working on. Speed of innovation in this are is very fast and there are many advanced Istio service mesh usecase in the world to catch up with. If you\u0026rsquo;d like to view a talk you missed, you can replay content if you\u0026rsquo;re registered at https://events.istio.io/istiocon-2022/, and also sessions records will be available on YouTube in the next few weeks (ref). These are the biggest harvests I\u0026rsquo;ve gained from attending this event.\nI really thank you to the organizers of IstioCon and the community for the awesome event!\nBTW - Big news on Istio and CNCF There was a big news during IstioCon day1 keynote - the Istio project has applied to join the Cloud Native Computing Foundation (CNCF). Here is the PR for the proposal: https://github.com/cncf/toc/pull/827\nSUPER EXCITED about @IstioMesh joining @CloudNativeFdn announcement #IstioCon #day1 keynote @eric_brewer pic.twitter.com/KWkDOpO88c\n\u0026mdash; Lin Sun (@linsun_unc) April 25, 2022 üì¢Great news! With the support of @googleOSS and the Istio Steering Committee, we have applied to become a @CloudNativeFdn project! Take a look at our blog and learn more about this process: https://t.co/2rn2YMKEpl üëÄ #CNCF pic.twitter.com/2DDui6HIWG\n\u0026mdash; Istio (@IstioMesh) April 25, 2022 I\u0026rsquo;m super excited about it!\n","permalink":"https://unofficialism.info/posts/istiocon2022/","summary":"I presented on Apri 28th (April 29th JST): \u0026ldquo;Accelerating ZOZOTOWN Modernization with Istio\u0026rdquo; at IstioCon 2022. It was an awesome experience for me to present for the global technology conference like IsitoCon.\n‚õµÔ∏èIstio is a synonym of acceleration \u0026amp; modernization. Register for #IstioCon to learn about \u0026quot;Accelerating ZOZOTOWN Modernization process with #Istio\u0026quot; by @yokawasa ü§ìüëâ https://t.co/SWyXAsfqcO #Istio #CloudNative #ServiceMesh pic.twitter.com/BNyeLsAVHI\n\u0026mdash; Istio (@IstioMesh) April 25, 2022 You can find the slides for my presentation: https://speakerdeck.","title":"My presentation at IstioCon 2022"},{"content":"Recent Publications Publication Name Publish Day Software Design 2022Âπ¥2ÊúàÂè∑ Á¨¨2ÁâπÈõÜGitHub Actions„ÅßÁ∞°Âçò„ÉªÂø´ÈÅ©CI/CD (amazon) Jan 18, 2022 Êó•Áµå„Ç≥„É≥„Éî„É•„Éº„Çø: Ë≤†Ëç∑„Å´Âêà„Çè„Åõ„Å¶10ÁßíÂçò‰Ωç„Åß„Çµ„Éº„Éê„ÉºÂ¢óÊ∏õ„ÄÅZOZO„ÅÆAWS„Ç≥„É≥„ÉÜ„ÉäÊ¥ªÁî®Ê≥ï Dec 1, 2020 „Éó„É≠„Ç∞„É©„Éû„Éº„ÅÆ„Åü„ÇÅ„ÅÆVisual Studio Code„ÅÆÊïôÁßëÊõ∏ (amazon) April 29, 2020 ZOZO TECH BOOK VOL.1 - Á¨¨3Á´† ÈÄüÁøíGitHub Actions „Äú ÊòéÊó•„Åã„Çâ„ÅÆÂÖÖÂÆüGitHubËá™ÂãïÂåñ„É©„Ç§„Éï„ÅÆ„Åü„ÇÅ„ÅÆÂáùÁ∏Æ„Éõ„Çö„Ç§„É≥„Éà „Äú April, 2020 Recent Talks Past talks and presentations by @yokawasa (twitter:@yokawasa)\nSession Event Day Accelerating ZOZOTOWN Modernization with Istio (IstioCon 2022) April 29, 2022 ZOZOTOWN„Éû„Ç§„ÇØ„É≠„Çµ„Éº„Éì„ÇπÂü∫Áõ§„ÅÆService Mesh „Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£„Å∏„ÅÆÁßªË°å ( ZOZO Tech Meetup„ÄúZOZOTOWN„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„Éà„Éä„Ç§„Éà„Äú) Sept 10, 2021 ToilÊí≤ÊªÖÊ¥ªÂãï„Å´ÁµÇ„Çè„Çä„ÅØÊù•„Å™„ÅÑ (NoOps Meetup Online #0) Dec 16, 2020 ZOZOTOWN„ÅÆ„ÇØ„É©„Ç¶„ÉâÊ¥ªÁî®Êà¶Áï• (Tech-on Meetup Online#03) Oct 5, 2020 ZOZOTOWN„ÅÆ„ÇØ„É©„Ç¶„ÉâÊ¥ªÁî®Êà¶Áï• („É§„Éû„ÉàHD √ó ZOZO„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„Ç∫‰∫ã‰æãÂãâÂº∑‰ºö) Sept 28, 2020 ÈÄüÁøíGitHub Actions „Äú ÊòéÊó•„Åã„Çâ„ÅÆÂÖÖÂÆüGitHubËá™ÂãïÂåñ„É©„Ç§„Éï„ÅÆ„Åü„ÇÅ„ÅÆÂáùÁ∏Æ„Éù„Ç§„É≥„Éà April 28, 2020 Êàë„ÄÖ„ÅØZOZOTOWN„ÅÆ„ÇØ„É©„Ç¶„Éâ„Ç∏„É£„Éº„Éã„Éº„ÇíÈÄö„Åò„Å¶‰Ωï„ÇíÂ≠¶„Çì„Å†„ÅÆ„ÅãÔºü (Developers Summit 2020) Feb 13, 2020 ‰ªäServerless„ÅåÈù¢ÁôΩ„ÅÑ„Çè„Åë - DevLOVEÊÑüË¨ùÁâà (DevLOVE v2019.10.21) Oct 21, 2019 ‰ªäServerless„ÅåÈù¢ÁôΩ„ÅÑ„Çè„Åë v19.09 (Serverless Meetup Tokyo #14) Sept 19, 2019 ‰ªäServerless„ÅåÈù¢ÁôΩ„ÅÑ„Çè„Åë (DevLOVE X) June 22, 2019 Azure Functions 2.0 Deep Dive - „Éá„Éô„É≠„ÉÉ„Éë„Éº„ÅÆ„Åü„ÇÅ„ÅÆÊúÄÊñ∞ÈñãÁô∫„Ç¨„Ç§„Éâ (de:code 2019) May 29, 2019 „ÇØ„É©„Ç¶„Éâ„Éç„Ç§„ÉÜ„Ç£„ÉñÊôÇ‰ª£„ÅÆÂàÜÊï£„Éà„É¨„Éº„Ç∑„É≥„Ç∞ (de:code 2019) May 30, 2019 „Éá„Éô„É≠„ÉÉ„Éë„Éº„ÅÆ„Åü„ÇÅ„ÅÆAzure„ÇØ„É©„Ç¶„Éâ„Éç„Ç§„ÉÜ„Ç£„Éñ„Çπ„Çø„ÉÉ„ÇØ (Developers Summit 2019 Tokyo) Feb 15, 2019 Service Mesh Status Quo 2018: 2019Âπ¥„Å´Âêë„Åë„ÅüService Mesh„ÅÆÁèæÁä∂Ë™≤È°å„ÅÆÊï¥ÁêÜ„Å®ËÄÉÂØü (Container X mas Party with flexy) Dec 18, 2018 NoOps„ÅåÁõÆÊåá„ÅôÊú™Êù•„Å®„Ç≥„É≥„ÉÜ„ÉäÊäÄË°ì ( Co-presentation with Hiromasa Oka at Japan Container Days V18.12, Video) Dec 5, 2018 Azure Containers \u0026amp; Serverless Technology Options (Co-presentation with Takuya Hane at Microsoft Tech Summit 2018) Nov 7, 2018 „Ç≥„É≥„ÉÜ„ÉäÔºÜ„Çµ„Éº„Éê„Éº„É¨„ÇπÔºö„Éà„É¨„É≥„Éâ„ÅÆËÄÉÂØü„Å®Â∞ë„ÅóÂÖà„ÅÆÊú™Êù•„ÅÆÂ±ïÊúõ (Developers Summit 2018 Fukuoka) Sept 6, 2018 Azure Kubernetes Service Handson in CNDT 2018 (Co-presentation with Ryo Fujita at OpenStack Days Tokyo 2018 Aug 2, 2018 „Åì„Åì„Åæ„Åß„Åß„Åç„ÇãÔºÅElastic Stack„Å´„Çà„ÇãÈÅãÁî®Áä∂Ê≥Å„ÅÆÂèØË¶ñÂåñ - Azure„Çµ„Éº„Éì„ÇπÔΩûKubernetes„Åæ„Åß (Co-presentation with Jun Ohtani at de:code 2018, Èñ¢ÈÄ£Ë®ò‰∫ã) May 23, 2018 Kubernetes x PaaS ‚Äì „Ç≥„É≥„ÉÜ„Éä„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆNoOps„Å∏„ÅÆÊåëÊà¶ (Japan Container Days V18.04, Èñ¢ÈÄ£Ë®ò‰∫ã) April 19, 2018 NoOps„Å∏„ÅÆÊåëÊà¶ ( Co-presentation with Hiromasa Okaat Developers Summit 2018 Tokyo, Èñ¢ÈÄ£Ë®ò‰∫ã) Feb 16, 2018 „Çπ„Ç±„Éº„É©„Éñ„É´„ÅßÊâãÈñì„Å™„ÅèÂãï„Åã„Åõ„ÇãÔºÅ„ÇÇ„ÅÜ„Åô„Åê ‰∏ÄËà¨Êèê‰æõÈñãÂßã Azure Database for MySQL / PostgreSQL ( Co-presentation with Jan Engelsberg at Microsoft Seminar: Intelligent Mobile \u0026amp; Cloud Native App) Mar 13, 2018 15ÂàÜ„Åß„ÅäÂ±ä„Åë„Åô„Çã Elastic Stack on Azure Ë®≠Ë®à„ÉªÊßãÁØâ„Éé„Ç¶„Éè„Ç¶ (Elastic{ON} TOUR Tokyo 2017) Dec 14, 2017 The Infinite Benefits of Microsoft Azure ÔΩû Scality Connect for Azure Blob Storage x Azure„ÅßÂ∫É„Åå„Çã„Éá„Éº„ÇøÂàÜÊûê„ÉªÊ¥ªÁî® ÔΩû ( Co-presentaion with Masayoshi Kudo at Scality SDS Day 2017 TOKYO) Oct 18 2017 „Åù„ÅÆÊÉÖÂ†±„ÅÜ„Åæ„ÅèÂèñ„ÇäÂá∫„Åõ„Å¶„ÅÑ„Åæ„Åô„Åã? ÔΩû ÊÑèÂ§ñ„Å®Á∞°Âçò„ÄÅAzure Search „ÅßÁü≠ÊôÇÈñì„ÅßÊ§úÁ¥¢Á≤æÂ∫¶„Å®Âà©‰æøÊÄß„ÇíÂêë‰∏ä„Åï„Åõ„Çã„Åü„ÇÅ„ÅÆÊñπÊ≥ï (de:code 2017, Video) May 24, 2017 Azure Search Deep Dive ÔΩûÊ§úÁ¥¢„Ç®„ÇØ„Çπ„Éö„É™„Ç®„É≥„ÇπÂêë‰∏ä„ÅÆ„Åü„ÇÅ„ÅÆ„Éé„Ç¶„Éè„Ç¶ÂæπÂ∫ïËß£Ë™¨ÔΩû (de:code 2016) May 25, 2016 Other Activities Patents ÁâπÈñã2011-065245 ÁâπÈñã2011-065244 ÁâπÈñã2011-065243 ÁâπÈñã2011-060094 ÁâπÈñã2011-060093 ÁâπÈñã2008-287407 ","permalink":"https://unofficialism.info/works/","summary":"Recent Publications Publication Name Publish Day Software Design 2022Âπ¥2ÊúàÂè∑ Á¨¨2ÁâπÈõÜGitHub Actions„ÅßÁ∞°Âçò„ÉªÂø´ÈÅ©CI/CD (amazon) Jan 18, 2022 Êó•Áµå„Ç≥„É≥„Éî„É•„Éº„Çø: Ë≤†Ëç∑„Å´Âêà„Çè„Åõ„Å¶10ÁßíÂçò‰Ωç„Åß„Çµ„Éº„Éê„ÉºÂ¢óÊ∏õ„ÄÅZOZO„ÅÆAWS„Ç≥„É≥„ÉÜ„ÉäÊ¥ªÁî®Ê≥ï Dec 1, 2020 „Éó„É≠„Ç∞„É©„Éû„Éº„ÅÆ„Åü„ÇÅ„ÅÆVisual Studio Code„ÅÆÊïôÁßëÊõ∏ (amazon) April 29, 2020 ZOZO TECH BOOK VOL.1 - Á¨¨3Á´† ÈÄüÁøíGitHub Actions „Äú ÊòéÊó•„Åã„Çâ„ÅÆÂÖÖÂÆüGitHubËá™ÂãïÂåñ„É©„Ç§„Éï„ÅÆ„Åü„ÇÅ„ÅÆÂáùÁ∏Æ„Éõ„Çö„Ç§„É≥„Éà „Äú April, 2020 Recent Talks Past talks and presentations by @yokawasa (twitter:@yokawasa)\nSession Event Day Accelerating ZOZOTOWN Modernization with Istio (IstioCon 2022) April 29, 2022 ZOZOTOWN„Éû„Ç§„ÇØ„É≠„Çµ„Éº„Éì„ÇπÂü∫Áõ§„ÅÆService Mesh „Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£„Å∏„ÅÆÁßªË°å ( ZOZO Tech Meetup„ÄúZOZOTOWN„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„Éà„Éä„Ç§„Éà„Äú) Sept 10, 2021 ToilÊí≤ÊªÖÊ¥ªÂãï„Å´ÁµÇ„Çè„Çä„ÅØÊù•„Å™„ÅÑ (NoOps Meetup Online #0) Dec 16, 2020 ZOZOTOWN„ÅÆ„ÇØ„É©„Ç¶„ÉâÊ¥ªÁî®Êà¶Áï• (Tech-on Meetup Online#03) Oct 5, 2020 ZOZOTOWN„ÅÆ„ÇØ„É©„Ç¶„ÉâÊ¥ªÁî®Êà¶Áï• („É§„Éû„ÉàHD √ó ZOZO„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„Ç∫‰∫ã‰æãÂãâÂº∑‰ºö) Sept 28, 2020 ÈÄüÁøíGitHub Actions „Äú ÊòéÊó•„Åã„Çâ„ÅÆÂÖÖÂÆüGitHubËá™ÂãïÂåñ„É©„Ç§„Éï„ÅÆ„Åü„ÇÅ„ÅÆÂáùÁ∏Æ„Éù„Ç§„É≥„Éà April 28, 2020 Êàë„ÄÖ„ÅØZOZOTOWN„ÅÆ„ÇØ„É©„Ç¶„Éâ„Ç∏„É£„Éº„Éã„Éº„ÇíÈÄö„Åò„Å¶‰Ωï„ÇíÂ≠¶„Çì„Å†„ÅÆ„ÅãÔºü (Developers Summit 2020) Feb 13, 2020 ‰ªäServerless„ÅåÈù¢ÁôΩ„ÅÑ„Çè„Åë - DevLOVEÊÑüË¨ùÁâà (DevLOVE v2019.","title":"Works"},{"content":" A Software Design 2022/02 Issue was published in Jan 18, 2022, in which I contributed the 2nd special feature article on CI/CD using GitHub Actions.\n„ÄéSoftware Design 2022Âπ¥2ÊúàÂè∑„ÄèÔºàÊäÄË°ìË©ïË´ñÁ§æÔºâ/ Software Design 2022/02 Issue (gihyo)\nGihyo Online Amazon ","permalink":"https://unofficialism.info/posts/software-design-manazine-github-actions-article/","summary":" A Software Design 2022/02 Issue was published in Jan 18, 2022, in which I contributed the 2nd special feature article on CI/CD using GitHub Actions.\n„ÄéSoftware Design 2022Âπ¥2ÊúàÂè∑„ÄèÔºàÊäÄË°ìË©ïË´ñÁ§æÔºâ/ Software Design 2022/02 Issue (gihyo)\nGihyo Online Amazon ","title":"GitHub Actions Article on Software Design magazine (2022/02 Issue)"},{"content":"I‚Äôve published a new kubectl plugin called kubectl-plugin-socks5-proxy. This is a kubectl plugin that creates a local SOCKS5 proxy through which you can access to Services or Pods in a Kubernetes cluster.\nWhat the plugin actually does is that it create a SOCKS proxy server Pod in a Kubernetes cluster and forwards a local port (default:1080) to the proxy. So you can access to Servcies or Pods in Kuberenetes cluster by using the local port as SOCKS5 proxy like this:\ncurl --socks5-hostname localhost:1080 http://httpbin.default.svc.cluster.local/headers Installation This is a way to install the plugin through krew. After installing krew by following this, you can install the plugin like this:\nkubectl krew install socks5-proxy You can search the plugin with a keyword like this:\nkubectl krew search socks5 NAME DESCRIPTION INSTALLED socks5-proxy SOCKS5 proxy to Services or Pods in the cluster no After installed the plugin, you can run the plugin like this:\nkubectl socks5-proxy How to use Usage Usage: kubectl socks5-proxy Options: -n, --namespace \u0026lt;namespace\u0026gt; Namespace to create SOCKS5 proxy server in -p, --port \u0026lt;local port\u0026gt; Local port to be forwarded to the SOCKS5 proxy server (Pod). A client connects to this port, then the connection is forwarded to the SOCKS5 proxy server, which is then forwareded to the destination server --skip-cleanup-proxy Skip cearning up SOCKS5 proxy pod Default: Cleaning up SOCKS5 proxy pod at the end -h, --help Show this message Deploy an sample app and Create SOCKS5 proxy Suppose you deploy a sample app in a Kubernetes cluster like this\ngit clone https://github.com/yokawasa/kubectl-plugin-socks5-proxy.git cd kubectl-plugin-socks5-proxy kubectl apply -f sample-apps/party-clippy.yaml kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE kubernetes ClusterIP 10.0.0.1 \u0026lt;none\u0026gt; 443/TCP 96d party-clippy ClusterIP 10.0.5.226 \u0026lt;none\u0026gt; 80/TCP 1m First of all, create a local SOCKS5 proxy (default: 1080 port) by running kubectl socks5-proxy like this:\nkubectl socks5-proxy using: namespace=default using: port=1080 Creating Socks5 Proxy (Pod)... pod/socks5 created Forwarding from 127.0.0.1:1080 -\u0026gt; 1080 Forwarding from [::1]:1080 -\u0026gt; 1080 Use SOCKS5 Proxy in Curl Now you can access Srvices or Pods in the Kubernetes cluster from a local machine by using the local port as SOCKS proxy in Curl\n# Service name curl --socks5-hostname localhost:1080 party-clippy # Service name curl --socks5-hostname localhost:1080 http://party-clippy # FQDN curl --socks5-hostname localhost:1080 http://party-clippy.default.svc.cluster.local _________________________________ / It looks like you\u0026#39;re building a \\ \\ microservice. / --------------------------------- \\ \\ __ / \\ | | @ @ | | || | / || || |\\_/| \\___/ Use SOCKS5 Proxy in Google Chrome browser First, let\u0026rsquo;s configuring your Chrome browser to use SOCKS5 proxy like this:\nLinux\n/usr/bin/google-chrome \\ --user-data-dir=\u0026#34;$HOME/proxy-profile\u0026#34; \\ --proxy-server=\u0026#34;socks5://localhost:1080\u0026#34; macOS\n\u0026#34;/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\u0026#34; \\ --user-data-dir=\u0026#34;$HOME/proxy-profile\u0026#34; \\ --proxy-server=\u0026#34;socks5://localhost:1080\u0026#34; Windows\n\u0026#34;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\u0026#34; ^ --user-data-dir=\u0026#34;%USERPROFILE%\\proxy-profile\u0026#34; ^ --proxy-server=\u0026#34;socks5://localhost:1080\u0026#34; See also How to Set up SSH SOCKS Tunnel for Private Browsing\nNOTE: The \u0026ndash;proxy-server=\u0026ldquo;socks5://yourproxy:1080\u0026rdquo; flag tells Chrome to send all http:// and https:// URL requests through the SOCKS proxy server \u0026ldquo;yourproxy:1080\u0026rdquo;, using version 5 of the SOCKS protocol. The hostname for these URLs will be resolved by the proxy server, and not locally by Chrome. ref: Configuring a SOCKS proxy server in Chrome\nNow you are ready to access Services or Pods in the Kubernetes cluster with your Chrome browser\nEnjoy the plugin!!\n","permalink":"https://unofficialism.info/posts/kubectl-plugin-socks5-proxy/","summary":"I‚Äôve published a new kubectl plugin called kubectl-plugin-socks5-proxy. This is a kubectl plugin that creates a local SOCKS5 proxy through which you can access to Services or Pods in a Kubernetes cluster.\nWhat the plugin actually does is that it create a SOCKS proxy server Pod in a Kubernetes cluster and forwards a local port (default:1080) to the proxy. So you can access to Servcies or Pods in Kuberenetes cluster by using the local port as SOCKS5 proxy like this:","title":"kubectl plugin - SOCKS5 proxy to Services or Pods in the cluster"},{"content":"I\u0026rsquo;ve published a new GitHub Action called action-setup-kube-tools (View on Marketplace). The action installs Kubernetes tools (kubectl, kustomize, helm, kubeval, conftest, and yq) and cache them on the runner. This is a typescript version of stefanprodan/kube-tools with no command input param.\nUsage Inputs Parameter Required Default Value Description kubectl false 1.18.2 kubectl version. kubectl vesion can be found here kustomize false 3.5.5 kustomize version. kustomize vesion can be found here helm false 2.16.7 helm version. helm vesion can be found here helmv3 false 3.2.1 helm v3 version. helm v3 vesion can be found here kubeval false 0.15.0 kubeval version. kubeval vesion can be found here conftest false 0.19.0 conftest version. conftest vesion can be found here rancher false 2.4.10 Rancher CLI version. Rancher CLI vesion can be found here Supported Environments: Linux\nOutputs Parameter Description kubectl_path kubectl command path kustomize_path kustomize command path helm_path helm command path helmv3_path helm v3 command path kubeval_path kubeval command path conftest_path conftest command path yq_path yq command path rancher_path rancher command path Sample Workflow Specific versions for the commands can be setup by adding inputs parameters like this:\n{% raw %}\ntest: runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - uses: yokawasa/action-setup-kube-tools@v0.1.0 with: kubectl: \u0026#39;1.17.1\u0026#39; kustomize: \u0026#39;3.7.0\u0026#39; helm: \u0026#39;2.16.7\u0026#39; helmv3: \u0026#39;3.2.4\u0026#39; kubeval: \u0026#39;0.14.0\u0026#39; conftest: \u0026#39;0.18.2\u0026#39; rancher: \u0026#39;2.4.10\u0026#39; id: setup - run: | kubectl version --client kustomize version helm version --client helmv3 version kubeval --version conftest --version yq --version rancher --version {% endraw %}\nDefault versions for the commands will be setup if you don\u0026rsquo;t give any inputs like this:\n{% raw %}\ntest: runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - uses: yokawasa/action-setup-kube-tools@v0.1.0 id: setup - run: | kubectl version --client kustomize version helm version --client helmv3 version kubeval --version conftest --version yq --version rancher --version {% endraw %}\nDeveloping the action Install the dependencies\nnpm install Build the typescript and package it for distribution by running ncc\nnpm run build \u0026amp;\u0026amp; npm run pack Finally push the resutls\ngit add dist git commit -a -m \u0026#34;prod dependencies\u0026#34; git push origin releases/v0.1.0 Enjoy the action!\n","permalink":"https://unofficialism.info/posts/action-setup-kube-tools/","summary":"I\u0026rsquo;ve published a new GitHub Action called action-setup-kube-tools (View on Marketplace). The action installs Kubernetes tools (kubectl, kustomize, helm, kubeval, conftest, and yq) and cache them on the runner. This is a typescript version of stefanprodan/kube-tools with no command input param.\nUsage Inputs Parameter Required Default Value Description kubectl false 1.18.2 kubectl version. kubectl vesion can be found here kustomize false 3.5.5 kustomize version. kustomize vesion can be found here helm false 2.","title":"GitHub Actions - Kubernetes tools installer"},{"content":"I\u0026rsquo;ve published a new GitHub Action called action-setup-ecctl (View on Marketplace). The action installs a specific version of ecctl (Elastic Cloud control tool) and cache it on the runner.\nUsage Inputs Parameter Required Default Value Description version false latest Ecctl tool version such as v1.0.0-beta3. Ecctl vesion can be found here. Supported Environments: Linux and macOS\nOutputs Parameter Description ecctl-path ecctl command path Sample Workflow A specific version of ecctl can be setup by giving an input - version like this: {% raw %}\n- uses: yokawasa/action-setup-ecctl@v0.1.0 with: version: \u0026#39;v1.0.0-beta3\u0026#39; # default is \u0026#39;latest\u0026#39; id: setup - run: | ecctl version {% endraw %}\nThe latest version of ecctl will be setup if you don\u0026rsquo;t give an input like this:\n{% raw %}\n- uses: yokawasa/action-setup-ecctl@v0.1.0 id: setup - run: | ecctl version {% endraw %}\nDeveloping the action Install the dependencies\nnpm install Build the typescript and package it for distribution by running ncc\nnpm run build \u0026amp;\u0026amp; npm run pack Finally push the resutls\ngit add dist git commit -a -m \u0026#34;prod dependencies\u0026#34; git push origin releases/v0.1.0 Enjoy the action!\n","permalink":"https://unofficialism.info/posts/action-setup-ecctl/","summary":"I\u0026rsquo;ve published a new GitHub Action called action-setup-ecctl (View on Marketplace). The action installs a specific version of ecctl (Elastic Cloud control tool) and cache it on the runner.\nUsage Inputs Parameter Required Default Value Description version false latest Ecctl tool version such as v1.0.0-beta3. Ecctl vesion can be found here. Supported Environments: Linux and macOS\nOutputs Parameter Description ecctl-path ecctl command path Sample Workflow A specific version of ecctl can be setup by giving an input - version like this: {% raw %}","title":"GitHub Actions - Elastic Cloud Control (ecctl) tool installer"},{"content":"A scene at wedding ceremony of my old collage roommate\nJan 18, 2020 at Brooklyn NY\n","permalink":"https://unofficialism.info/posts/my-old-collage-roommate/","summary":"A scene at wedding ceremony of my old collage roommate\nJan 18, 2020 at Brooklyn NY","title":"College Roommate"},{"content":"A book, I co-authored with @hoisjp and @_Dr_ASA, was recently published. Today I went to a bookstore to see if it was actually displayed. It was real!! üéâüéâüéâ\n„Äé„Éó„É≠„Ç∞„É©„Éû„Éº„ÅÆ„Åü„ÇÅ„ÅÆVisual Studio Code„ÅÆÊïôÁßëÊõ∏„ÄèÔºà„Éû„Ç§„Éä„ÉìÂá∫ÁâàÔºâ/ Visual Studio Code textbooks for programmers\nSoftcover version Kindle version ","permalink":"https://unofficialism.info/posts/visual-studio-code-textbook/","summary":"A book, I co-authored with @hoisjp and @_Dr_ASA, was recently published. Today I went to a bookstore to see if it was actually displayed. It was real!! üéâüéâüéâ\n„Äé„Éó„É≠„Ç∞„É©„Éû„Éº„ÅÆ„Åü„ÇÅ„ÅÆVisual Studio Code„ÅÆÊïôÁßëÊõ∏„ÄèÔºà„Éû„Ç§„Éä„ÉìÂá∫ÁâàÔºâ/ Visual Studio Code textbooks for programmers\nSoftcover version Kindle version ","title":"Visual Studio Code Textbook for programmer was published!"},{"content":"I\u0026rsquo;ve published a new GitHub Action called SQLCheck Action (View on Marketplace). The action automatically identifies anti-patterns in SQL queries using sqlcheck when PR is requested and comment on the PR if risks are found in the queries.\nUsage Supports pull_request event type.\nInputs Parameter Required Default Value Description post-comment false true Post comment to PR if it\u0026rsquo;s true token true \u0026quot;\u0026quot; GitHub Token in order to add comment to PR risk-level false 3 Set of SQL anti-patterns to check: 1,2, or 3- 1 (all anti-patterns, default)- 2 (only medium and high risk anti-patterns) - 3 (only high risk anti-patterns) verbose false false Add verbose warnings to SQLCheck analysis result postfixes false \u0026ldquo;sql\u0026rdquo; List of file postfix to match ( separator: comma ) Sample Workflow .github/workflows/test.yml\nname: sqlcheck workflow on: pull_request jobs: sqlcheck: name: sqlcheck job runs-on: ubuntu-latest steps: - uses: actions/checkout@master - uses: yokawasa/action-sqlcheck@v1.2.1 with: post-comment: true risk-level: 3 verbose: false token: $ÔΩõÔΩõ secrets.GITHUB_TOKEN ÔΩùÔΩù Enjoy the action!\n","permalink":"https://unofficialism.info/posts/action-sqlcheck/","summary":"I\u0026rsquo;ve published a new GitHub Action called SQLCheck Action (View on Marketplace). The action automatically identifies anti-patterns in SQL queries using sqlcheck when PR is requested and comment on the PR if risks are found in the queries.\nUsage Supports pull_request event type.\nInputs Parameter Required Default Value Description post-comment false true Post comment to PR if it\u0026rsquo;s true token true \u0026quot;\u0026quot; GitHub Token in order to add comment to PR risk-level false 3 Set of SQL anti-patterns to check: 1,2, or 3- 1 (all anti-patterns, default)- 2 (only medium and high risk anti-patterns) - 3 (only high risk anti-patterns) verbose false false Add verbose warnings to SQLCheck analysis result postfixes false \u0026ldquo;sql\u0026rdquo; List of file postfix to match ( separator: comma ) Sample Workflow .","title":"GitHub Actions - SQLCheck Action"},{"content":"Today is my last day at Microsoft. About 9 years and 2 months have passed since I joined MS. I\u0026rsquo;ve had wonderful years filled with various experiences on business.\nIn the first 4 years, as FAST Search engineer \u0026amp; consultant, I specialized in Fast search and provided customers in Japan and sometimes in South East Asia \u0026amp; South Korea area with proactive consulting \u0026amp; support. For the next 3 years after that, as a part of Azure Solution Architect teams, I provided architectural guidance \u0026amp; design session, PoC and prototyping support, knowledge transfer trainings with Japanease enterprise customers, collaborating with Azure engineering teams, Azure sales teams and many other stakeholders. I also engaged with communities inside/outside Microsoft, participating in Microsoft hosting conferences / industry showcase events, and contributing OSS communities. In the latest 2 years, as a part of global technical SWAT team in enterprise sales organization internally called ‚ÄòGlobal Black Belt, I was responsible for leading technical engagements to win based on solutions leveraging the Microsoft Azure and OSS with a specialization in cloud native application architecture and development such as Microservices, Containers/Serverless, PaaS, DevOps, and so on. Along with my everyday job I had awesome opportunities to speak at conferences and meetups about many technical topics mostly on Cloud Native tech and architectures. It was awesome 9 years and 2 months!!\nI would like to extend my sincerest thanks to all the my customers and partners I have worked with so far. I also thank, each one of my colleague and managers who made my journey a memorable one in Microsoft.¬†I will start a new phase of my career from tomorrow. But it is indeed a small world in our industry. I hope our paths cross again, and it would be great if we may be able to work together again somewhere.¬†Please¬†reach out to me¬†if you ever want to catch up.\nMy personal contacts: yokawasa @ linkedin, twitter, facebook \u0026amp; github\n","permalink":"https://unofficialism.info/posts/my-last-day-at-microsoft/","summary":"Today is my last day at Microsoft. About 9 years and 2 months have passed since I joined MS. I\u0026rsquo;ve had wonderful years filled with various experiences on business.\nIn the first 4 years, as FAST Search engineer \u0026amp; consultant, I specialized in Fast search and provided customers in Japan and sometimes in South East Asia \u0026amp; South Korea area with proactive consulting \u0026amp; support. For the next 3 years after that, as a part of Azure Solution Architect teams, I provided architectural guidance \u0026amp; design session, PoC and prototyping support, knowledge transfer trainings with Japanease enterprise customers, collaborating with Azure engineering teams, Azure sales teams and many other stakeholders.","title":"My last day at Microsoft"},{"content":"azping is a command line tools that help you find the lowest latency Azure Region from your place. It acutally reports median latency to Azure regions. It is a fork of gcping.\nWhat does azping actually evalulate? azping evalulate the median latecy of http requests to Azure blob storage endpoints located in each of Azure reagions from your place. Number of requests to be made to each region is 5 by default, but it can be changed with -n parameter that you can give in executing azping command.\nHere is a list of Azure blob storage endpoints that azping evalulates:\nregion endpoint eastasia azpingeastasia.blob.core.windows.net/ping southeastasia azpingsoutheastasia.blob.core.windows.net/ping centralus azpingcentralus.blob.core.windows.net/ping eastus azpingeastus.blob.core.windows.net/ping eastus2 azpingeastus2.blob.core.windows.net/ping westus azpingwestus.blob.core.windows.net/ping northcentralus azpingnorthcentralus.blob.core.windows.net/ping southcentralus azpingsouthcentralus.blob.core.windows.net/ping northeurope azpingnortheurope.blob.core.windows.net/ping westeurope azpingwesteurope.blob.core.windows.net/ping japanwest azpingjapanwest.blob.core.windows.net/ping japaneast azpingjapaneast.blob.core.windows.net/ping brazilsouth azpingbrazilsouth.blob.core.windows.net/ping australiaeast azpingaustraliaeast.blob.core.windows.net/ping australiasoutheast azpingaustraliasoutheast.blob.core.windows.net/ping southindia azpingsouthindia.blob.core.windows.net/ping centralindia azpingcentralindia.blob.core.windows.net/ping westindia azpingwestindia.blob.core.windows.net/ping canadacentral azpingcanadacentral.blob.core.windows.net/ping canadaeast azpingcanadaeast.blob.core.windows.net/ping uksouth azpinguksouth.blob.core.windows.net/ping ukwest azpingukwest.blob.core.windows.net/ping westcentralus azpingwestcentralus.blob.core.windows.net/ping westus2 azpingwestus2.blob.core.windows.net/ping koreacentral azpingkoreacentral.blob.core.windows.net/ping koreasouth azpingkoreasouth.blob.core.windows.net/ping francecentral azpingfrancecentral.blob.core.windows.net/ping australiacentral azpingaustraliacentral.blob.core.windows.net/ping uaenorth azpinguaenorth.blob.core.windows.net/ping southafricanorth azpingsouthafricanorth.blob.core.windows.net/ping NOTE All blob storage endpoints are created with the following scripts (Just in case I leave the procedures):\n$ git clone https://github.com/yokawasa/azping.git $ cd setup # Edit RESOURCE_GROUP and REGION_LIST variables in env.sh $ vi env.sh # Read variables as enviroment variables $ source env.sh # Execute the following script that execute the following| # (1) Create resource group for azping # (2) Create blob storage accounts in each of Azure regions # (3) Create $root container and upload ping file to the container # (4) Check accessibility to all blob storage endpoints $ ping-entrypoint.sh How to install Linux 64-bit|https://azpingrelease.blob.core.windows.net/azping_linux_amd64\n$ curl https://azpingrelease.blob.core.windows.net/azping_linux_amd64 \u0026gt; azping \u0026amp;\u0026amp; chmod +x azping Mac 64-bit|https://azpingrelease.blob.core.windows.net/azping_darwin_amd64\n$ curl https://azpingrelease.blob.core.windows.net/azping_darwin_amd64 \u0026gt; azping \u0026amp;\u0026amp; chmod +x azping Windows 64-bit|https://azpingrelease.blob.core.windows.net/azping_windows_amd64\n# use WSL-bash $ curl https://azpingrelease.blob.core.windows.net/azping_windows_amd64 \u0026gt; azping \u0026amp;\u0026amp; chmod +x azping Or, you can always build the binary from the source code like this:\n$ git clone https://github.com/yokawasa/azping.git $ cd azping $ make $ tree bin bin ‚îú‚îÄ‚îÄ azping_darwin_amd64 ‚îú‚îÄ‚îÄ azping_linux_amd64 ‚îî‚îÄ‚îÄ azping_windows_amd64 Usage $ azping [options...] Options: -n Number of requests to be made to each region. By default 5; can\u0026#39;t be negative. -c Max number of requests to be made at any time. By default 10; can\u0026#39;t be negative or zero. -t Timeout. By default, no timeout. Examples|\u0026#34;500ms\u0026#34;, \u0026#34;1s\u0026#34;, \u0026#34;1s500ms\u0026#34;. -top If true, only the top region is printed. -csv CSV output; disables verbose output. -v Verbose output. Screenshot Here is an output of azping when I executed azping from my home in Tokyo\nEnjoy azping!\n","permalink":"https://unofficialism.info/posts/find-the-lowest-latency-azure-regions-from-your-place-using-azping/","summary":"azping is a command line tools that help you find the lowest latency Azure Region from your place. It acutally reports median latency to Azure regions. It is a fork of gcping.\nWhat does azping actually evalulate? azping evalulate the median latecy of http requests to Azure blob storage endpoints located in each of Azure reagions from your place. Number of requests to be made to each region is 5 by default, but it can be changed with -n parameter that you can give in executing azping command.","title":"Find the lowest latency Azure regions from your place using azping"},{"content":"I\u0026rsquo;ve taken both Certified Kubernetes Administrator (CKA) and Certified Kubernetes Application Developer (CKAD) exams in the past 2 weeks and fortunately passed both. This is a blog article on tips for both exams based on my experiences.\nAbout the exam and its curriculum CKA focus on managing and operating kubernetes cluster including troubleshooting while CKAD forcus on managing and deploying applicaionts to kubernetes cluster.\nIt\u0026rsquo;s very important to read and understand the exam curriculum and their relevant pages on kubernetes.io as all topics you\u0026rsquo;re expected to understand are inlcuded in the curriculum and they are definitly going to be on the exam.\nCKA and CKAD Curriculums https://kubernetes.io Tips for the exams Read and understand the exam curriculum and their relevant pages on kubernetes.io. You are allowed to look up the following sites during the exam kubernetes.io/docs kubernetes.io/blog/ github.com/kubernetes For both CKA and CKAD: the following are books that I found useful for CKA and CKAD. They are defenitly helpful to understand how to manage and operate the kubernetes cluster. Pick one or two that you think good fit and read through: Book: Kubernetes: Up and Running Book: Managing Kubernetes (Free PDF by Heptio is here) Book(Êó•Êú¨Ë™û): KubernetesÂÆåÂÖ®„Ç¨„Ç§„Éâ Book(Êó•Êú¨Ë™û): „Åó„Åè„Åø„Åå„Çè„Åã„ÇãKubernetes Azure„ÅßÂãï„Åã„Åó„Å™„Åå„ÇâÂ≠¶„Å∂„Ç≥„É≥„Çª„Éó„Éà„Å®ÂÆüË∑µÁü•Ë≠ò Book(Êó•Êú¨Ë™û): KubernetesÂÆüË∑µÂÖ•ÈñÄ „Éó„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥„É¨„Éá„Ç£„Å™„Ç≥„É≥„ÉÜ„ÉäÔºÜ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ‰Ωú„ÇäÊñπ For CKA: learn how to install, configure \u0026amp; validate kubernetes cluster. These are good materials to go through: Kubernetes the hard way (GCP) Kubernetes the hard way on Azure (Azure) For CKA: learn how to troubleshoot the cluster. I recommend to read the following pages in kubernetes.io Determine the Reason for Pod Failure Application Introspection and Debugging Debug Services For CKA: these below are Github repo that I though very useful for CKA exam preps: Kubernetes-Certified-Administrator For CKAD: these below are Github repo that I thought very very useful for CKAD exam preps: CKAD Exercises For both: it\u0026rsquo;s very important to know a quick way to achieve goals by using kubectl. You can lookup kubernetes.io during the exam but it\u0026rsquo;s always good to know shortcut ways as the exam time is limited (CKA = 3hrs / CKAD = 2hrs) Kubectl Cheat Sheet Creating template YAML using kubectl dry-run and edit it instead of creating YAML from scratch # Pod template $ kubectl run nginx --image=nginx --restart=Never --dry-run -o yaml # Deployment template $ kubectl run nginx --image=nginx --dry-run -o yaml # Servcie template $ kubectl expose deployment nginx --type=NodePort --port 8080 --dry-run -o yaml # [NOTE1] # You can change resource to release by changing --restart option: # kind | option # --------------------------------------------- # deployment | none # pod | --restart=Never # job | --restart=OnFailure # cronjob | --schedule=\u0026#39;cron format(0/5 * * * ? „Å™„Å©)\u0026#39; # [NOTE2] # In case that kubectl run will be deprecated in the future, $ kubectl create deployment nginx --image=nginx --dry-run -o yaml Tips during the exam ID: Candidates are required to provide government-issued photo identification before the Exam (Read Candidate Handbook). For non-english language folks, Passport would be the best! Testing Room: you need to prepare a room for testing which must be quiet, private and well lit. Virtual screen: you can virtual screen like tmux and screen. It would be very helpful to use multple screens like using one for deploying kuberenetes resources while using the other one for looking up kuberentes resource state and logs. For example, I\u0026rsquo;m a tmux user, and added the following .tmux.conf before starting tackling with questions: set-option -g prefix C-z Command alias: Setting up alias definitly help you to shorten the time you need to type in commands. For examples, alias k=kubectl Time management: Don\u0026rsquo;t spend too much time on difficult questions. Try to finish all easy questions first and spend the rest for difficult ones. You don\u0026rsquo;t have to beat everything to pass the exam!! - A score of at least 74% for CKA and 66% for CKAD to pass the exam Searchability: you can use and search the kubernetes.io pages. Even if you have no idea on questions on the exam, don\u0026rsquo;t give up and try to type some keywords to search the kubernetes.io pages. You may be lucky enough to find some hints or right answers on the site. Final comments Again, the most important tip for both exams is to read and understand the exam curriculum and all relevant pages on kubernetes.io. You don\u0026rsquo;t have to memorize but understand them. Event if you don\u0026rsquo;t come up with exact command options or kubernetes resource objects for questions in the exam, you can lookup and point to appropriate pages during the exam. In addition, get familiar with basic linux commands and cluster operations and management commands. If you have any questions, send DM to me @yokawasa.\nGood luck with your exams!\nps. Here are my Certificate IDs\n","permalink":"https://unofficialism.info/posts/unofficial-tips-for-cka-and-ckad-exams/","summary":"I\u0026rsquo;ve taken both Certified Kubernetes Administrator (CKA) and Certified Kubernetes Application Developer (CKAD) exams in the past 2 weeks and fortunately passed both. This is a blog article on tips for both exams based on my experiences.\nAbout the exam and its curriculum CKA focus on managing and operating kubernetes cluster including troubleshooting while CKAD forcus on managing and deploying applicaionts to kubernetes cluster.\nIt\u0026rsquo;s very important to read and understand the exam curriculum and their relevant pages on kubernetes.","title":"Unofficial tips for CKA and CKAD exams"},{"content":"This is an article on how you can SSH into Azure Kubernetes Service (AKS) cluster node VMs using kubectl-plugin-ssh-jump.\nMotivation I wanted to SSH into Azure Kubernetes Service (AKS) cluster node VMs, then looking up azure docs I found a relevant page - Connect with SSH to Azure Kubernetes Service (AKS) cluster nodes for maintenance or troubleshooting. But when I first saw this procedure, I thought this was very troublesome. Lazy person like me couldn\u0026rsquo;t accept going thourgh all the steps just to SSH into AKS cluster nodes VMs. This is why I decided to create kubectl-plugin-ssh-jump, a kubectl plugin to SSH into Kubernetes nodes using a SSH jump host Pod.\nAKS node access control and SSH access strategy By default, AKS nodes are not exposed to the internet, and they are completely isolated to their own virtual network. This is why I took a strategy to go through a jump host Pod to connect to the Kubernetes nodes. I believe this is pretty a general strategy in dealing with firewalling, access privileges, etc.\nRegarding SSH key with which you access the nodes via SSH, you need to use the SSH key that you chosen in creating your AKS cluster. Or in the case that you lose the key, you can update SSH Key by using az command like this (See this for more detail):\naz vm user update \\ --resource-group myResourceGroup \\ --name myVM \\ --username azureuser \\ --ssh-key-value ~/.ssh/id_rsa.pub As an additional security enhancement, you can configure Access Control(IAM) on the AKS cluster to set permissions on the nodes on who can access them. Please see What is role-based access control (RBAC)? for the detail on RBAC.\nSSH into AKS node VMs using kubectl-plugin-ssh-jump Pre-requistes This plugin needs the following programs:\nssh(1) ssh-agent(1) Installation Install through krew This is a way to install kubectl-ssh-jump through krew. After installing krew by following this, you can install kubectl-ssh-jump like this:\n$ kubectl krew install ssh-jump Expected output would be like this:\nUpdated the local copy of plugin index. Installing plugin: ssh-jump CAVEATS: \\ | This plugin needs the following programs: | * ssh(1) | * ssh-agent(1) | | Please follow the documentation: https://github.com/yokawasa/kubectl-plugin-ssh-jump / Installed plugin: ssh-jump Once it\u0026rsquo;s installed, run:\n$ kubectl plugin list The following kubectl-compatible plugins are available: /Users/yoichika/.krew/bin/kubectl-krew /Users/yoichika/.krew/bin/kubectl-ssh_jump $ kubectl ssh-jump Manual Installation Install the plugin by copying the script in the $PATH of your shell.\n# Get source $ git clone https://github.com/yokawasa/kubectl-plugin-ssh-jump.git $ cd kubectl-plugin-ssh-jump $ chmod +x kubectl-ssh-jump # Add kubeclt-ssh-jump to the install path. $ sudo cp -p kubectl-ssh-jump /usr/local/bin Once in the $PATH, run:\n$ kubectl plugin list The following kubectl-compatible plugins are available: /usr/local/bin/kubectl-ssh-jump $ kubectl ssh-jump How to use Usage Usage: kubectl ssh-jump \u0026lt;dest_node\u0026gt; [options] Options: \u0026lt;dest_node\u0026gt; Destination node IP -u, --user \u0026lt;sshuser\u0026gt; SSH User name -i, --identity \u0026lt;identity_file\u0026gt; Identity key file -p, --pubkey \u0026lt;pub_key_file\u0026gt; Public key file --skip-agent Skip automatically starting SSH agent and adding SSH Identity key into the agent before SSH login (=\u0026gt; You need to manage SSH agent by yourself) --cleanup-agent Clearning up SSH agent at the end The agent is NOT cleaned up in case that --skip-agent option is given --cleanup-jump Clearning up sshjump pod at the end Default: Skip cleaning up sshjump pod -h, --help Show this message Option parameters Cache username, identity, pubkey options are cached, therefore you can omit these options afterward. The options are stored in a file named $HOME/.kube/kubectlssh/options\n$ cat $HOME/.kube/kubectlssh/options sshuser=azureuser identity=/Users/yokawasa/.ssh/id_rsa_k8s pubkey=/Users/yokawasa/.ssh/id_rsa_k8s.pub SSH Agent (ssh-agent) The plugin automatically check if there are any ssh-agents started running by the plugin, and starts ssh-agentif it doesn\u0026rsquo;t find any ssh-agent running and adds SSH Identity key into the agent before SSH login. If the command find that ssh-agent is already running, it doesn\u0026rsquo;t start a new agent, and re-use the agent. Add --cleanup-agent option if you want to kill the created agent at the end of command.\nIn addtion, add --skip-agent option if you want to skip automatic starting ssh-agent. This is actually a case where you already have ssh-agent managed or you want to manually start the agent.\nExamples Show all node list. Simply executing kubectl ssh-jump gives you the list of destination nodes as well as command usage\n$ kubectl ssh-jump Usage: kubectl ssh-jump \u0026lt;dest_node\u0026gt; [options] Options: \u0026lt;dest_node\u0026gt; Destination node IP -u, --user \u0026lt;sshuser\u0026gt; SSH User name -i, --identity \u0026lt;identity_file\u0026gt; Identity key file -p, --pubkey \u0026lt;pub_key_file\u0026gt; Public key file --skip-agent Skip automatically starting SSH agent and adding SSH Identity key into the agent before SSH login (=\u0026gt; You need to manage SSH agent by yourself) --cleanup-agent Clearning up SSH agent at the end The agent is NOT cleaned up in case that --skip-agent option is given --cleanup-jump Clearning up sshjump pod at the end Default: Skip cleaning up sshjump pod -h, --help Show this message Example: .... List of destination node... Hostname aks-nodepool1-18558189-0 aks-nodepool1-18558189-1 aks-nodepool1-18558189-2 Then, SSH into a node aks-nodepool1-18558189-0 with options like:\nusernaem: azureuser identity:~/.ssh/id_rsa_k8s pubkey:~/.ssh/id_rsa_k8s.pub) $ kubectl ssh-jump aks-nodepool1-18558189-0 \\ -u azureuser -i ~/.ssh/id_rsa_k8s -p ~/.ssh/id_rsa_k8s.pub As explained in usage secion, username, identity, pubkey options are cached, therefore you can omit these options afterward.\n$ kubectl ssh-jump aks-nodepool1-18558189-0 You can pass the commands to run in the destination node like this (Suppose that username, identity, pubkey options are cached):\necho \u0026#34;uname -a\u0026#34; | kubectl ssh-jump aks-nodepool1-18558189-0 (Output) Linux aks-nodepool1-18558189-0 4.15.0-1035-azure #36~16.04.1-Ubuntu SMP Fri Nov 30 15:25:49 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux You can clean up sshjump pod at the end of the command with --cleanup-jump option, otherwise, the sshjump pod stay running by default.\n$ kubectl ssh-jump aks-nodepool1-18558189-0 \\ -u azureuser -i ~/.ssh/id_rsa_k8s -p ~/.ssh/id_rsa_k8s.pub \\ --cleanup-jump You can clean up ssh-agent at the end of the command with --cleanup-agent option, otherwise, the ssh-agent process stay running once it\u0026rsquo;s started.\n$ kubectl ssh-jump aks-nodepool1-18558189-0 \\ -u azureuser -i ~/.ssh/id_rsa_k8s -p ~/.ssh/id_rsa_k8s.pub \\ --cleanup-agent You can skip starting ssh-agent by giving --skip-agent. This is actually a case where you already have ssh-agent managed. Or you can start new ssh-agent and add an identity key to the ssh-agent like this:\n# Start ssh-agent manually $ eval `ssh-agent` # Add an arbitrary private key, give the path of the key file as an argument to ssh-add $ ssh-add ~/.ssh/id_rsa_k8s # Then, run the plugin with --skip-agent $ kubectl ssh-jump aks-nodepool1-18558189-0 \\ -u azureuser -i ~/.ssh/id_rsa_k8s -p ~/.ssh/id_rsa_k8s.pub \\ --skip-agent # At the end, run this if you want to kill the current agent $ ssh-agent -k ","permalink":"https://unofficialism.info/posts/easy-way-ssh-into-aks-cluster-node/","summary":"This is an article on how you can SSH into Azure Kubernetes Service (AKS) cluster node VMs using kubectl-plugin-ssh-jump.\nMotivation I wanted to SSH into Azure Kubernetes Service (AKS) cluster node VMs, then looking up azure docs I found a relevant page - Connect with SSH to Azure Kubernetes Service (AKS) cluster nodes for maintenance or troubleshooting. But when I first saw this procedure, I thought this was very troublesome. Lazy person like me couldn\u0026rsquo;t accept going thourgh all the steps just to SSH into AKS cluster nodes VMs.","title":"Easy way to SSH into Azure Kubernetes Service cluster node VMs"},{"content":"Set of demos to demonstrate Envoy Proxy features\nHTTP Routing: Simple Match Routing All traffic is routed by the front envoy to the service containers. Internally the traffic is routed to the service envoys, then the service envoys route the request to the flask app via the loopback address. In this demo, all traffic is routed to the service envoys like this:\nA request (path /service/blue \u0026amp; port 8000) is routed to service_blue A request (path /service/green \u0026amp; port 8000) is routed to service_green A request (path /service/red \u0026amp; port 8000) is routed to service_red Key definition 1 - virtual_hosts in front-envoy.yaml\nvirtual_hosts: - name: backend domains: - \u0026#34;*\u0026#34; routes: - match: prefix: \u0026#34;/service/blue\u0026#34; route: cluster: service_green - match: prefix: \u0026#34;/service/blue\u0026#34; route: cluster: service_blue - match: prefix: \u0026#34;/service/red\u0026#34; route: cluster: service_red Key definition 2 - clusters in front-envoy.yaml\nclusters: - name: service_blue connect_timeout: 0.25s type: strict_dns lb_policy: round_robin http2_protocol_options: {} hosts: - socket_address: address: service_blue port_value: 80 - name: service_green connect_timeout: 0.25s type: strict_dns lb_policy: round_robin http2_protocol_options: {} hosts: - socket_address: address: service_green port_value: 80 - name: service_red connect_timeout: 0.25s type: strict_dns lb_policy: round_robin http2_protocol_options: {} hosts: - socket_address: address: service_red port_value: 80 To continue, go to github\nHTTP Routing: Routing based on Header Condition Key definition 1 - virtual_hosts in front-envoy.yaml\nvirtual_hosts: - name: backend domains: - \u0026#34;*\u0026#34; routes: - match: prefix: \u0026#34;/service/blue\u0026#34; headers: - name: \u0026#34;x-canary-version\u0026#34; exact_match: \u0026#34;service_green\u0026#34; route: cluster: service_green - match: prefix: \u0026#34;/service/blue\u0026#34; route: cluster: service_blue - match: prefix: \u0026#34;/service/red\u0026#34; route: cluster: service_red Key definition 2 - clusters in front-envoy.yaml\nclusters: - name: service_blue connect_timeout: 0.25s type: strict_dns lb_policy: round_robin http2_protocol_options: {} hosts: - socket_address: address: service_blue port_value: 80 - name: service_green connect_timeout: 0.25s type: strict_dns lb_policy: round_robin http2_protocol_options: {} hosts: - socket_address: address: service_green port_value: 80 - name: service_red connect_timeout: 0.25s type: strict_dns lb_policy: round_robin http2_protocol_options: {} hosts: - socket_address: address: service_red port_value: 80 To continue, go to github\nHTTP Routing: Blue Green Traffic Splitting Key definition 1 - virtual_hosts in front-envoy.yaml\nvirtual_hosts: - name: backend domains: - \u0026#34;*\u0026#34; routes: - match: prefix: \u0026#34;/service/blue\u0026#34; route: weighted_clusters: clusters: - name: service_green weight: 10 - name: service_blue weight: 90 - match: prefix: \u0026#34;/service/red\u0026#34; route: cluster: service_red Key definition 2 - clusters in front-envoy.yaml\nclusters: - name: service_blue connect_timeout: 0.25s type: strict_dns lb_policy: round_robin http2_protocol_options: {} hosts: - socket_address: address: service_blue port_value: 80 - name: service_green connect_timeout: 0.25s type: strict_dns lb_policy: round_robin http2_protocol_options: {} hosts: - socket_address: address: service_green port_value: 80 - name: service_red connect_timeout: 0.25s type: strict_dns lb_policy: round_robin http2_protocol_options: {} hosts: - socket_address: address: service_red port_value: 80 To continue, go to github\nFault Injection Fault injection is a technique for improving the coverage of a test by introducing faults to test code paths, in particular error handling code paths, that might otherwise rarely be followed. The filter ( http_filters in the demo ) can be used to inject delays and abort requests with user-specified error codes.\nFront-proxy configurations are the same as the ones in HTTP Routing: Simple Match Routing. Differences from HTTP Routing: Simple Match Routing are the following 2 fault injections:\nFault injection abort (50% of requests will be aborted with 503 error code) for the requests to service_red Fault injection delay (50% of requests will be 10 seconds delayed) for the requests to service_blue Key definition 1 - http_filters in service-envoy-fault-injection-abort.yaml\nhttp_filters: - name: envoy.fault config: abort: http_status: 503 percentage: numerator: 50 denominator: HUNDRED For numerator and denominator of percentage, see type.FractionalPercent\nKey definition 2 - http_filters in service-envoy-fault-injection-delay.yaml\nhttp_filters: - name: envoy.fault config: delay: type: fixed fixed_delay: 10s percentage: numerator: 50 denominator: HUNDRED For fixed_delay and percentage of delay injection, see config.filter.fault.v2.FaultDelay\nTo continue, go to github\nCircuit Breaker Circuit Breaking lets you configure failure thresholds that ensure safe maximums after which these requests stop. This allows for a more graceful failure, and time to respond to potential issues before they become larger.\nCircuit Breaker is configured in service_red such that Circuit Breaker will be triggered with the following conditions: Envoy makes more than max connection#:1 Envoy makes more than max parallel requests#:1 Key definition - clusters in service-envoy-circuitbreaker.yaml\nclusters: - name: local_service connect_timeout: 0.25s type: strict_dns lb_policy: round_robin circuit_breakers: thresholds: max_connections: 1 max_pending_requests: 1 max_requests: 1 hosts: - socket_address: address: 127.0.0.1 port_value: 8080 For the detail of circuit_breakers configuration, see cluster.CircuitBreakers\nTo continue, go to github\nTimeouts and Retries Front-proxy configurations are the same as the ones in HTTP Routing: Simple Match Routing. Differences from HTTP Routing: Simple Match Routing are the following 2 additional behaviors:\nTimeouts (5 seconds) for the request to service_blue Retries that Envoy will attempt to do if service_red responds with any 5xx response code For Service Containers, delay fault injection and abort fault injection are configured in service_blue and service_red respectively (which are the same configuration as the ones in Fault Injection Demo)\nKey definition - virtual_hosts in front-envoy.yaml\nvirtual_hosts: - name: backend domains: - \u0026#34;*\u0026#34; routes: - match: prefix: \u0026#34;/service/blue\u0026#34; route: cluster: service_blue timeout: 5s - match: prefix: \u0026#34;/service/green\u0026#34; route: cluster: service_green - match: prefix: \u0026#34;/service/red\u0026#34; route: cluster: service_red retry_policy: retry_on: \u0026#34;5xx\u0026#34; num_retries: 3 per_try_timeout: 5s timeout: (Duration) Specifies the timeout for the route. If not specified, the default is 15s. For more detail, see timeout section in RouteAction retry_policy indicates the retry policy for all routes in this virtual host. For more detail on retry_policy, see route.RetryPolicy To continue, go to github\n","permalink":"https://unofficialism.info/posts/envoy-proxy-demos/","summary":"Set of demos to demonstrate Envoy Proxy features\nHTTP Routing: Simple Match Routing All traffic is routed by the front envoy to the service containers. Internally the traffic is routed to the service envoys, then the service envoys route the request to the flask app via the loopback address. In this demo, all traffic is routed to the service envoys like this:\nA request (path /service/blue \u0026amp; port 8000) is routed to service_blue A request (path /service/green \u0026amp; port 8000) is routed to service_green A request (path /service/red \u0026amp; port 8000) is routed to service_red Key definition 1 - virtual_hosts in front-envoy.","title":"Set of Envoy Proxy features demos"},{"content":"Today (Sept 25, 2018 JST), Azure Functions supports Python development using Python 3.6 on the Functions v2 (cross-platform) runtime. You can now use your Python code and dependencies on Linux-based Functions. This is an article on quick start with Azure Functions V2 Python (Preview) showing how you can quickly start Python function development on Azure Function V2 runtime.\n1. Prerequisites for Buidling \u0026amp; Testing Locally Python 3.6 (For Python function apps, you have to be running in a venv) Azure Functions Core Tools 2.0.3 or later Prerequisite 1 - Python version This is how you switch your python version using venv.\nFirst of all, install Python 3.6 if you don\u0026rsquo;t have on your local environemnt.\n$ python3.6 -V Python 3.6.1 Then, to build and test Python function with Azure Functions Core Tools (you\u0026rsquo;ll install after this), you need to setup a Python 3.6 virtual environemnt using venv (NOT, pyenv or some other virtual env tools).\n$ python -V Python 2.7.1 # create and activate virutal environemnt named \u0026#34;venv3.6\u0026#34; $ python3.6 -m venv venv3.6 $ source venv3.6/bin/activate $ Python -V Python 3.6.1 [NOTE] As virtualenv (venv) was included in Python3.3, you don\u0026rsquo;t need to install venv separately. It\u0026rsquo;s already in your Python 3.6\nPrerequisite 2 - Azure Functions Core Tools You need to install azure-functions-core-tools version 2.0.3 or later for buiding \u0026amp; testing Python functions on Azure Functions V2 runtime.\n# Check current package version (only if you already have azure-functions-core-tools installed) $ func --version 2.0.1-beta.35 $ npm list -g --depth=0 |grep azure-functions-core-tools ‚îú‚îÄ‚îÄ azure-functions-core-tools@2.0.1-beta.35 # Check available package versions $ npm info azure-functions-core-tools versions \u0026#39;2.0.1-beta.31\u0026#39;, \u0026#39;2.0.1-beta.32\u0026#39;, \u0026#39;2.0.1-beta.33\u0026#39;, \u0026#39;2.0.1-beta.34\u0026#39;, \u0026#39;2.0.1-beta.35\u0026#39;, \u0026#39;2.0.1-beta.37\u0026#39;, \u0026#39;2.0.1-beta.38\u0026#39;, \u0026#39;2.0.1-beta.39\u0026#39;, \u0026#39;2.0.1-beta.23-1\u0026#39;, \u0026#39;2.0.1-beta1.15\u0026#39;, \u0026#39;2.0.2\u0026#39;, \u0026#39;2.0.3\u0026#39; ] # Install speicific package version - 2.0.3 $ npm install -g azure-functions-core-tools@2.0.3 $ func --version 2.0.3 2. Create Python Function and run locally 2-1. Create Python Functions Project Create a local Python Functions project - v2projects\n$ func init v2projects --worker-runtime python Installing wheel package Installing azure-functions==1.0.0a4 package Installing azure-functions-worker==1.0.0a4 package Running pip freeze Writing .gitignore Writing host.json Writing local.settings.json Writing /Users/yoichika/dev/github/azure-functions-python-samples/v2projects/.vscode/extensions.json A new folder named v2projects is created. Then, change directory to this folder\n$ cd v2projects 2-2. Create a python function Check function template list\n$ func templates list C# Templates: Blob trigger Cosmos DB trigger Durable Functions activity Durable Functions HTTP starter Durable Functions orchestrator Event Grid trigger Event Hub trigger HTTP trigger Outlook message webhook creator Outlook message webhook deleter Outlook message webhook handler Outlook message webhook refresher Microsoft Graph profile photo API Queue trigger SendGrid Service Bus Queue trigger Service Bus Topic trigger Timer trigger JavaScript Templates: Blob trigger Cosmos DB trigger Event Grid trigger HTTP trigger Queue trigger SendGrid Service Bus Queue trigger Service Bus Topic trigger Timer trigger Python Templates: Blob trigger Cosmos DB trigger Event Grid trigger Event Hub trigger HTTP trigger Queue trigger Service Bus Queue trigger Service Bus Topic trigger Timer trigger Create a python funciton with \u0026ldquo;HTTP trigger\u0026rdquo; template\n$ func new --language Python --template \u0026#34;HTTP trigger\u0026#34; --name HttpTriggerPython Select a template: HTTP trigger Function name: [HttpTriggerPython] Writing /Users/yoichika/dev/github/azure-functions-python-samples/v2projects/HttpTriggerPython/sample.dat Writing /Users/yoichika/dev/github/azure-functions-python-samples/v2projects/HttpTriggerPython/__init__.py Writing /Users/yoichika/dev/github/azure-functions-python-samples/v2projects/HttpTriggerPython/function.json The function \u0026#34;HttpTriggerPython\u0026#34; was created successfully from the \u0026#34;HTTP trigger\u0026#34; template. 2-3. Local Testing Run the Functions host locally.\n$ func host start Then, send a test requst to the given endpoint for the HttpTrigger function\n$ curl http://localhost:7071/api/HttpTriggerPython?name=AzureFunctionV2 Hello AzureFunctionV2! 3. Create Linux FunctionApps (Preview Consumption App) Now you create Functions App to deploy and run your Python functions on Azure. You actually need Linux V2 Function Apps as publishing Python functions is only supported for Linux Function Apps. So let\u0026rsquo;s create the Azure Functions Linux Consumption App (which is in preview as of today Sept 25, 2018 JST).\n3-1. Whitelist request for accessing the Azure Functions Linux Consumption (preview) As guided in Azure Functions on Linux Preview, you need to email linuxazurefunctions at Microsoft dot com with your Azure subscription ID to get your ID whitelisted to access the Azure Functions Linux Consumption (Preview). [NOTE] This is only needed during its preview preriod.\n3-2. Install the Azure CLI extension for the Azure Functions Linux Consumption preview As a prerequisite, you need to install the Azure CLI extension for the Azure Functions Linux Consumption preview. Here is how you do:\n$ curl \u0026#34;https://functionscdn.azureedge.net/public/docs/functionapp-0.0.1-py2.py3-none-any.whl\u0026#34; \\ -o functionapp-0.0.1-py2.py3-none-any.whl $ az extension add --source functionapp-0.0.1-py2.py3-none-any.whl For more detail, see this doc\n3-3. Create a resource group RESOURCE_GROUP=\u0026#34;RG-azfuncv2\u0026#34; REGION=\u0026#34;eastus\u0026#34; az group create --name $RESOURCE_GROUP --location $REGION 3-4. Create an Azure Storage Account STORAGE_ACCOUNT=\u0026#34;azfuncv2linuxstore\u0026#34; az storage account create --name $STORAGE_ACCOUNT \\ --location $REGION \\ --resource-group $RESOURCE_GROUP \\ --sku Standard_LRS 3-5. Create a Empty Function App on Linux (Consumption Plan) Give your function app name to APP_NAME variable, and execute az command like this.\nAPP_NAME=\u0026#34;yoichikaazfuncv2linux001\u0026#34; az functionapp createpreviewapp --name $APP_NAME \\ --resource-group $RESOURCE_GROUP \\ --storage-account $STORAGE_ACCOUNT \\ -l $REGION \\ --runtime python \\ --is-linux (output) Your Linux, cosumption plan, function app \u0026#39;yoichikaazfuncv2linux001\u0026#39; has been successfully created but is not active until content is published usingAzure Portal or the Functions Core Tools. [NOTE] The Function App name needs to be unique across all apps in Azure.\nNow you\u0026rsquo;re ready to publish your functions to the App!\n4. Publish the Python Function You publish the Python functions to the function app ( named yoichikaazfuncv2linux001 here )\n# func azure functionapp publish \u0026lt;app_name\u0026gt; $ func azure functionapp publish yoichikaazfuncv2linux001 --force Getting site publishing info... pip download -r /Users/yoichika/dev/github/azure-functions-python-samples/v2projects/requirements.txt --dest /var/folders/mn/xw3hp_854lvb5yr2m_00s7sm0000gn/T/azureworkerry44_fwz pip download --no-deps --only-binary :all: --platform manylinux1_x86_64 --python-version 36 --implementation cp --abi cp36m --dest /var/folders/mn/xw3hp_854lvb5yr2m_00s7sm0000gn/T/azureworkerpcdk1t4g azure_functions_worker==1.0.0a4 pip download --no-deps --only-binary :all: --platform manylinux1_x86_64 --python-version 36 --implementation cp --abi cp36m --dest /var/folders/mn/xw3hp_854lvb5yr2m_00s7sm0000gn/T/azureworkerpcdk1t4g azure_functions==1.0.0a4 pip download --no-deps --only-binary :all: --platform manylinux1_x86_64 --python-version 36 --implementation cp --abi cp36m --dest /var/folders/mn/xw3hp_854lvb5yr2m_00s7sm0000gn/T/azureworkerpcdk1t4g protobuf==3.6.1 pip download --no-deps --only-binary :all: --platform manylinux1_x86_64 --python-version 36 --implementation cp --abi cp36m --dest /var/folders/mn/xw3hp_854lvb5yr2m_00s7sm0000gn/T/azureworkerpcdk1t4g grpcio_tools==1.14.2 pip download --no-deps --only-binary :all: --platform manylinux1_x86_64 --python-version 36 --implementation cp --abi cp36m --dest /var/folders/mn/xw3hp_854lvb5yr2m_00s7sm0000gn/T/azureworkerpcdk1t4g setuptools==40.4.3 pip download --no-deps --only-binary :all: --platform manylinux1_x86_64 --python-version 36 --implementation cp --abi cp36m --dest /var/folders/mn/xw3hp_854lvb5yr2m_00s7sm0000gn/T/azureworkerpcdk1t4g grpcio==1.14.2 pip download --no-deps --only-binary :all: --platform manylinux1_x86_64 --python-version 36 --implementation cp --abi cp36m --dest /var/folders/mn/xw3hp_854lvb5yr2m_00s7sm0000gn/T/azureworkerpcdk1t4g six==1.11.0 Preparing archive... Uploading content... Upload completed successfully. Deployment completed successfully. Removing \u0026#39;WEBSITE_CONTENTSHARE\u0026#39; from \u0026#39;yoichikaazfuncv2linux001\u0026#39; Removing \u0026#39;WEBSITE_CONTENTAZUREFILECONNECTIONSTRING\u0026#39; from \u0026#39;yoichikaazfuncv2linux001\u0026#39; Syncing triggers... [NOTE]\nif you run func azure functionapp publish without --force opiton, you\u0026rsquo;ll come up with the following the message: Your app is configured with Azure Files for editing from Azure Portal. To force publish use --force. This will remove Azure Files from your app. Please be noted that when deployging from func command( ie, running from a package), the file system in Azure Function App is read-only and no changes can be made to the files. To make any changes update the content in your zip file and WEBSITE_RUN_FROM_PACKAGE app setting. Looks like pulishing has completed successfully, so let\u0026rsquo;s access to the function on Azure\n$ curl https://yoichikaazfuncv2linux001.azurewebsites.net/api/HttpTriggerPython?name=AzureFunctionV2 Hello AzureFunctionV2! Enjoy Azure Functions V2 Python!\nLINKS azure-functions-python-worker wiki: Create your first Python function Azure Functions on Linux Preview Create your first function running on Linux using the Azure CLI (preview) ","permalink":"https://unofficialism.info/posts/quick-start-with-azure-function-v2-python-preview/","summary":"Today (Sept 25, 2018 JST), Azure Functions supports Python development using Python 3.6 on the Functions v2 (cross-platform) runtime. You can now use your Python code and dependencies on Linux-based Functions. This is an article on quick start with Azure Functions V2 Python (Preview) showing how you can quickly start Python function development on Azure Function V2 runtime.\n1. Prerequisites for Buidling \u0026amp; Testing Locally Python 3.6 (For Python function apps, you have to be running in a venv) Azure Functions Core Tools 2.","title":"Quick Start with Azure Functions V2 Python (Preview)"},{"content":"This is an article on how you can configure Service Account and RoleBinding in order to make Dashbaord work. As of release Kubernetes v1.7, Dashboard no longer has full admin privileges granted by default. All the privileges are revoked and only minimal privileges granted, that are required to make Dashboard work. With default priviledge, you\u0026rsquo;ll see the following errors showed up on the Dashboard.\n[Azure Kubernetes Service (AKS)] RBAC is enabled by default Since Azure CLI version 2.0.40, RBAC is enabled by default. As you can see in the Azure command help, your cluster is RBAC enabled unless you specify --disable-rbac during the creation of the cluster.\n$ az --version azure-cli (2.0.43) $ az aks create --help --disable-rbac : Disable Kubernetes Role-Based Access Control. --enable-rbac -r [Deprecated] : Enable Kubernetes Role-Based Access Control. Default: enabled. Argument \u0026#39;enable_rbac\u0026#39; has been deprecated and will be removed in a future release. Use \u0026#39;--disable-rbac\u0026#39; instead. Option 1: Access to Dashboard with your Service Account In option 1, I introduce how to give priviledge your Service Account and access to the Dashboard with the account. Actually there are a couple of authorization options, and here I introduce how to authorize with Bear Token\n[NOTE] According to this,\nAs of release 1.7 Dashboard supports user authentication based on:\nAuthorization: Bearer header passed in every request to Dashboard. Supported from release 1.6. Has the highest priority. If present, login view will not be shown. Bearer Token that can be used on Dashboard login view. Username/password that can be used on Dashboard login view (Disabled by default) Kubeconfig file that can be used on Dashboard login view 1-1. Create your Service Account for Dashboard access First of all, create your Service Account my-admin-user like this:\n$ kubectl create serviceaccount my-admin-user -n kube-system Or you can create the Service Account with the following YAML my-sa.yaml and deploying it with kubectl create -f my-sa.yaml:\n# my-sa.yaml apiVersion: v1 kind: ServiceAccount metadata: name: my-admin-user namespace: kube-system Check if your Service Account (my-admin-user) has been added.\n$ kubectl get sa -n kube-system NAME SECRETS AGE addon-http-application-routing-external-dns 1 9d addon-http-application-routing-nginx-ingress-serviceaccount 1 9d attachdetach-controller 1 9d certificate-controller 1 9d clusterrole-aggregation-controller 1 9d cronjob-controller 1 9d daemon-set-controller 1 9d default 1 9d deployment-controller 1 9d disruption-controller 1 9d endpoint-controller 1 9d generic-garbage-collector 1 9d heapster 1 9d horizontal-pod-autoscaler 1 9d job-controller 1 9d kube-dns 1 9d kube-proxy 1 9d kube-svc-redirector 1 9d kubernetes-dashboard 1 9d my-admin-user 1 15s namespace-controller 1 9d node-controller 1 9d persistent-volume-binder 1 9d pod-garbage-collector 1 9d pv-protection-controller 1 9d pvc-protection-controller 1 9d replicaset-controller 1 9d replication-controller 1 9d resourcequota-controller 1 9d route-controller 1 9d service-account-controller 1 9d service-controller 1 9d statefulset-controller 1 9d ttl-controller 1 9d tunnelfront 1 9d 1-2. Binding the role cluster-admin to the Service Account Create a ClusterRoleBinding which gives the role cluster-admin (= full admin priviledge) to the ServiceAccount my-admin-user\n$ kubectl create clusterrolebinding my-admin-user -n kube-system --clusterrole=cluster-admin --serviceaccount=kube-system:my-admin-user Or you can grant the priviledges with the following YAML my-sa-binding.yaml and deploying it with kubectl create -f my-sa-binding.yaml:\n# my-sa-binding.yaml apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: my-admin-user roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: my-admin-user namespace: kube-system 1-3. Authentication Option - Give Bear Token at Dashboard login view 1-3-1. Get the Token of the ServiceAccount $ kubectl get secret $(kubectl get serviceaccount my-admin-user -n kube-system -o jsonpath=\u0026#34;{.secrets[0].name}\u0026#34;) -o jsonpath=\u0026#34;{.data.token}\u0026#34; -n kube-system | base64 --decode Or you can obtain the token step by step like this:\n# Get secret name for my-admin-user $ kubectl get serviceaccount my-admin-user -n kube-system -o yaml apiVersion: v1 kind: ServiceAccount metadata: creationTimestamp: 2018-08-11T06:53:34Z name: my-admin-user namespace: kube-system resourceVersion: \u0026#34;1075968\u0026#34; selfLink: /api/v1/namespaces/kube-system/serviceaccounts/my-admin-user uid: 44142169-9d33-11e8-b7d0-de454880a5dc secrets: - name: my-admin-user-token-nzp4f # Get secret string and base64 decoded it $ kubectl get secret my-admin-user-token-nzp4f -n kube-system -o jsonpath=\u0026#34;{.data.token}\u0026#34; | base64 --decode eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJteS1hZG1pbi11c2VyLXRva2VuLW56cDRmIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6Im15LWFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI0NDE0MjE2OS05ZDMzLTExZTgtYjdkMC1kZTQ1NDg4MGE1ZGMiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06bXktYWRtaW4tdXNlciJ9.2ulwCWd7MOnQjoecAY2NoleIxcHD8tda97ud3cK-kHWmdCodAejvddA4YjYozzBu2bWNA83aVTvKAn5-Uv1DC47U5FPh2LXAXNPXn4PyrdLO7TFZdHYmkvUgJKsg25vJvJmsWF9eQOinjjh_g16aGgdxrWz0NGJz5d1eE5GDP5NXXTTgxXlD_GFQduhlq8kc89dhpDUXMYe60-KzZvNaQhIskPsnxHMix1JrHEdtfciFhHRb2CBNjPWfcg455NGoS9S-k0qTfoIHYJC627p75E8TGqyTIa8TSg8vaif4XWgeg_OZWqEIGHTIrhEAGO4ElFijdZuzAg2-v9BGWe8i4q1i70ca5CwReJTG8t13eeOoEkq--VbhDAMY6rxmx-hi9dwf-zjsD233MdHJLh1yRi0eo_k5ov7fwDDsLQXeCTBIjSAzorvXseWr5m9sQ7yREbjDXCOsHbYo5xNV5ii-yOlxYyiqPxZZnnSwzllj1lwPDLSL0MyxkR9siF52vbkNDe6qdYYMqPtA-jTMIw_iLlB-WeN1Fx8423c4x5wV6IGPJZFuOYZhB0ra4jfRSS39vesaNodW8RjHUiuOSVA8_j-DxwOxa8prynALFWGswSMy6PfVQydouU6vammeqPBel9-IqBeTXY-57YumELG1PdcOcxdrBCZUlxBvJWbItxA 1-3-2. Give Bear Token at Dashboard login view Now that you have a bear token that you need to grant the full priviledges to your Service Account, let\u0026rsquo;s access to the Dashboard login view.\nFirst of all, create a proxy to the dashboard:\n$ kubectl proxy Starting to serve on 127.0.0.1:8001 Then, access to the Dashboard login page:\n$ open http://localhost:8001/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy/#!/login Or if it\u0026rsquo;s on Azure, you can leverage Azure CLI command to access the Dashboard like this:\n$ az aks browse --resource-group \u0026lt;RESOURCE_GROUP\u0026gt; --name \u0026lt;CLUSTER_NAME\u0026gt; $ open http://127.0.0.1:8001/#!/login You will see the following Dashboard login view. Choose Token option and enter the bear token you got above. You will be able to access and operate with the Dashboard without any errors. Easy login by giving Authorization header using Browser extention As introduced in here, install Requestly browser plugin and configure to make Dashboard use authorization header. You simply need to configure the plugin to pass the following header in accessing the dashboard:\nAuthorization: Bearer \u0026lt;token\u0026gt; HERE is the example screen shot:\nOption2: Granting admin privileges to Dashboard\u0026rsquo;s Service Account In Option 2, I introduce how to give full privilege (role: cluster-admin) to the Dashboard\u0026rsquo;s Service Account kubernetes-dashboard. With this option, you can skip the authorization process that you do in the option 1 to access Dashboard. However, as mentioned here, granting admin privileges to Dashboard\u0026rsquo;s Service Account might be a security risk.\nFirst of all, create a ClusterRoleBinding which gives the role cluster-admin (= full admin priviledge) to the ServiceAccount kubernetes-dashboard\n$ kubectl create clusterrolebinding kubernetes-dashboard -n kube-system --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard Or you can do the same with the following YAML dashboard-sa-binding.yaml and deploying it with kubectl create -f dashboard-sa-binding.yaml:\n# dashboard-sa-binding.yaml apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: kubernetes-dashboard labels: k8s-app: kubernetes-dashboard roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: kubernetes-dashboard namespace: kube-system Finally, access to the Dashboard. You\u0026rsquo;ll be able to access and operate without any errors.\nLINKS Access Control for Dashboard Service Account Permissions in Using RBAC Authorization @ kubernetesio, ","permalink":"https://unofficialism.info/posts/accessing-rbac-enabled-kubernetes-dashboard/","summary":"This is an article on how you can configure Service Account and RoleBinding in order to make Dashbaord work. As of release Kubernetes v1.7, Dashboard no longer has full admin privileges granted by default. All the privileges are revoked and only minimal privileges granted, that are required to make Dashboard work. With default priviledge, you\u0026rsquo;ll see the following errors showed up on the Dashboard.\n[Azure Kubernetes Service (AKS)] RBAC is enabled by default Since Azure CLI version 2.","title":"Accessing RBAC enabled Kubernetes Dashboard"},{"content":"I‚Äôve moved my blog site from Wordpress to Jekyll based Github page. There are a few reasons for this:\nI wanted to manage my blog data on Github I wanted to switch from HTML based to Markdown I wanted more static approach like generating once, not dynamically rendering for every request (for performance reason) After a few minutes of googling, I came up with Jekyll and found it much easier to manage my blog data with Jekyll than with Wordpress. I love Jekyll\u0026rsquo;s simplicity. For the one who want to do the same migration, I\u0026rsquo;d like to share memo on how I migrated the blog site from Wordpress to Jekyll based Github page.\nWhat to do (What I\u0026rsquo;ve done) [ENV] Wordpress is running on Ubuntu 16.04, and I work on all migration works on MacOS (10.13.5) Importing my posts from a self-hosted Wordpress Install jekyll-import ruby gem and all additional packages needed to import my posts from a self-hosted Wordpress Import my posts from the Wordpress Convert HTML files to Markdown format files (including manual works) Publish the site uisng Jekyll and Github Pages Check ruby and github-pages version used in Github page, and install the same github-pages gem on the same ruby version Run Jekyll locally and verify the site content Create Github project for hosting the site Publish the site to Github uisng git Setup Custom domain Tips Importing my posts from a self-hosted Wordpress Install ruby gem packages to import posts from Wordpress First, check ruby version as jekyll require \u0026gt; ruby-2.X, and upgrade its version if it\u0026rsquo;s not \u0026gt; ruby-2.X (I use rbenv to manage multiple ruby versions on MacOS)\n$ ruby --version ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin17] Install jekyll-import ruby gem and all additional packages needed to import my posts from a self-hosted Wordpress\n$ gem install jekyll-import # Additional packages for importing from Wordpress $ gem install sequel $ gem install unidecode $ gem install htmlentities $ gem install mysql2 Import my posts from the Wordpress Run the following command to import my posts from the hosted Wordpress. Make sure that MySQL server used in Wordpress is accessible\nruby -rubygems -e \u0026#39;require \u0026#34;jekyll-import\u0026#34;; JekyllImport::Importers::WordPress.run({ \u0026#34;dbname\u0026#34; =\u0026gt; \u0026#34;\u0026lt;db name\u0026gt;\u0026#34;, \u0026#34;user\u0026#34; =\u0026gt; \u0026#34;\u0026lt;db user\u0026gt;\u0026#34;, \u0026#34;password\u0026#34; =\u0026gt; \u0026#34;\u0026lt;db password\u0026gt;\u0026#34;, \u0026#34;host\u0026#34; =\u0026gt; \u0026#34;\u0026lt;db host or IP\u0026gt;\u0026#34;, \u0026#34;port\u0026#34; =\u0026gt; \u0026#34;\u0026lt;db port: 3306\u0026gt;\u0026#34;, \u0026#34;socket\u0026#34; =\u0026gt; \u0026#34;\u0026#34;, \u0026#34;table_prefix\u0026#34; =\u0026gt; \u0026#34;wp_\u0026#34;, \u0026#34;site_prefix\u0026#34; =\u0026gt; \u0026#34;\u0026#34;, \u0026#34;clean_entities\u0026#34; =\u0026gt; true, \u0026#34;comments\u0026#34; =\u0026gt; false, \u0026#34;categories\u0026#34; =\u0026gt; true, \u0026#34;tags\u0026#34; =\u0026gt; true, \u0026#34;more_excerpt\u0026#34; =\u0026gt; true, \u0026#34;more_anchor\u0026#34; =\u0026gt; true, \u0026#34;status\u0026#34; =\u0026gt; [\u0026#34;publish\u0026#34;] })\u0026#39; All imported blog ports (in HTML) are stored in _posts directory. See also Jekyll documentation\nConvert HTML files to Markdown format files (including manual works) Frist, I converted all HTML files stored in _posts directory to markdown using h2m npm package\n# Install h2m npm package $ npm install h2m -g # Here is how to conver html to markdown using h2m # h2m test.html \u0026gt; test.md # Run the following one liner converted all HTML files to markdown for h in `ls -1 *.html`;do echo $h; m=$(echo $h | sed s/\\.html//g).md; h2m $h \u0026gt; $m; ;done Then, do some manual modification to *.md files. Markdown don\u0026rsquo;t support all HTML components such as embeded, iframe, align, etc. What I did for this modification parts are basically:\nAll embeded parts such as Youtube video, slideshare, and gist links (Markdown doesn\u0026rsquo;t support embeded tags) Table tags part (I used Wordpress Table plugin that express table with very special tag, which of course can not be automatically convered to Markdown ) Markdown CheatSheet was very helpful in this part\nPublish the site uisng Jekyll and Github Pages Install the same github-pages gem and ruby as the ones used in Github page Go to this page to get ruby and github-pages version used in Github page. This time it was\nruby: 2.4.2 github-pages: 186 Then, I installed the exactly the same version of ruby and github-pages gem on my local\n# Install Ruby using rbenv $ rbenv install 2.4.2 $ rbenv global 2.4.2 # Install github-pages ruby gem package $ gem install github-pages -v 186 Run Jekyll locally and verify the site content Create Jekyll template site and copy all blog pages (Markdown) on to _posts directory under the site template root\n# Check jekyll version $ jekyll -v jekyll 3.7.3 # Create new Jekyll template site with jekyll command (here I create template site named `myblog`) $ jekyll new myblog $ tree myblog myblog ‚îú‚îÄ‚îÄ 404.html ‚îú‚îÄ‚îÄ Gemfile ‚îú‚îÄ‚îÄ _config.yml ‚îú‚îÄ‚îÄ _posts ‚îÇ¬†‚îî‚îÄ‚îÄ 2018-07-06-welcome-to-jekyll.markdown ‚îú‚îÄ‚îÄ about.md ‚îî‚îÄ‚îÄ index.md # Remove Gemfile # Ruby will use the contents of your Gemfile to build your Jekyll site. So you basically add the same version of github-pages and ruby to Gemfile as the ones in Github Pages, but I removed it to make life simple as I\u0026#39;ve already synced the local version of github-pages and ruby with the ones in Github Pages but. If you possibly run Jekyll site on multiple environments, it\u0026#39;s definitly better to manage package versions with Gemfile $ rm Gemfile # Copy all blog pages (Markdown) on to `_posts` directory under the site template root $ cp *.md _posts/ Run the local webserver like this and verify the site content:\n$ jekyll s $ curl http://localhost:4000 See also Setting up your GitHub Pages site locally with Jekyll\nCreate Github project for hosting the site Create my user site by following instructions in https://pages.github.com/. In this case, I\u0026rsquo;ve created yokawasa.github.io under my account https://github.com/yokawasa, by which I can access *.html|*.md in github.com/yokawasa/yokawasa.github.io with the URL of https://yokawasa.github.io/(*.html|*.md)\nPublish the site to Github uisng git Copy all files under Jekyll site content that I\u0026rsquo;ve verified onto yokawasa.github.io and push them to Github\n$ git clone https://github.com/yokawasa/yokawasa.github.io $ cp -pr myblog/* yokawasa.github.io/ # make sure to copy .gitignore file as well $ cd yokawasa.github.io $ git add -all $ git commit -m \u0026#34;Initial commit\u0026#34; $ git push -u origin master $ open https://yokawasa.github.io Setup Custom domain I added my custom domain (unofficialism.info) to my Github page site by following Quick start: Setting up a custom domain. Here are what I\u0026rsquo;ve actually done:\nFirst, check my current DNS record for my custom domain\n$ dig +noall +answer unofficialism.info unofficialism.info. 146 IN A XX.XXX.XXX.XX Then, follow my DNS provider\u0026rsquo;s instructions to create A records that point my custom domain to the following IP addresses (These are fixed IPs but these IPs can be obtained simply by running dig for username.github.com):\n185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 Confirm that the DNS record is set up correctly\n$ dig +noall +answer unofficialism.info unofficialism.info. 430 IN A 185.199.108.153 unofficialism.info. 430 IN A 185.199.109.153 unofficialism.info. 430 IN A 185.199.110.153 unofficialism.info. 430 IN A 185.199.111.153 In addition, add my custom domain for my GitHub Pages site in Github Page setting page by following Adding or removing a custom domain for your GitHub Pages site\nFinally, confirm the access to my Github page with my custom domain\n$ curl https://unofficialism.info ","permalink":"https://unofficialism.info/posts/moving-to-jekyll-based-github-page/","summary":"I‚Äôve moved my blog site from Wordpress to Jekyll based Github page. There are a few reasons for this:\nI wanted to manage my blog data on Github I wanted to switch from HTML based to Markdown I wanted more static approach like generating once, not dynamically rendering for every request (for performance reason) After a few minutes of googling, I came up with Jekyll and found it much easier to manage my blog data with Jekyll than with Wordpress.","title":"Moving to Jekyll based Github page"},{"content":"ÂÖàÊó•„ÄÅ4Êúà19Êó•„Å´ÈñãÂÇ¨„Åï„Çå„ÅüJapan Container Days v18.04„Å´„Å¶„ÄåKubernetes x PaaS ‚Äì „Ç≥„É≥„ÉÜ„Éä„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆNoOps„Å∏„ÅÆÊåëÊà¶„Äç„Å®„ÅÑ„ÅÜ„Çø„Ç§„Éà„É´„Åß„Çª„ÉÉ„Ç∑„Éß„É≥„ÇíÊãÖÂΩì„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„ÅÑ„Åü„ÄÇ„Åù„ÅÆÂêç„ÅÆÈÄö„Çä„É°„Ç§„É≥„ÅåKubernetes„Åß„ÄÅKubernetes„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å´„Åä„ÅÑ„Å¶NoOpsÔºàÈÅãÁî®„É¨„ÇπÔºâ„ÇíÁõÆÊåá„Åô„Åü„ÇÅ„ÅÆ„Å´„Å©„ÅÜ„ÅÑ„Å£„ÅüÂ∑•Â§´„Åå„Åß„Åç„Çã„ÅÆ„Åã„ÄÅ„Å©„ÅÜ„ÅÑ„Å£„Åü„ÇÇ„ÅÆ„ÇíÊ¥ªÁî®„Åó„Å¶„ÅÑ„Åë„Å∞„Çà„ÅÑ„ÅÆ„Åã„ÄÅ„Å®„ÅÑ„ÅÜÂÜÖÂÆπ„Åß„Åô„ÄÇ„Åì„ÅÆ„Éñ„É≠„Ç∞„Åß„ÅØJapan Container Days„Åß„ÅÆÁô∫Ë°®„Å´‰ΩøÁî®„Åó„Åü„Çπ„É©„Ç§„Éâ„ÅÆÂÖ±Êúâ„Å®„Çª„ÉÉ„Ç∑„Éß„É≥„Å´‰∏≠„ÅÆ„Çµ„É≥„Éó„É´„ÇÑ„Éá„É¢„Å´„Å§„ÅÑ„Å¶Ë£úË∂≥„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åè„ÄÇ\nSession Slides Kubernetes x PaaS ‚Äì „Ç≥„É≥„ÉÜ„Éä„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ NoOps„Å∏„ÅÆÊåëÊà¶ from Yoichi Kawasaki\nË£úË∂≥ÊÉÖÂ†± 1. Open Service Broker for Azure„ÅßAzure Database for MySQL„ÅÆÂà©Áî® „Çπ„É©„Ç§„Éâ„Åß„ÅäË¶ã„Åõ„Åó„ÅüÂÆüÈöõ„ÅÆ„Éï„Ç°„Ç§„É´„Çí‰Ωø„Å£„Å¶Azure Database for MySQL„ÅÆ„Çµ„Éº„Éì„Çπ„Ç§„É≥„Çπ„Çø„É≥„Çπ‰ΩúÊàê„ÄÅ„Éê„Ç§„É≥„Éá„Ç£„É≥„Ç∞„ÄÅ„Åù„Åó„Å¶ÂÆüÈöõ„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åã„Çâ„ÅÆÂà©Áî®„Åæ„Åß„ÅÆÊµÅ„Çå„ÇíÁ¥π‰ªã„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åè„ÄÇ\nOpen Service Broker for Azure„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆGithub„Å´„ÅÇ„Çã„Çµ„É≥„Éó„É´„Éï„Ç°„Ç§„É´mysql-instance.yaml„Å®mysql-binding.yaml„Çí‰Ωø„Å£„Å¶„Åù„Çå„Åû„ÇåServiceInstance„Å®ServiceBinding„Çí‰ΩúÊàê„Åô„Çã `\n# Provisioning the database, basic50 plan ... $ kubectl create -f mysql-instance.yaml # Wait until ServiceInstance named example-mysql-instance get ready \u0026#39;Status =\u0026gt; Ready\u0026#39;, # then execute the following to create a binding for this new database, $ kubectl create -f mysql-binding.yaml „Åì„Çå„Åßexample-mysql-secret„Å®„ÅÑ„ÅÜÂêçÂâç„ÅÆ„Ç∑„Éº„ÇØ„É¨„ÉÉ„Éà„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Åå‰ΩúÊàê„Åï„Çå„ÄÅ„Åù„Åì„Å´„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅåAzure Database for MySQL„Ç§„É≥„Çπ„Çø„É≥„Çπ„Å®„ÅÆÊé•Á∂öÂøÖË¶Å„Å™ÊÉÖÂ†±„ÅåÊ†ºÁ¥ç„Åï„Çå„Çã„ÄÇ„Åì„Åì„Åß„ÅØMySQL„Å´Êé•Á∂ö„Åó„Å¶ÂçòÁ¥î„Å™Âá¶ÁêÜ„Çí„Åô„Çã„Å†„Åë„ÅÆPython„Ç¢„Éó„É™„Åß„ÉÜ„Çπ„Éà„Åô„Çã„ÄÇ„Ç¢„Éó„É™„Çí„Éá„Éó„É≠„Ç§„É°„É≥„Éà„ÅÆ„Åü„ÇÅ„Å´‰∏ãË®òYAML (mysql-deploy.yaml)„ÇíÁî®ÊÑè„Åó„Åü„ÅåÊ≥®ÁõÆ„Åô„Åπ„Åç„ÅØYAML„ÅÆ‰∏≠„ÅßMySQL„ÅÆÊé•Á∂öÂøÖË¶Å„Å™ÊÉÖÂ†±„Çí„Ç∑„Éº„ÇØ„É¨„ÉÉ„Éàexample-mysql-secret„Åã„ÇâÂèñÂæó„Åó„Å¶„ÅÑ„ÇãÁÇπ„ÄÇ\napiVersion: apps/v1beta1 kind: Deployment metadata: name: sample-osba-mysql spec: replicas: 1 template: metadata: labels: app: sample-osba-mysql spec: containers: - name: osba-mysql-demo image: yoichikawasaki/sample-osba-mysql:0.0.1 ports: - containerPort: 80 env: - name: MYSQL_USER valueFrom: secretKeyRef: key: username name: example-mysql-secret - name: MYSQL_PASSWORD valueFrom: secretKeyRef: key: password name: example-mysql-secret - name: MYSQL_HOST valueFrom: secretKeyRef: key: host name: example-mysql-secret - name: MYSQL_DATABASE valueFrom: secretKeyRef: key: database name: example-mysql-secret „Åæ„Åü„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ‰∏≠„Åß„ÅØYAML„ÅßÊåáÂÆö„Åï„Çå„ÅüÁí∞Â¢ÉÂ§âÊï∞„Åã„ÇâMySQLÊé•Á∂ö„Å´ÂøÖË¶Å„Å™ÊÉÖÂ†±„ÇíÂèñÂæó„Åó„Å¶„ÅÑ„Çã„ÄÇ‰ª•‰∏ã„ÄÅ„Çµ„É≥„Éó„É´„Ç¢„Éó„É™„ÅÆ„Ç≥„Éº„Éâ(sample-osba-mysql.py)„ÄÇ\nimport MySQLdb as db import os # MySQL configurations MYSQL_USER = os.environ[\u0026#39;MYSQL_USER\u0026#39;] MYSQL_PASSWORD = os.environ[\u0026#39;MYSQL_PASSWORD\u0026#39;] MYSQL_HOST = os.environ[\u0026#39;MYSQL_HOST\u0026#39;] MYSQL_DATABASE = os.environ[\u0026#39;MYSQL_DATABASE\u0026#39;] print(MYSQL_USER) print(MYSQL_PASSWORD) print(MYSQL_HOST) print(MYSQL_DATABASE) def main(): conn = db.connect( user=MYSQL_USER, passwd=MYSQL_PASSWORD, host=MYSQL_HOST, db=MYSQL_DATABASE ) c = conn.cursor() sql = \u0026#39;drop table if exists test\u0026#39; c.execute(sql) sql = \u0026#39;create table test (id int, content varchar(32))\u0026#39; c.execute(sql) sql = \u0026#39;show tables\u0026#39; c.execute(sql) print(\u0026#39;===== table list =====\u0026#39;) print(c.fetchone()) # insert records sql = \u0026#39;insert into test values (%s, %s)\u0026#39; c.execute(sql, (1, \u0026#39;hoge\u0026#39;)) datas = [ (2, \u0026#39;foo\u0026#39;), (3, \u0026#39;bar\u0026#39;) ] c.executemany(sql, datas) # select records sql = \u0026#39;select * from test\u0026#39; c.execute(sql) print(\u0026#39;===== Records =====\u0026#39;) for row in c.fetchall(): print(\u0026#39;Id:\u0026#39;, row[0], \u0026#39;Content:\u0026#39;, row[1]) conn.commit() c.close() conn.close() if __name__ == \u0026#39;__main__\u0026#39;: main() „Åù„Çå„Åß„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å´„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Çí„Éá„Éó„É≠„Ç§„Åô„Çã\n$ kubectl create -f mysql-deploy.yaml ÂÖ®„Å¶„ÅÆÈÅéÁ®ã„ÅåÂïèÈ°å„Å™„Åë„Çå„Å∞„ÄÅ„Éá„Éó„É≠„Ç§Âæå„ÅÆPod„ÅÆ„É≠„Ç∞„Çí„Åø„Çã„Å®„ÄÅ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å™Âá∫Âäõ„ÅåÁ¢∫Ë™ç„Åß„Åç„Çã„ÅØ„Åö„Å†„ÄÇ„Åì„Çå„ÅØ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅåMySQL„Å®„ÅÆÊé•Á∂ö„Åó„Å¶Âá¶ÁêÜ„ÅåË°å„Çè„Çå„Åü„Åì„Å®„ÇíË°®„Åô„ÄÇ„Åì„Åì„Åß„ÅØstern„Çí‰Ωø„Å£„Å¶„É≠„Ç∞„ÇíÂèÇÁÖß„Åó„Å¶„ÅÑ„Çã„ÄÇ\n$ stern \u0026lt;„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆPodÂêç\u0026gt; + sample-osba-mysql-684ccd679f-nl252 ‚Ä∫ osba-mysql-demo sample-osba-mysql-684ccd679f-nl252 osba-mysql-demo o36e6ivtni@8ae3fca5-9b5c-471b-99d8-0eeb567c6acb sample-osba-mysql-684ccd679f-nl252 osba-mysql-demo sE8UFm5cN4tgIeNF sample-osba-mysql-684ccd679f-nl252 osba-mysql-demo 8ae3fca5-9b5c-471b-99d8-0eeb567c6acb.mysql.database.azure.com sample-osba-mysql-684ccd679f-nl252 osba-mysql-demo v8i0xxlerz sample-osba-mysql-684ccd679f-nl252 osba-mysql-demo ===== table list ===== sample-osba-mysql-684ccd679f-nl252 osba-mysql-demo (\u0026#39;test\u0026#39;,) sample-osba-mysql-684ccd679f-nl252 osba-mysql-demo ===== Records ===== sample-osba-mysql-684ccd679f-nl252 osba-mysql-demo Id: 1 Content: hoge sample-osba-mysql-684ccd679f-nl252 osba-mysql-demo Id: 2 Content: foo sample-osba-mysql-684ccd679f-nl252 osba-mysql-demo Id: 3 Content: bar 2. „Éá„É¢ - Virtual Kubelet + Azure Container Instances Demo Video: Image Processing with Virtual Kubelet + ACI Demo Demo Code: https://github.com/rbitia/aci-demos 3. „Éá„É¢ - Traffic Routing with Istio Demo Video: Traffic Routing with Istio Demo „Çª„ÉÉ„Ç∑„Éß„É≥‰∏≠„Å´ÊôÇÈñì„ÅåË∂≥„Çä„Å™„Åè„Å¶„ÉÅ„É©Ë¶ã„ÅõÁ®ãÂ∫¶„Åó„Åã„ÅäË¶ã„Åõ„Åß„Åç„Å™„Åã„Å£„Åü„Çµ„Éº„Éì„Çπ„É°„ÉÉ„Ç∑„É•„Å´IstioÔºàIstio-0.5.0Ôºâ„Çí‰Ωø„Å£„Åü„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„Éá„É¢„ÄÇ„Åõ„Å£„Åã„Åè„Å™„ÅÆ„Åß„Åì„Åì„ÅßÂÖ®„Å¶„ÅÆÊâãÈ†Ü„ÇíÁ¥π‰ªã„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åè„ÄÇ„Ç¢„Éó„É™„Å™ÂçòÁ¥î„Å™„Ç≥„É≥„ÉÜ„Éä„Ç§„É°„Éº„Ç∏„ÅÆ„Çø„Ç∞Âêç„ÇíË°®Á§∫„Åô„Çã„Å†„Åë„ÅÆFlask„Ç¢„Éó„É™„ÇíÂà©Áî®„Åó„Å¶„ÅÑ„Çã\nÂøÖË¶Å„Éï„Ç°„Ç§„É´‰∏ÄË¶ß\nmyversion-v1.yaml myversion-v2.yaml route-default-v1.yaml route-canary.yaml route-conditional-v2.yaml „Åæ„Åö„ÅØV1„Å®V2„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„Éá„Éó„É≠„Ç§„É°„É≥„Éà„ÄÇ„Åì„Åì„Åß„ÅØ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆManifest„Å´ÂØæ„Åó„Å¶istioctl„ÅÆkube-inject„ÅßIstio„ÅÆË®≠ÂÆö„ÅåÁµÑ„ÅøËæº„Åæ„Çå„ÅüManifest„ÇíÂÖÉ„Å´„Éá„Éó„É≠„Ç§„É°„É≥„Éà„Åó„Å¶„ÅÑ„Çã„ÄÇ\n## ver1.0 $ kubectl apply -f \u0026lt;(istioctl kube-inject --debug -f myversion-v1.yaml) ## ver2.0 $ kubectl apply -f \u0026lt;(istioctl kube-inject --debug -f myversion-v2.yaml) ‰∏äË®ò„ÅÆ„Éá„Éó„É≠„Ç§„É°„É≥„Éà„Åß‰Ωú„Çâ„Çå„ÅüIngress„Ç≥„É≥„Éà„É≠„Éº„É©„Éº„ÅÆIP„ÄÅPORT„ÇíÂèñÂæó„ÇíÊ¨°„ÅÆ„Çà„ÅÜ„Å´ÂèñÂæó„Åô„Çã„ÄÇ„Çµ„É≥„Éó„É´„Åß‰ΩøÁî®„Åó„Å¶„ÅÑ„ÇãFlask„Ç¢„Éó„É™„ÅßÊåáÂÆö„Åó„Å¶„ÅÑ„Çã„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Åå/version„Åß„ÅÇ„Çã„Åã„Çâ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÅØGATEWAY_IP:GATEWAY_PORT/version„Åå„Å®„Å™„Çã„ÄÇ\nGATEWAY_IP=$(kubectl get po -n istio-system -l \\ istio=ingress -n istio-system \\ -o \u0026#39;jsonpath={.items[0].status.hostIP}\u0026#39;) GATEWAY_PORT=$(kubectl get svc istio-ingress \\ -n istio-system -n istio-system \\ -o \u0026#39;jsonpath={.spec.ports[0].nodePort}\u0026#39;) GATEWAY_URL=$GATEWAY_IP:$GATEWAY_PORT echo $GATEWAY_URL „Åæ„Åö„ÅØ„ÄÅIstio„Å´ÂÖ®„Å¶„ÅÆ„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„Çív1„Ç¢„Éó„É™„Å´„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„Åô„Çã„Çà„ÅÜ„Å´Ë®≠ÂÆö„Åô„Çã\n$ istioctl create -f route-default-v1.yaml Ê¨°„ÅÆ„Çà„ÅÜ„Å´ÈÄ£Á∂ö„Åß„Ç¢„ÇØ„Çª„Çπ„Åó„Å¶ÂÖ®„Å¶„ÅÆ„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„ÅåV1„Å´„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç\n$ while true; do curl http://${GATEWAY_URL}/version; sleep 1; done I am v1.111111111 I am v1.111111111 I am v1.111111111 I am v1.111111111 Á∂ö„ÅÑ„Å¶„ÄÅIstio„Å´„Åï„Åç„Åª„Å©„ÅÆ100% V1„ÅÆË®≠ÂÆö„ÇíÂâäÈô§„Åó„Å¶„ÄÅÊñ∞„Åó„Åè90%„ÅÆ„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„Çív1„Ç¢„Éó„É™„Å´ 10%„ÇíV2„Ç¢„Éó„É™„Å´„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„Åô„Çã„Çà„ÅÜ„Å´Ë®≠ÂÆö„Åô„Çã\n$ istioctl delete routerule myversion-default-v1 -n default $ istioctl create -f route-canary.yaml Ââç„Å®ÂêåÊßò„Å´ÈÄ£Á∂ö„Åß„Ç¢„ÇØ„Çª„Çπ„Åó„Å¶90%„ÅÆ„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„ÅØV1„Å´„ÄÅ10ÔºÖ„ÅØV2„Å´„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç\n$ while true; do curl http://${GATEWAY_URL}/version; sleep 1; done I am v1.111111111 I am v1.111111111 I am v1.111111111 I am v2.222222222 ... „Åü„Åæ„Å´V2 I am v1.111111111 ÊúÄÂæå„Å´„ÄÅIstio„Å´ÁâπÂÆö„ÅÆÊù°‰ª∂„Åß„ÅÆ„Åø100%„ÅÆ„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„ÇíV2„Ç¢„Éó„É™Âêë„Åë„Çã„Çà„ÅÜ„Å´Ë®≠ÂÆö„Åô„Çã„ÄÇ‰∏ãË®òË®≠ÂÆö„Éï„Ç°„Ç§„É´route-conditional-v2.yaml„Å´Ë®òËø∞„Åï„Çå„Å¶„ÅÑ„Çã„Çà„ÅÜ„Å´„ÄÅ„Åì„Åì„Åß„ÅØHTTP„Éò„ÉÉ„ÉÄ„ÅÆuser„ÅÆÂÄ§„Åå\u0026quot;yoichi\u0026quot;„Åß„ÅÇ„Çã„Åì„Å®„ÇíÁâπÂÆö„ÅÆÊù°‰ª∂„Å®„Åô„Çã„ÄÇ\n--- apiVersion: config.istio.io/v1alpha2 kind: RouteRule metadata: name: myversion-conditional-v2 spec: destination: name: myversion precedence: 2 match: request: headers: user: regex: \u0026#34;yoichi\u0026#34; route: - labels: version: v2.0 Istio„Å´ÁâπÂÆöÊù°‰ª∂Áî®„ÅÆ„É´„Éº„ÉÜ„Ç£„É≥„Ç∞Ë®≠ÂÆö„ÇíËøΩÂä†\n$ istioctl create -f route-conditional-v2.yaml Ê¨°„ÅÆ„Çà„ÅÜ„Å´„Éò„ÉÉ„ÉÄ„Éº„Å´\u0026quot;user: yoichi\u0026quot;„ÅÆÊù°‰ª∂„ÇíËøΩÂä†„Åó„Å¶ÈÄ£Á∂ö„Åß„Ç¢„ÇØ„Çª„Çπ„Åó„Å¶ÂÖ®„Å¶„ÅÆ„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„ÅåV2„Å´„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„Åï„Çå„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç\n$ while true; do curl -H \u0026#34;user: yoichi\u0026#34; http://${GATEWAY_URL}/version; sleep 1; done I am v2.222222222 I am v2.222222222 I am v2.222222222 I am v2.222222222 ‰ª•‰∏ä„ÄÅË£úË∂≥ÊÉÖÂ†±„Åß„Åó„Åü„ÄÇ\nLinks Japan Container Days v18.04 Open Service Broker API Server for Azure Azure Container Instances Virtual Kubelet Istio-0.5.0 Document ","permalink":"https://unofficialism.info/posts/kubernetes-x-paas-noops-container-days-201804/","summary":"ÂÖàÊó•„ÄÅ4Êúà19Êó•„Å´ÈñãÂÇ¨„Åï„Çå„ÅüJapan Container Days v18.04„Å´„Å¶„ÄåKubernetes x PaaS ‚Äì „Ç≥„É≥„ÉÜ„Éä„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆNoOps„Å∏„ÅÆÊåëÊà¶„Äç„Å®„ÅÑ„ÅÜ„Çø„Ç§„Éà„É´„Åß„Çª„ÉÉ„Ç∑„Éß„É≥„ÇíÊãÖÂΩì„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„ÅÑ„Åü„ÄÇ„Åù„ÅÆÂêç„ÅÆÈÄö„Çä„É°„Ç§„É≥„ÅåKubernetes„Åß„ÄÅKubernetes„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å´„Åä„ÅÑ„Å¶NoOpsÔºàÈÅãÁî®„É¨„ÇπÔºâ„ÇíÁõÆÊåá„Åô„Åü„ÇÅ„ÅÆ„Å´„Å©„ÅÜ„ÅÑ„Å£„ÅüÂ∑•Â§´„Åå„Åß„Åç„Çã„ÅÆ„Åã„ÄÅ„Å©„ÅÜ„ÅÑ„Å£„Åü„ÇÇ„ÅÆ„ÇíÊ¥ªÁî®„Åó„Å¶„ÅÑ„Åë„Å∞„Çà„ÅÑ„ÅÆ„Åã„ÄÅ„Å®„ÅÑ„ÅÜÂÜÖÂÆπ„Åß„Åô„ÄÇ„Åì„ÅÆ„Éñ„É≠„Ç∞„Åß„ÅØJapan Container Days„Åß„ÅÆÁô∫Ë°®„Å´‰ΩøÁî®„Åó„Åü„Çπ„É©„Ç§„Éâ„ÅÆÂÖ±Êúâ„Å®„Çª„ÉÉ„Ç∑„Éß„É≥„Å´‰∏≠„ÅÆ„Çµ„É≥„Éó„É´„ÇÑ„Éá„É¢„Å´„Å§„ÅÑ„Å¶Ë£úË∂≥„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åè„ÄÇ\nSession Slides Kubernetes x PaaS ‚Äì „Ç≥„É≥„ÉÜ„Éä„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ NoOps„Å∏„ÅÆÊåëÊà¶ from Yoichi Kawasaki\nË£úË∂≥ÊÉÖÂ†± 1. Open Service Broker for Azure„ÅßAzure Database for MySQL„ÅÆÂà©Áî® „Çπ„É©„Ç§„Éâ„Åß„ÅäË¶ã„Åõ„Åó„ÅüÂÆüÈöõ„ÅÆ„Éï„Ç°„Ç§„É´„Çí‰Ωø„Å£„Å¶Azure Database for MySQL„ÅÆ„Çµ„Éº„Éì„Çπ„Ç§„É≥„Çπ„Çø„É≥„Çπ‰ΩúÊàê„ÄÅ„Éê„Ç§„É≥„Éá„Ç£„É≥„Ç∞„ÄÅ„Åù„Åó„Å¶ÂÆüÈöõ„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åã„Çâ„ÅÆÂà©Áî®„Åæ„Åß„ÅÆÊµÅ„Çå„ÇíÁ¥π‰ªã„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åè„ÄÇ\nOpen Service Broker for Azure„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆGithub„Å´„ÅÇ„Çã„Çµ„É≥„Éó„É´„Éï„Ç°„Ç§„É´mysql-instance.yaml„Å®mysql-binding.yaml„Çí‰Ωø„Å£„Å¶„Åù„Çå„Åû„ÇåServiceInstance„Å®ServiceBinding„Çí‰ΩúÊàê„Åô„Çã `\n# Provisioning the database, basic50 plan ... $ kubectl create -f mysql-instance.yaml # Wait until ServiceInstance named example-mysql-instance get ready \u0026#39;Status =\u0026gt; Ready\u0026#39;, # then execute the following to create a binding for this new database, $ kubectl create -f mysql-binding.","title":"Kubernetes x PaaS „Ç≥„É≥„ÉÜ„Éä„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆNoOps„Å∏„ÅÆÊåëÊà¶ (Japan Container Days v18.04)"},{"content":"This is an article on how you can achieve Azure Media Services (AMS) streaming traffic distribution with Traffic Manager.\nThe process for a client to find target AMS streaming endpoints The figure shows how a client find target AMS streaming endpoints with Traffic Manager and requests from video players are distributed to streaming endpoints in AMS:\nWhen AMS endpoints are added to an Azure Traffic Manager profile, Azure Traffic Manager keeps track of the status of the endpoints (running, stopped, or deleted) so that it can decide which of those endpoints should receive traffic. You can configure the way to route network traffic to the endpoints by choosing traffic routing methods available in Traffic Manager.\nConfiguration procedure Suppose that you have 2 AMS accounts (amsaccount1, amsaccount2), and that you want to distribute requests to your Traffic Manager domain (myamsstreaming.trafficmanager.net) from video player clients to streaming endpoints in AMS. When AMS endpoints are added to an Azure Traffic Manager profile (myamsstreaming), Azure Traffic Manager keeps track of the status of your AMS streaming endpoints (running, stopped, or deleted) so that it can decide which of those endpoints should receive traffic. However, when it comes to AMS endpoints, it has to be toward a custom domain, NOT simply a Traffic Manager domain for clients\u0026rsquo; traffic to be distributed into AMS endpoints using Traffic Manager. So let\u0026rsquo;s suppose you prepare a custom domain: streaming.mydomain.com.\nExample accounts and domains\nAMS Account1: amsaccount1 (Streaming endpoint: amsaccount1.streaming.mediaservices.windows.net) AMS Account2: amsaccount2 (Streaming endpoint: amsaccount2.streaming.mediaservices.windows.net) Traffic Manager Domain: myamsstreaming.trafficmanager.net Custom Domain: streaming.mydomain.com (1) Point a custom domain to a Traffic Manager domain You add the following alias (CNAME) to point the custom domain to the traffic manager domain:\nstreaming.mydomain.com IN CNAME myamsstreaming.trafficmanager.net Useful Link for this step: Point a company Internet domain to an Azure Traffic Manager domain\n(2) Add Azure Media Services origin hosts to the Traffic Manager Add AMS endpoints to an Azure Traffic Manager profile as \u0026ldquo;External Endpoint\u0026rdquo; via either Azure Portal or Azure CLI / PowerShell. Here is an image of adding endpoints in Azure portal:\nUseful Link for this step: Add, disable, enable, or delete endpoints\n(3) Custom domain name ownership verification First of all, get Media Service Account IDs (GUID) for your AMS accounts in this step. To find the Azure Media Service ID , go to the Azure portal and select your Media Service account. The Azure Media Service ID appears on the right of the DASHBOARD page. Let\u0026rsquo;s suppose you get the following account IDs for AMS accounts (amsaccount1, amsaccount2):\nAccount ID: 8dcbe520-59c7-4591-8d98-1e765b7f3729 for AMS account: amsaccount1 Account ID: 5e0e6784-4ed0-40a0-8444-33da6d4f7171 for AMS account: amsaccount2 Then, create CNAME that maps (accountId).(parent custom domain) to verifydns.(mediaservices-dns-zone). This is necessary to proves that the Azure Media Services ID has the ownership of the custom domain. Here are CNAMEs to create in this step:\n## \u0026lt;MediaServicesAccountID\u0026gt;.\u0026lt;custom parent domain\u0026gt; IN CNAME verifydns.\u0026lt;mediaservices-dns-zone\u0026gt; ## Custom name Ownership verification for amsaccount1 8dcbe520-59c7-4591-8d98-1e765b7f3729.mydomain.com IN CNAME verifydns.mediaservices.windows.net ## Custom name Ownership verification for amsaccount2 5e0e6784-4ed0-40a0-8444-33da6d4f7171.mydomain.com IN CNAME verifydns.mediaservices.windows.net Refer to CustomHostNames section of StreamingEndpoint document to learn more about the configuration in this step.\n(4) Add Custom host name to each Azure Media Service streaming endpoint Once you completed \u0026ldquo;Custom domain name ownership verification\u0026rdquo; configuration, you then need to configure to add custom host name to each Azure Media Service streaming endpoint. Unfortunately new portal doesn\u0026rsquo;t include capability to add custom domain to the streaming endpoint. You can set it either using REST API directly or using Azure Media Explorer. Here is how you add custom host name to the streaming endpoint in Azure Media Explorer:\nChoose \u0026ldquo;Streaming endpoint\u0026rdquo; in the top menu, right click on your streaming endpoint, and select \u0026ldquo;Streaming endpoint information and settings\u0026rdquo;. In Streaming endpoint information form, type in your custom host name for the endpoint, and click \u0026ldquo;Update settings and close\u0026rdquo;. That\u0026rsquo;s it.\n(5) Test video playback with your custom domain Once all configurations above are completed (+ DNS settings are reflected), you will see the custom domain name lookup points to either of AMS endpoints added to the traffic manager like this:\n$ dig streaming.mydomain.com ;; ANSWER SECTION: streaming.mydomain.com. 600 IN CNAME myamsstreaming.trafficmanager.net. myamsstreaming.trafficmanager.net. 300 IN CNAME amsaccount1.streaming.mediaservices.windows.net. amsaccount1.streaming.mediaservices.windows.net. 60 IN CNAME wamsorigin-origin-903f1f37105244fba2270ae7b64021bd.cloudapp.net. wamsorigin-origin-903f1f37105244fba2270ae7b64021bd.cloudapp.net. 60 IN A 104.215.4.76 Make sure to check if the custom name lookup points to the other endpoint when one of the endpoints are down.\nFinally, check if you can playback video with your custom domain.\n$ curl http://amsaccount1.streaming.mediaservices.windows.net/ee2e5286-d3fa-40fc-a393-c3c2a3ca5a84/BigBuckBunny.ism/manifest \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\u0026lt;SmoothStreamingMedia MajorVersion=\u0026#34;2\u0026#34; MinorVersion=\u0026#34;2\u0026#34; Duration=\u0026#34;84693333\u0026#34; TimeScale=\u0026#34;10000000\u0026#34;\u0026gt;\u0026lt;StreamIndex Chunks=\u0026#34;2\u0026#34; Type=\u0026#34;audio\u0026#34; Url=\u0026#34;QualityLevels({bitrate})/Fragments(aac_eng_2_128={start time})\u0026#34; QualityLevels=\u0026#34;1\u0026#34; Language=\u0026#34;eng\u0026#34; Name=\u0026#34;aac_eng_2_128\u0026#34;\u0026gt;\u0026lt;QualityLevel AudioTag=\u0026#34;255\u0026#34; Index=\u0026#34;0\u0026#34; BitsPerSample=\u0026#34;16\u0026#34; Bitrate=\u0026#34;128000\u0026#34; FourCC=\u0026#34;AACL\u0026#34; CodecPrivateData=\u0026#34;1190\u0026#34; Channels=\u0026#34;2\u0026#34; PacketSize=\u0026#34;4\u0026#34; SamplingRate=\u0026#34;48000\u0026#34; /\u0026gt;\u0026lt;c t=\u0026#34;0\u0026#34; d=\u0026#34;60160000\u0026#34; /\u0026gt;\u0026lt;c d=\u0026#34;24533333\u0026#34; /\u0026gt;\u0026lt;/StreamIndex\u0026gt;\u0026lt;StreamIndex Chunks=\u0026#34;2\u0026#34; Type=\u0026#34;video\u0026#34; Url=\u0026#34;QualityLevels({bitrate})/Fragments(video={start time})\u0026#34; QualityLevels=\u0026#34;5\u0026#34;\u0026gt;\u0026lt;QualityLevel Index=\u0026#34;0\u0026#34; Bitrate=\u0026#34;2896000\u0026#34; FourCC=\u0026#34;H264\u0026#34; MaxWidth=\u0026#34;1280\u0026#34; MaxHeight=\u0026#34;720\u0026#34; CodecPrivateData=\u0026#34;000000016764001FACD9405005BB011000000300100000030300F18319600000000168EBECB22C\u0026#34; /\u0026gt;\u0026lt;QualityLevel Index=\u0026#34;1\u0026#34; Bitrate=\u0026#34;1789000\u0026#34; FourCC=\u0026#34;H264\u0026#34; MaxWidth=\u0026#34;960\u0026#34; MaxHeight=\u0026#34;540\u0026#34; CodecPrivateData=\u0026#34;000000016764001FACD940F0117EF011000003000100000300300F1831960000000168EBECB22C\u0026#34; /\u0026gt;\u0026lt;QualityLevel Index=\u0026#34;2\u0026#34; Bitrate=\u0026#34;946000\u0026#34; FourCC=\u0026#34;H264\u0026#34; MaxWidth=\u0026#34;640\u0026#34; MaxHeight=\u0026#34;360\u0026#34; CodecPrivateData=\u0026#34;000000016764001EACD940A02FF97011000003000100000300300F162D960000000168EBECB22C\u0026#34; /\u0026gt;\u0026lt;QualityLevel Index=\u0026#34;3\u0026#34; Bitrate=\u0026#34;612000\u0026#34; FourCC=\u0026#34;H264\u0026#34; MaxWidth=\u0026#34;480\u0026#34; MaxHeight=\u0026#34;270\u0026#34; CodecPrivateData=\u0026#34;0000000167640015ACD941E08FEB011000000300100000030300F162D9600000000168EBECB22C\u0026#34; /\u0026gt;\u0026lt;QualityLevel Index=\u0026#34;4\u0026#34; Bitrate=\u0026#34;324000\u0026#34; FourCC=\u0026#34;H264\u0026#34; MaxWidth=\u0026#34;320\u0026#34; MaxHeight=\u0026#34;180\u0026#34; CodecPrivateData=\u0026#34;000000016764000DACD941419F9F011000000300100000030300F14299600000000168EBECB22C\u0026#34; /\u0026gt;\u0026lt;c t=\u0026#34;0\u0026#34; d=\u0026#34;60000000\u0026#34; /\u0026gt;\u0026lt;c d=\u0026#34;24583333\u0026#34; /\u0026gt;\u0026lt;/StreamIndex\u0026gt;\u0026lt;/SmoothStreamingMedia\u0026gt; $ curl http://streaming.mydomain.com/ee2e5286-d3fa-40fc-a393-c3c2a3ca5a84/BigBuckBunny.ism/manifest \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\u0026lt;SmoothStreamingMedia MajorVersion=\u0026#34;2\u0026#34; MinorVersion=\u0026#34;2\u0026#34; Duration=\u0026#34;84693333\u0026#34; TimeScale=\u0026#34;10000000\u0026#34;\u0026gt;\u0026lt;StreamIndex Chunks=\u0026#34;2\u0026#34; Type=\u0026#34;audio\u0026#34; Url=\u0026#34;QualityLevels({bitrate})/Fragments(aac_eng_2_128={start time})\u0026#34; QualityLevels=\u0026#34;1\u0026#34; Language=\u0026#34;eng\u0026#34; Name=\u0026#34;aac_eng_2_128\u0026#34;\u0026gt;\u0026lt;QualityLevel AudioTag=\u0026#34;255\u0026#34; Index=\u0026#34;0\u0026#34; BitsPerSample=\u0026#34;16\u0026#34; Bitrate=\u0026#34;128000\u0026#34; FourCC=\u0026#34;AACL\u0026#34; CodecPrivateData=\u0026#34;1190\u0026#34; Channels=\u0026#34;2\u0026#34; PacketSize=\u0026#34;4\u0026#34; SamplingRate=\u0026#34;48000\u0026#34; /\u0026gt;\u0026lt;c t=\u0026#34;0\u0026#34; d=\u0026#34;60160000\u0026#34; /\u0026gt;\u0026lt;c d=\u0026#34;24533333\u0026#34; /\u0026gt;\u0026lt;/StreamIndex\u0026gt;\u0026lt;StreamIndex Chunks=\u0026#34;2\u0026#34; Type=\u0026#34;video\u0026#34; Url=\u0026#34;QualityLevels({bitrate})/Fragments(video={start time})\u0026#34; QualityLevels=\u0026#34;5\u0026#34;\u0026gt;\u0026lt;QualityLevel Index=\u0026#34;0\u0026#34; Bitrate=\u0026#34;2896000\u0026#34; FourCC=\u0026#34;H264\u0026#34; MaxWidth=\u0026#34;1280\u0026#34; MaxHeight=\u0026#34;720\u0026#34; CodecPrivateData=\u0026#34;000000016764001FACD9405005BB011000000300100000030300F18319600000000168EBECB22C\u0026#34; /\u0026gt;\u0026lt;QualityLevel Index=\u0026#34;1\u0026#34; Bitrate=\u0026#34;1789000\u0026#34; FourCC=\u0026#34;H264\u0026#34; MaxWidth=\u0026#34;960\u0026#34; MaxHeight=\u0026#34;540\u0026#34; CodecPrivateData=\u0026#34;000000016764001FACD940F0117EF011000003000100000300300F1831960000000168EBECB22C\u0026#34; /\u0026gt;\u0026lt;QualityLevel Index=\u0026#34;2\u0026#34; Bitrate=\u0026#34;946000\u0026#34; FourCC=\u0026#34;H264\u0026#34; MaxWidth=\u0026#34;640\u0026#34; MaxHeight=\u0026#34;360\u0026#34; CodecPrivateData=\u0026#34;000000016764001EACD940A02FF97011000003000100000300300F162D960000000168EBECB22C\u0026#34; /\u0026gt;\u0026lt;QualityLevel Index=\u0026#34;3\u0026#34; Bitrate=\u0026#34;612000\u0026#34; FourCC=\u0026#34;H264\u0026#34; MaxWidth=\u0026#34;480\u0026#34; MaxHeight=\u0026#34;270\u0026#34; CodecPrivateData=\u0026#34;0000000167640015ACD941E08FEB011000000300100000030300F162D9600000000168EBECB22C\u0026#34; /\u0026gt;\u0026lt;QualityLevel Index=\u0026#34;4\u0026#34; Bitrate=\u0026#34;324000\u0026#34; FourCC=\u0026#34;H264\u0026#34; MaxWidth=\u0026#34;320\u0026#34; MaxHeight=\u0026#34;180\u0026#34; CodecPrivateData=\u0026#34;000000016764000DACD941419F9F011000000300100000030300F14299600000000168EBECB22C\u0026#34; /\u0026gt;\u0026lt;c t=\u0026#34;0\u0026#34; d=\u0026#34;60000000\u0026#34; /\u0026gt;\u0026lt;c d=\u0026#34;24583333\u0026#34; /\u0026gt;\u0026lt;/StreamIndex\u0026gt;\u0026lt;/SmoothStreamingMedia\u0026gt; Useful Links traffic routing methods Point a company Internet domain to an Azure Traffic Manager domain Add, disable, enable, or delete endpoints StreamingEndpoint CustomHostNames Configuration ","permalink":"https://unofficialism.info/posts/controlling-azure-media-services-traffic-with-traffic-manager/","summary":"This is an article on how you can achieve Azure Media Services (AMS) streaming traffic distribution with Traffic Manager.\nThe process for a client to find target AMS streaming endpoints The figure shows how a client find target AMS streaming endpoints with Traffic Manager and requests from video players are distributed to streaming endpoints in AMS:\nWhen AMS endpoints are added to an Azure Traffic Manager profile, Azure Traffic Manager keeps track of the status of the endpoints (running, stopped, or deleted) so that it can decide which of those endpoints should receive traffic.","title":"Controlling Azure Media Services traffic with Traffic Manager"},{"content":"UPDATED on Feb 3, 2018 - ElasticÁ§æ„Ç§„Éô„É≥„Éà„Çµ„Ç§„Éà„ÇíËøΩÂä†\n„Ç§„Éô„É≥„ÉàÈñãÂÇ¨Êó•„Åã„ÇâÂ∞ë„ÄÖÊôÇÈñì„ÅåÁµåÈÅé„Åó„Åü„Åå„ÄÅElastic {ON} Tour 2017 Êù±‰∫¨Ôºà2017Âπ¥12Êúà14Êó•ÈñãÂÇ¨Ôºâ„Å®„ÅÑ„ÅÜElasticÁ§æ„Ç™„Éï„Ç£„Ç∑„É£„É´„ÅÆ„É¶„Éº„Ç∂„Éº„Ç´„É≥„Éï„Ç°„É¨„É≥„Çπ„Å´„Å¶ÁôªÂ£á„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„ÅèÊ©ü‰ºö„Åå„ÅÇ„Çä„ÄÅ„Åù„Åì„Åß„Äå15ÂàÜ„Åß„ÅäÂ±ä„Åë„Åô„Çã Elastic Stack on Azure Ë®≠Ë®à„ÉªÊßãÁØâ„Éé„Ç¶„Éè„Ç¶„Äç„Å®„ÅÑ„ÅÜ„ÅäÈ°å„Åß„ÅäË©±„Çí„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„ÅÑ„Åü„ÄÇÂÄã‰∫∫ÁöÑ„Å´„Å®„Å¶„ÇÇÂ§ßÂ•Ω„Åç„Å™„Éó„É≠„ÉÄ„ÇØ„Éà„Å™„ÅÆ„Åß„ÄÅ„Åù„ÅÆ„É¶„Éº„Ç∂„Éº„Ç´„É≥„Éï„Ç°„É¨„É≥„Çπ„Åß„ÅäË©±„Çí„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„ÅÑ„Åü„Å®„ÅÑ„ÅÜ„Åì„Å®„Å®„ÄÅ„Åù„ÅÆ„Éó„É≠„ÉÄ„ÇØ„Éà„ÅÆAzure„Åß„ÅÆÂà©Áî®‰øÉÈÄ≤„Å´ÂæÆÂäõ„Å™„Åå„Çâ„ÇÇË≤¢ÁåÆ„Åß„Åç„Åü„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅØÂÖâÊ†ÑËá≥Ê•µ„Åß„ÅÇ„Çã„ÄÇ„Åì„Åì„Åß„ÅØ„Åù„ÅÆElastic {ON} Tour„Åß„ÅÆÁô∫Ë°®„Åß‰ΩøÁî®„Åó„Åü„Çπ„É©„Ç§„Éâ„Å´Ë£úË∂≥Ëß£Ë™¨„ÇíÂä†„Åà„Å¶ÂÖ±Êúâ„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åè„ÄÇ\n„Çª„ÉÉ„Ç∑„Éß„É≥„Çπ„É©„Ç§„ÉâÔºàÔºã„Éá„É¢ÂãïÁîªÔºâ 15ÂàÜ„Åß„ÅäÂ±ä„Åë„Åô„Çã Elastic Stack on Azure Ë®≠Ë®à„ÉªÊßãÁØâ„Éé„Ç¶„Éè„Ç¶ from Yoichi Kawasaki\nË£úË∂≥Ëß£Ë™¨ „Éá„Éó„É≠„Ç§„É°„É≥„Éà Azure„Åß„ÅÆElastic Stack„ÅÆÂà©Áî®„ÅØÂΩìÁÑ∂„Å™„Åå„Çâ‰ªÆÊÉ≥„Éû„Ç∑„É≥ÔºàVMÔºâ„Çí‰∏¶„Åπ„Å¶„Åù„Åì„Å´„ÇØ„É©„Çπ„Çø„ÇíÊßãÁØâ„Åô„Çã„Åì„Å®„Å´„Å™„Çã„ÄÇÊÆãÂøµ„Å™„Åå„ÇâÁèæÊôÇÁÇπ„Åß„Éû„Éç„Éº„Ç∏„Éâ„ÅÆElastic„Çµ„Éº„Éì„Çπ„ÅØAzure„Å´„ÅØÂ≠òÂú®„Åó„Å™„ÅÑ„ÄÇVM„Éô„Éº„Çπ„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅßÁâπ„Å´„Ç™„É≥„Éó„É¨„Å®Â§â„Çè„Çâ„Åö„Éû„Éã„É•„Ç¢„É´„Åß„ÅÇ„Å£„Åü„Çä„ÄÅChef„ÇÑAnsible„Å™„Å©„ÅÆÊßãÊàêÁÆ°ÁêÜ„ÉÑ„Éº„É´„Çí‰Ωø„Å£„Å¶„ÇØ„É©„Çπ„Çø„ÇíÁµÑ„Çì„Å†„ÇäÊüîËªü„Å™ÊßãÁØâ„ÅåÂèØËÉΩ„Åß„ÅÇ„Çã„ÇÇ„ÅÆ„ÅÆ„ÄÅ„Åì„Åì„Åß„ÅØAzure„Åß„ÅÆÊßãÁØâ„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅßARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Çí‰Ωø„Å£„Åü„Éá„Éó„É≠„Ç§„É°„É≥„Éà„ÅÆÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åó„Å¶„ÅÑ„Çã„ÄÇ\nAzure Marketplace„Åã„Çâ„ÅÆ„Éá„Éó„É≠„Ç§ÔºöÊúÄ„ÇÇÊâã„Å£Âèñ„ÇäÊó©„ÅÑÊñπÊ≥ï„ÄÇ30Êó•„ÅÆX-Pack„Éà„É©„Ç§„Ç¢„É´„É©„Ç§„Çª„É≥„Çπ„Åå‰ªò„ÅÑ„Å¶„ÅÑ„Å¶„ÄÅ„Éà„É©„Ç§„Ç¢„É´ÊúüÈñì„ÅåÈÅé„Åé„Å¶„ÇÇBYOL„Åß„É©„Ç§„Çª„É≥„Çπ„ÅÆÊõ¥Êñ∞„ÅåÂèØËÉΩ„ÄÇ„ÉÜ„É≥„Éó„É¨„Éº„Éà„Åß„ÅØ2017Âπ¥12ÊúàÊôÇÁÇπ„Åßv2.0.2 „Äú v5.6.3„ÅÆÈÅ∏Êäû„ÅåÂèØËÉΩ„ÄÇ‰Ωï„ÇÇËÄÉ„Åà„ÅöÊúÄÊñ∞Áâà„Çí„ÅîÂà©Áî®„Åè„Å†„Åï„ÅÑ„ÄÇ Github‰∏ä„ÅÆARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Çí„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åó„Å¶„Éá„Éó„É≠„Ç§ÔºöElasticÁ§æ„ÅåÁî®ÊÑè„Åó„ÅüGithub‰∏ä„ÅÆARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Åå„ÅÇ„Çã„ÅÆ„Åß„Åù„Çå„ÇíËá™ÂàÜ„ÅÆË¶Å‰ª∂„Å´Âøú„Åò„Å¶„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åó„Å¶„Éá„Éó„É≠„Ç§„É°„É≥„Éà„Çí„Åô„Çã„ÄÇAzure CLI„ÇÑPowerShell„Å™„Å©„Ç≥„Éû„É≥„Éâ„Çí‰Ωø„Å£„Åü„Éá„Éó„É≠„Ç§„É°„É≥„Éà„ÅåÂèØËÉΩ„Å™„ÅÆ„ÅßÊßãÊàêÁÆ°ÁêÜ„ÉÑ„Éº„É´„Å´ÁµÑ„ÅøËæº„Çì„ÅßÂë®Ëæ∫Áí∞Â¢É„ÇíÂêà„Çè„Åõ„Å¶Ëá™ÂãïÊßãÁØâË®≠ÂÆö„ÇÇÂèØËÉΩ„ÄÇÊÖ£„Çå„Å¶„Åç„Åü„Çâ„Åì„Å°„Çâ„Åå„Çà„ÅÑ„Åß„Åó„Çá„ÅÜ„ÄÇ Êé®Â•®‰ªÆÊÉ≥„Éè„Éº„Éâ„Ç¶„Çß„Ç¢„Å®DISK Elastic„ÇØ„É©„Çπ„ÇøÂÖ®‰Ωì„ÅÆ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÇíÂºï„ÅçÂá∫„Åô„Åü„ÇÅ„Å´„ÅØÊ©üËÉΩÂà•„Å´ÈÅ©Ê≠£„Å™VM„Ç§„É≥„Çπ„Çø„É≥„Çπ„Å®„Çµ„Ç§„Ç∫„ÇíÈÅ∏Êäû„Åè„Å†„Åï„ÅÑ„ÄÇ„Åæ„ÅüVM„Å´„Ç¢„Çø„ÉÉ„ÉÅ„Åô„Çã„Éá„Ç£„Çπ„ÇØ„Å´„Å§„ÅÑ„Å¶„ÅØ„Éì„É´„Éà„Ç§„É≥„ÅßÂèØÁî®ÊÄßË®≠ÂÆö„Åå„Åï„Çå„Å¶„ÅÑ„ÇãManaged Disk„ÄÅ„ÇÇ„Åó„Åè„ÅØPremium Managed Disk„ÇíÈÅ∏Êäû„Åô„Çã„Åì„Å®„Çí„ÅäÂøò„Çå„Å™„Åè„ÄÇ\nÂèØÁî®ÊÄß„ÅÆË®≠ÂÆö„Å´„Å§„ÅÑ„Å¶ Azure„ÅßIaaS„ÅßÂèØÁî®ÊÄß„ÅÆË®≠ÂÆö„Å®„ÅÑ„Åà„Å∞„Åä„Å™„Åò„Åø„ÅÆÂèØÁî®ÊÄß„Çª„ÉÉ„ÉàÔºàAvailability SetÔºâ„Å®ÂèØÁî®ÊÄß„Çæ„Éº„É≥ÔºàAvailability ZoneÔºâ„ÄÇÂΩìÁÑ∂Elastic Stack„ÅÆ„ÇØ„É©„Çπ„Çø„ÇíÁµÑ„ÇÄÊôÇ„ÇÇ„Åì„Çå„Çâ„ÅÆË®≠ÂÆö„ÇíÂÖ•„Çå„Åæ„Åó„Çá„ÅÜ„Å®„ÅÑ„ÅÜ„ÅäË©±„ÄÇÂèØÁî®ÊÄß„Çæ„Éº„É≥„ÅØ„ÄÅ„Åù„ÅÆÂèØÁî®ÊÄß„É¨„Éô„É´„ÅÆÈ´ò„Åï„Åã„ÇâÂ∞ÜÊù•ÁöÑ„Å´„ÅØÂèØÁî®ÊÄß„Çæ„Éº„É≥„Åå‰∏ªÊµÅ„Å™Ë®≠ÂÆö„Å´„Å™„Å£„Å¶„ÅÑ„Åè„ÅØ„Åö„Åß„ÅÇ„Çã„ÇÇ„ÅÆ„ÅÆ„ÄÅ2017Âπ¥12ÊúàÊôÇÁÇπ„ÅßPreview„É™„É™„Éº„Çπ„Åß„ÅÇ„Çä„ÄÅÂà©Áî®ÂèØËÉΩ„É™„Éº„Ç∏„Éß„É≥„ÅåÁ±≥ÂõΩÊù±ÈÉ®Á¨¨Ôºí„ÄÅË•ø„É®„Éº„É≠„ÉÉ„Éë„ÅÆ„Åø„Å®„ÅÑ„ÅÜ„Å®„Å¶„ÇÇÈôêÂÆöÁöÑ„Å™„ÇÇ„ÅÆ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇÁèæÊôÇÁÇπ„Åß„Éó„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥Áî®ÈÄî„Å®„Å™„Çã„Å®ÂèØÁî®ÊÄß„Çª„ÉÉ„Éà‰∏ÄÊäû„Å™„ÅÆ„Åß‰Ωï„ÇÇËÄÉ„Åà„Åö„Å´ÂèØÁî®ÊÄß„Çª„ÉÉ„Éà„ÇíÁµÑ„Çì„Åß„Åè„Å†„Åï„ÅÑ„ÄÇ\nÂèØÁî®ÊÄß„Çª„ÉÉ„ÉàÔºàAvailability SetÔºâ\n‰∏Ä„Å§„ÅÆDC„ÅÆ‰∏≠„ÅßÂêå‰∏Ä„ÅÆÁâ©ÁêÜ„É©„ÉÉ„ÇØ„ÇÑÈõªÊ∫ê„Å™„Å©„ÇíÈÖçÁΩÆ„Åó„Å™„ÅÑ„Çà„ÅÜ„Å´„Åó„Å¶„ÄÅÈöúÂÆ≥„ÅåÁô∫Áîü„Åó„Å¶„ÇÇ„Ç∞„É´„Éº„Éó„ÅÆ‰∏≠„ÅÆ„Å©„Åì„Åã„ÅÆVM„ÅØÁîü„Åç„Å¶„ÅÑ„Çã„Çà„ÅÜ„Å´„Åô„ÇãË®≠ÂÆö„ÅÆ„Åì„Å® VM SLA 99.95%„ÅßÊèê‰æõ ÂèØÁî®ÊÄß„Çæ„Éº„É≥ÔºàAvailability ZoneÔºâ\nÂêÑVM„ÇíÂà•„ÄÖ„ÅÆ„Çæ„Éº„É≥„Å´ÈÖçÁΩÆ„Åô„Çã„ÅÆ„ÅßDC„É¨„Éô„É´„ÅÆÈöúÂÆ≥„Å´„Å§„Çà„ÅÑÔºà„Åù„Çå„Åû„Çå„Çæ„Éº„É≥„ÅØÈõªÊ∫ê„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÄÅÂÜ∑Âç¥Ë£ÖÁΩÆ„ÅåÂÆåÂÖ®„Å´Áâ©ÁêÜÁöÑ„Å´ÂàÜÈõ¢„Åï„Çå„Åü„ÇÇ„ÅÆ„Å®„Å™„Å£„Å¶„ÅÑ„ÇãÔºâ„ÄÇ„Å°„Å™„Åø„Å´„ÄÅAzure„ÅÆ„É™„Éº„Ç∏„Éß„É≥„ÅØË§áÊï∞„ÅÆ„Éá„Éº„Çø„Çª„É≥„Çø„Éº„ÅßÊßãÊàê„Åï„Çå„Å¶„Åä„Çä„ÄÅ„Åù„ÅÆÈñì„ÇíÈ´òÈÄü„Å™„Éê„ÉÉ„ÇØ„Éú„Éº„É≥„ÅßÊé•Á∂ö„Åó„Å¶1„Å§„ÅÆ„É™„Éº„Ç∏„Éß„É≥„Å®„Åó„Å¶ÈÄèÈÅéÁöÑ„Å´Âà©Áî®„ÅåÂèØËÉΩ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÅÆ„Åß„Åì„ÅÆ„Çà„ÅÜ„Å™„Åì„Å®„Åå„Åß„Åç„Çã„Çè„Åë„Å† VM SLA 99.99%„ÅßÊèê‰æõ „ÄêÊ≥®ÊÑèÁÇπ„ÄëÂèØÁî®ÊÄß„Çæ„Éº„É≥„ÅÆË®≠ÂÆö„Åß„ÅØDC„ÅåÂàÜ„Åã„Çå„Å¶ÈÖçÁΩÆ„Åï„Çå„Çã„ÅÆ„ÅßÊ¨°„ÅÆÔºíÁÇπ„ÅÆËÄÉÊÖÆ„ÅåÂøÖË¶ÅÔºöÔºàÔºëÔºâ„Éû„Çπ„Çø„Éº„ÅØÂêÑ„Çæ„Éº„É≥„Å´ÂàÜÊï£„Åô„Çã„Çà„ÅÜ„Å´ÂêÑ„Çæ„Éº„É≥ÊúÄ‰ΩéÔºë„Éé„Éº„ÉâÈÖçÁΩÆ„Åô„Çã„Åì„Å®ÔºàÔºíÔºâ„Éá„Éº„Çø„Éé„Éº„Éâ„ÅØ„Çæ„Éº„É≥„Å´„Åæ„Åü„Åå„ÇãÈÄö‰ø°„ÅåÊ•µÂäõËµ∑„Åì„Çâ„Å™„ÅÑ„Çà„ÅÜ„Å´Â∑•Â§´„Åô„Çã„Åì„Å®„ÄÇ„Åì„Çå„ÇíÂÆüÁèæ„Åô„Çã„ÅÆ„ÅåShard Allocation Awareness„Å®„ÅÑ„ÅÜ‰ªïÁµÑ„Åø„Åß„ÄÅ„Åì„ÅÆ‰ªïÁµÑ„Åø„Çí„Å§„Åã„ÅÜ„Åì„Å®„Åß Âêå‰∏Ä„Çæ„Éº„É≥ÂÜÖ„Å´ÈÖçÁΩÆ„Åï„Çå„Å¶„ÅÑ„Çã„Éé„Éº„Éâ„Å†„Åë„ÅßÂÆåÂÖ®„Å™„Ç∑„É£„Éº„Éâ„Çí‰øùÊåÅ„Åô„Çã„Çà„ÅÜ„Å´„Åó„Å¶„ÄÅÊ§úÁ¥¢Ë¶ÅÊ±Ç„ÅåÂêå‰∏Ä„Çæ„Éº„É≥ÂÜÖ„ÅßÂÆåÁµê„Åß„Åç„Çã„Çà„ÅÜ„Å´Ë®≠ÂÆö„ÅåÂèØËÉΩ„Å®„Å™„Çã „Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç∞„É´„Éº„Éó„ÅÆË®≠ÂÆö Azure„ÅÆIaaS„Å´„Åä„Åë„Çã„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Éï„Ç£„É´„Çø„É™„É≥„Ç∞„ÅÆË®≠ÂÆö„Å´„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç∞„É´„Éº„ÉóÔºàNSGÔºâ„Å®„Çà„Å∞„Çå„ÇãL4„Éï„Ç£„É´„Çø„É™„É≥„Ç∞„Åå„ÅÇ„Çã„ÄÇÂΩìÁÑ∂„Å™„Åå„Çâ„ÄÅÊó¢„Å´X-Pack„ÇíÂ∞éÂÖ•„Åó„Å¶„ÅÑ„Çå„Å∞„Åù„ÅÆ„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ê©üËÉΩ„ÅÆÔºë„Å§„Å®„Åó„Å¶„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„É¨„Éô„É´„ÅÆ„Ç¢„ÇØ„Çª„ÇπÂà∂Âæ°„Å´„Å§„ÅÑ„Å¶„ÇÇË°å„ÅÜ„Åì„Å®„Åå„Åß„Åç„Çã„Åå„ÄÅX-Pack„ÇíÂ∞éÂÖ•„Åó„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØÁ¢∫ÂÆü„Å´NSG„ÅÆË®≠ÂÆö„ÅØÂøÖË¶Å„Å´„Å™„Å£„Å¶„Åè„Çã„ÄÇ„Åæ„Åü„ÄÅElastic Stack‰ª•Â§ñ„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å®„ÅÆÈÄ£Êê∫„ÅÆÈöõ„Å´„ÇÇÂøÖ„ÅöÂøÖË¶Å„Å´„Å™„Å£„Å¶„Åè„Çã„ÄÇAzure‰∏ä„Åß„ÅÆ„Ç∑„Çπ„ÉÜ„É†ÊßãÁØâ„Åß„ÅØÊ¨†„Åã„Åô„Åì„Å®„ÅÆ„Åß„Åç„Å™„ÅÑË®≠ÂÆö„ÅÆÔºë„Å§„ÄÇ\nAzure„Çµ„Éº„Éì„Çπ„Åã„Çâ„ÅÆ„Éá„Éº„Çø„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥ Azure VM„Å´„Å§„ÅÑ„Å¶„ÅØ„ÄÅ„Ç™„É≥„Éó„É¨ÂêåÊßò„Å´„ÄÅ„Éì„É´„Éà„Ç§„É≥„ÅÆBeats„ÇÑlogstash„Å®„ÅÆÈÄ£Êê∫„Å´„Çà„Çä„ÄÅ„Åù„ÅÆ„É≠„Ç∞„ÇÑMetrics„Å™„Å©„ÅÆ„Éá„Éº„Çø„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÇíÂÆüÁèæ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ‰∏ÄÊñπ„ÄÅAzure„ÅåÁâπ„Å´Âäõ„ÇíÂÖ•„Çå„Å¶„ÅÑ„ÇãPaaSÔºàPlatform as a ServicesÔºâ„Åã„Çâ„ÅÆ„Éá„Éº„Çø„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„Å´„Å§„ÅÑ„Å¶„ÅØ„Å©„ÅÜ„Åã„Å®„ÅÑ„ÅÜ„Å®„ÄÅ‰∏ãË®ò„ÅÆ„Çµ„Éº„Éì„Çπ„Å´„Å§„ÅÑ„Å¶„ÅØÊó¢„Å´„Éì„É´„Éà„Ç§„É≥„ÅßÁî®ÊÑè„Åï„Çå„Å¶„ÅÑ„ÇãÊ©üËÉΩ„ÇÑ„ÄÅ„Ç≥„Éü„É•„Éã„ÉÜ„Ç£Ë£ΩLogstash Input „Éó„É©„Ç∞„Ç§„É≥„ÇíÂà©Áî®„Åô„Çã„Åì„Å®„Åß„Éá„Éº„Çø„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÇíÂÆüÁèæ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ H2M_LI_HEADER Azure Blob Storage: logstash-input-azureblob H2M_LI_HEADER Azure Service Bus (Topic): logstash-input-azuretopic H2M_LI_HEADER Azure Event Hub: logstash-input-azureeventhub H2M_LI_HEADER Azure SQL Database: logstash-input-jdbc H2M_LI_HEADER Azure Database for MySQL: logstash-input-jdbc H2M_LI_HEADER Azure Database for PostgreSQL: logstash-input-jdbc H2M_LI_HEADER Azure HDInsight: ES-Hadoop„Å´„Çà„ÇãÈÄ£Êê∫\n„Å°„Å™„Åø„Å´„ÄÅAzure„Çµ„Éº„Éì„ÇπÂêë„ÅëLogstash„Éó„É©„Ç∞„Ç§„É≥‰∏ÄË¶ß„Å´„Å§„ÅÑ„Å¶„ÅØ„Åì„Å°„Çâ - Logstash plugins for Microsoft Azure Services\nAzure Diagnostics„ÄÅActivities„ÄÅMetrics„É≠„Ç∞„ÅÆ„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥ Âü∫Êú¨ÁöÑ„Å´IaaS„ÄÅPaaSÂïè„Çè„ÅöAzure„ÅÆ„Åª„Å®„Çì„Å©„ÅÆ„Çµ„Éº„Éì„Çπ„Åã„Çâ‰∏ãË®ò„ÅÆÊÉÖÂ†±„ÅåÂá∫Âäõ„Åï„Çå„ÄÅ„Åì„Çå„Çâ„ÅÆÊÉÖÂ†±„ÅØBlob„Çπ„Éà„É¨„Éº„Ç∏„Åæ„Åü„ÅØEvent Hub„Å´Âá∫ÂäõË®≠ÂÆö„ÅåÂèØËÉΩ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ H2M_LI_HEADER Ë®∫Êñ≠„É≠„Ç∞ÔºàDiagnostics logÔºâ H2M_LI_HEADER „Ç¢„ÇØ„ÉÜ„Ç£„Éì„ÉÜ„Ç£„É≠„Ç∞ÔºàActivity logÔºâ H2M_LI_HEADER „É°„Éà„É™„ÉÉ„ÇØ\n„Åæ„Åü‰∏äË®ò„Å´Âä†„Åà„Å¶„ÄÅPaaS„Çµ„Éº„Éì„Çπ„Å´Â±ïÈñã„Åô„Çã„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥Âõ∫Êúâ„ÅÆ„É≠„Ç∞„Å´„Å§„ÅÑ„Å¶„ÇÇÂ∞ë„Å™„Åè„Å®„ÇÇBlob„Çπ„Éà„É¨„Éº„Ç∏„Å´Êõ∏„ÅçËæº„ÇÄ„Åì„Å®„ÅØ„Åß„Åç„Çã„ÄÇ„Å§„Åæ„Çã„Å®„Åì„Çç„ÄÅ‰∏äË®ò„Éá„Éº„Çø„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÅÆÈ†ÖÁõÆ„Åß„ÅîÁ¥π‰ªã„Åó„Åü„Çà„ÅÜ„Å´Blob„Çπ„Éà„É¨„Éº„Ç∏„ÇÑEvent hub„Å´Âá∫Âäõ„Åï„Çå„Åü„Éá„Éº„Çø„ÅØLogstash„ÇíÈÄö„Åò„Å¶Elastic Stack„Å´Âèñ„ÇäËæº„ÇÄ„Åì„Å®„ÅåÂèØËÉΩ„Åß„ÅÇ„Çä„ÄÅAzure„É™„ÇΩ„Éº„ÇπÈñ¢ÈÄ£ÊÉÖÂ†±„ÇíÂê´„ÇÅ„ÅüÂÖ®„Å¶„ÅÆ„É≠„Ç∞„ÅØElastic Stack„Åß‰∏ÄÂÖÉÁÆ°ÁêÜ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÅÆ„Åß„ÅÇ„Çã„ÄÇ\nÂèÇËÄÉLinks Deploying Elasticsearch on Microsoft Azure Microsoft Azure„Å´Elasticsearch„Çí„Éá„Éó„É≠„Ç§„Åô„Çã Elasticsearch and Kibana Deployments on Azure Spinning up a cluster with Elastic\u0026rsquo;s Azure Marketplace template Run Elasticsearch on Azure Public preview: Azure Availability Zones Filter network traffic with network security groups Shared Allocation Awareness Azure Diagnostics Tools Elastic{ON} Tour Tokyo 2017„Ç§„Éô„É≥„ÉàLinks 15ÂàÜ„Åß„ÅäÂ±ä„Åë„Åô„ÇãElastic Stack on AzureË®≠Ë®à„ÉªÊßãÁØâ„Éé„Ç¶„Éè„Ç¶ (Japanese) Elastic{ON} Tour Tokyo 2017ÂÖ®„Çª„ÉÉ„Ç∑„Éß„É≥ ","permalink":"https://unofficialism.info/posts/15min-elastic-stack-on-azure/","summary":"UPDATED on Feb 3, 2018 - ElasticÁ§æ„Ç§„Éô„É≥„Éà„Çµ„Ç§„Éà„ÇíËøΩÂä†\n„Ç§„Éô„É≥„ÉàÈñãÂÇ¨Êó•„Åã„ÇâÂ∞ë„ÄÖÊôÇÈñì„ÅåÁµåÈÅé„Åó„Åü„Åå„ÄÅElastic {ON} Tour 2017 Êù±‰∫¨Ôºà2017Âπ¥12Êúà14Êó•ÈñãÂÇ¨Ôºâ„Å®„ÅÑ„ÅÜElasticÁ§æ„Ç™„Éï„Ç£„Ç∑„É£„É´„ÅÆ„É¶„Éº„Ç∂„Éº„Ç´„É≥„Éï„Ç°„É¨„É≥„Çπ„Å´„Å¶ÁôªÂ£á„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„ÅèÊ©ü‰ºö„Åå„ÅÇ„Çä„ÄÅ„Åù„Åì„Åß„Äå15ÂàÜ„Åß„ÅäÂ±ä„Åë„Åô„Çã Elastic Stack on Azure Ë®≠Ë®à„ÉªÊßãÁØâ„Éé„Ç¶„Éè„Ç¶„Äç„Å®„ÅÑ„ÅÜ„ÅäÈ°å„Åß„ÅäË©±„Çí„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„ÅÑ„Åü„ÄÇÂÄã‰∫∫ÁöÑ„Å´„Å®„Å¶„ÇÇÂ§ßÂ•Ω„Åç„Å™„Éó„É≠„ÉÄ„ÇØ„Éà„Å™„ÅÆ„Åß„ÄÅ„Åù„ÅÆ„É¶„Éº„Ç∂„Éº„Ç´„É≥„Éï„Ç°„É¨„É≥„Çπ„Åß„ÅäË©±„Çí„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„ÅÑ„Åü„Å®„ÅÑ„ÅÜ„Åì„Å®„Å®„ÄÅ„Åù„ÅÆ„Éó„É≠„ÉÄ„ÇØ„Éà„ÅÆAzure„Åß„ÅÆÂà©Áî®‰øÉÈÄ≤„Å´ÂæÆÂäõ„Å™„Åå„Çâ„ÇÇË≤¢ÁåÆ„Åß„Åç„Åü„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅØÂÖâÊ†ÑËá≥Ê•µ„Åß„ÅÇ„Çã„ÄÇ„Åì„Åì„Åß„ÅØ„Åù„ÅÆElastic {ON} Tour„Åß„ÅÆÁô∫Ë°®„Åß‰ΩøÁî®„Åó„Åü„Çπ„É©„Ç§„Éâ„Å´Ë£úË∂≥Ëß£Ë™¨„ÇíÂä†„Åà„Å¶ÂÖ±Êúâ„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åè„ÄÇ\n„Çª„ÉÉ„Ç∑„Éß„É≥„Çπ„É©„Ç§„ÉâÔºàÔºã„Éá„É¢ÂãïÁîªÔºâ 15ÂàÜ„Åß„ÅäÂ±ä„Åë„Åô„Çã Elastic Stack on Azure Ë®≠Ë®à„ÉªÊßãÁØâ„Éé„Ç¶„Éè„Ç¶ from Yoichi Kawasaki\nË£úË∂≥Ëß£Ë™¨ „Éá„Éó„É≠„Ç§„É°„É≥„Éà Azure„Åß„ÅÆElastic Stack„ÅÆÂà©Áî®„ÅØÂΩìÁÑ∂„Å™„Åå„Çâ‰ªÆÊÉ≥„Éû„Ç∑„É≥ÔºàVMÔºâ„Çí‰∏¶„Åπ„Å¶„Åù„Åì„Å´„ÇØ„É©„Çπ„Çø„ÇíÊßãÁØâ„Åô„Çã„Åì„Å®„Å´„Å™„Çã„ÄÇÊÆãÂøµ„Å™„Åå„ÇâÁèæÊôÇÁÇπ„Åß„Éû„Éç„Éº„Ç∏„Éâ„ÅÆElastic„Çµ„Éº„Éì„Çπ„ÅØAzure„Å´„ÅØÂ≠òÂú®„Åó„Å™„ÅÑ„ÄÇVM„Éô„Éº„Çπ„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅßÁâπ„Å´„Ç™„É≥„Éó„É¨„Å®Â§â„Çè„Çâ„Åö„Éû„Éã„É•„Ç¢„É´„Åß„ÅÇ„Å£„Åü„Çä„ÄÅChef„ÇÑAnsible„Å™„Å©„ÅÆÊßãÊàêÁÆ°ÁêÜ„ÉÑ„Éº„É´„Çí‰Ωø„Å£„Å¶„ÇØ„É©„Çπ„Çø„ÇíÁµÑ„Çì„Å†„ÇäÊüîËªü„Å™ÊßãÁØâ„ÅåÂèØËÉΩ„Åß„ÅÇ„Çã„ÇÇ„ÅÆ„ÅÆ„ÄÅ„Åì„Åì„Åß„ÅØAzure„Åß„ÅÆÊßãÁØâ„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅßARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Çí‰Ωø„Å£„Åü„Éá„Éó„É≠„Ç§„É°„É≥„Éà„ÅÆÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åó„Å¶„ÅÑ„Çã„ÄÇ\nAzure Marketplace„Åã„Çâ„ÅÆ„Éá„Éó„É≠„Ç§ÔºöÊúÄ„ÇÇÊâã„Å£Âèñ„ÇäÊó©„ÅÑÊñπÊ≥ï„ÄÇ30Êó•„ÅÆX-Pack„Éà„É©„Ç§„Ç¢„É´„É©„Ç§„Çª„É≥„Çπ„Åå‰ªò„ÅÑ„Å¶„ÅÑ„Å¶„ÄÅ„Éà„É©„Ç§„Ç¢„É´ÊúüÈñì„ÅåÈÅé„Åé„Å¶„ÇÇBYOL„Åß„É©„Ç§„Çª„É≥„Çπ„ÅÆÊõ¥Êñ∞„ÅåÂèØËÉΩ„ÄÇ„ÉÜ„É≥„Éó„É¨„Éº„Éà„Åß„ÅØ2017Âπ¥12ÊúàÊôÇÁÇπ„Åßv2.0.2 „Äú v5.6.3„ÅÆÈÅ∏Êäû„ÅåÂèØËÉΩ„ÄÇ‰Ωï„ÇÇËÄÉ„Åà„ÅöÊúÄÊñ∞Áâà„Çí„ÅîÂà©Áî®„Åè„Å†„Åï„ÅÑ„ÄÇ Github‰∏ä„ÅÆARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Çí„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åó„Å¶„Éá„Éó„É≠„Ç§ÔºöElasticÁ§æ„ÅåÁî®ÊÑè„Åó„ÅüGithub‰∏ä„ÅÆARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Åå„ÅÇ„Çã„ÅÆ„Åß„Åù„Çå„ÇíËá™ÂàÜ„ÅÆË¶Å‰ª∂„Å´Âøú„Åò„Å¶„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åó„Å¶„Éá„Éó„É≠„Ç§„É°„É≥„Éà„Çí„Åô„Çã„ÄÇAzure CLI„ÇÑPowerShell„Å™„Å©„Ç≥„Éû„É≥„Éâ„Çí‰Ωø„Å£„Åü„Éá„Éó„É≠„Ç§„É°„É≥„Éà„ÅåÂèØËÉΩ„Å™„ÅÆ„ÅßÊßãÊàêÁÆ°ÁêÜ„ÉÑ„Éº„É´„Å´ÁµÑ„ÅøËæº„Çì„ÅßÂë®Ëæ∫Áí∞Â¢É„ÇíÂêà„Çè„Åõ„Å¶Ëá™ÂãïÊßãÁØâË®≠ÂÆö„ÇÇÂèØËÉΩ„ÄÇÊÖ£„Çå„Å¶„Åç„Åü„Çâ„Åì„Å°„Çâ„Åå„Çà„ÅÑ„Åß„Åó„Çá„ÅÜ„ÄÇ Êé®Â•®‰ªÆÊÉ≥„Éè„Éº„Éâ„Ç¶„Çß„Ç¢„Å®DISK Elastic„ÇØ„É©„Çπ„ÇøÂÖ®‰Ωì„ÅÆ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÇíÂºï„ÅçÂá∫„Åô„Åü„ÇÅ„Å´„ÅØÊ©üËÉΩÂà•„Å´ÈÅ©Ê≠£„Å™VM„Ç§„É≥„Çπ„Çø„É≥„Çπ„Å®„Çµ„Ç§„Ç∫„ÇíÈÅ∏Êäû„Åè„Å†„Åï„ÅÑ„ÄÇ„Åæ„ÅüVM„Å´„Ç¢„Çø„ÉÉ„ÉÅ„Åô„Çã„Éá„Ç£„Çπ„ÇØ„Å´„Å§„ÅÑ„Å¶„ÅØ„Éì„É´„Éà„Ç§„É≥„ÅßÂèØÁî®ÊÄßË®≠ÂÆö„Åå„Åï„Çå„Å¶„ÅÑ„ÇãManaged Disk„ÄÅ„ÇÇ„Åó„Åè„ÅØPremium Managed Disk„ÇíÈÅ∏Êäû„Åô„Çã„Åì„Å®„Çí„ÅäÂøò„Çå„Å™„Åè„ÄÇ\nÂèØÁî®ÊÄß„ÅÆË®≠ÂÆö„Å´„Å§„ÅÑ„Å¶ Azure„ÅßIaaS„ÅßÂèØÁî®ÊÄß„ÅÆË®≠ÂÆö„Å®„ÅÑ„Åà„Å∞„Åä„Å™„Åò„Åø„ÅÆÂèØÁî®ÊÄß„Çª„ÉÉ„ÉàÔºàAvailability SetÔºâ„Å®ÂèØÁî®ÊÄß„Çæ„Éº„É≥ÔºàAvailability ZoneÔºâ„ÄÇÂΩìÁÑ∂Elastic Stack„ÅÆ„ÇØ„É©„Çπ„Çø„ÇíÁµÑ„ÇÄÊôÇ„ÇÇ„Åì„Çå„Çâ„ÅÆË®≠ÂÆö„ÇíÂÖ•„Çå„Åæ„Åó„Çá„ÅÜ„Å®„ÅÑ„ÅÜ„ÅäË©±„ÄÇÂèØÁî®ÊÄß„Çæ„Éº„É≥„ÅØ„ÄÅ„Åù„ÅÆÂèØÁî®ÊÄß„É¨„Éô„É´„ÅÆÈ´ò„Åï„Åã„ÇâÂ∞ÜÊù•ÁöÑ„Å´„ÅØÂèØÁî®ÊÄß„Çæ„Éº„É≥„Åå‰∏ªÊµÅ„Å™Ë®≠ÂÆö„Å´„Å™„Å£„Å¶„ÅÑ„Åè„ÅØ„Åö„Åß„ÅÇ„Çã„ÇÇ„ÅÆ„ÅÆ„ÄÅ2017Âπ¥12ÊúàÊôÇÁÇπ„ÅßPreview„É™„É™„Éº„Çπ„Åß„ÅÇ„Çä„ÄÅÂà©Áî®ÂèØËÉΩ„É™„Éº„Ç∏„Éß„É≥„ÅåÁ±≥ÂõΩÊù±ÈÉ®Á¨¨Ôºí„ÄÅË•ø„É®„Éº„É≠„ÉÉ„Éë„ÅÆ„Åø„Å®„ÅÑ„ÅÜ„Å®„Å¶„ÇÇÈôêÂÆöÁöÑ„Å™„ÇÇ„ÅÆ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇÁèæÊôÇÁÇπ„Åß„Éó„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥Áî®ÈÄî„Å®„Å™„Çã„Å®ÂèØÁî®ÊÄß„Çª„ÉÉ„Éà‰∏ÄÊäû„Å™„ÅÆ„Åß‰Ωï„ÇÇËÄÉ„Åà„Åö„Å´ÂèØÁî®ÊÄß„Çª„ÉÉ„Éà„ÇíÁµÑ„Çì„Åß„Åè„Å†„Åï„ÅÑ„ÄÇ\nÂèØÁî®ÊÄß„Çª„ÉÉ„ÉàÔºàAvailability SetÔºâ\n‰∏Ä„Å§„ÅÆDC„ÅÆ‰∏≠„ÅßÂêå‰∏Ä„ÅÆÁâ©ÁêÜ„É©„ÉÉ„ÇØ„ÇÑÈõªÊ∫ê„Å™„Å©„ÇíÈÖçÁΩÆ„Åó„Å™„ÅÑ„Çà„ÅÜ„Å´„Åó„Å¶„ÄÅÈöúÂÆ≥„ÅåÁô∫Áîü„Åó„Å¶„ÇÇ„Ç∞„É´„Éº„Éó„ÅÆ‰∏≠„ÅÆ„Å©„Åì„Åã„ÅÆVM„ÅØÁîü„Åç„Å¶„ÅÑ„Çã„Çà„ÅÜ„Å´„Åô„ÇãË®≠ÂÆö„ÅÆ„Åì„Å® VM SLA 99.95%„ÅßÊèê‰æõ ÂèØÁî®ÊÄß„Çæ„Éº„É≥ÔºàAvailability ZoneÔºâ\nÂêÑVM„ÇíÂà•„ÄÖ„ÅÆ„Çæ„Éº„É≥„Å´ÈÖçÁΩÆ„Åô„Çã„ÅÆ„ÅßDC„É¨„Éô„É´„ÅÆÈöúÂÆ≥„Å´„Å§„Çà„ÅÑÔºà„Åù„Çå„Åû„Çå„Çæ„Éº„É≥„ÅØÈõªÊ∫ê„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÄÅÂÜ∑Âç¥Ë£ÖÁΩÆ„ÅåÂÆåÂÖ®„Å´Áâ©ÁêÜÁöÑ„Å´ÂàÜÈõ¢„Åï„Çå„Åü„ÇÇ„ÅÆ„Å®„Å™„Å£„Å¶„ÅÑ„ÇãÔºâ„ÄÇ„Å°„Å™„Åø„Å´„ÄÅAzure„ÅÆ„É™„Éº„Ç∏„Éß„É≥„ÅØË§áÊï∞„ÅÆ„Éá„Éº„Çø„Çª„É≥„Çø„Éº„ÅßÊßãÊàê„Åï„Çå„Å¶„Åä„Çä„ÄÅ„Åù„ÅÆÈñì„ÇíÈ´òÈÄü„Å™„Éê„ÉÉ„ÇØ„Éú„Éº„É≥„ÅßÊé•Á∂ö„Åó„Å¶1„Å§„ÅÆ„É™„Éº„Ç∏„Éß„É≥„Å®„Åó„Å¶ÈÄèÈÅéÁöÑ„Å´Âà©Áî®„ÅåÂèØËÉΩ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÅÆ„Åß„Åì„ÅÆ„Çà„ÅÜ„Å™„Åì„Å®„Åå„Åß„Åç„Çã„Çè„Åë„Å† VM SLA 99.99%„ÅßÊèê‰æõ „ÄêÊ≥®ÊÑèÁÇπ„ÄëÂèØÁî®ÊÄß„Çæ„Éº„É≥„ÅÆË®≠ÂÆö„Åß„ÅØDC„ÅåÂàÜ„Åã„Çå„Å¶ÈÖçÁΩÆ„Åï„Çå„Çã„ÅÆ„ÅßÊ¨°„ÅÆÔºíÁÇπ„ÅÆËÄÉÊÖÆ„ÅåÂøÖË¶ÅÔºöÔºàÔºëÔºâ„Éû„Çπ„Çø„Éº„ÅØÂêÑ„Çæ„Éº„É≥„Å´ÂàÜÊï£„Åô„Çã„Çà„ÅÜ„Å´ÂêÑ„Çæ„Éº„É≥ÊúÄ‰ΩéÔºë„Éé„Éº„ÉâÈÖçÁΩÆ„Åô„Çã„Åì„Å®ÔºàÔºíÔºâ„Éá„Éº„Çø„Éé„Éº„Éâ„ÅØ„Çæ„Éº„É≥„Å´„Åæ„Åü„Åå„ÇãÈÄö‰ø°„ÅåÊ•µÂäõËµ∑„Åì„Çâ„Å™„ÅÑ„Çà„ÅÜ„Å´Â∑•Â§´„Åô„Çã„Åì„Å®„ÄÇ„Åì„Çå„ÇíÂÆüÁèæ„Åô„Çã„ÅÆ„ÅåShard Allocation Awareness„Å®„ÅÑ„ÅÜ‰ªïÁµÑ„Åø„Åß„ÄÅ„Åì„ÅÆ‰ªïÁµÑ„Åø„Çí„Å§„Åã„ÅÜ„Åì„Å®„Åß Âêå‰∏Ä„Çæ„Éº„É≥ÂÜÖ„Å´ÈÖçÁΩÆ„Åï„Çå„Å¶„ÅÑ„Çã„Éé„Éº„Éâ„Å†„Åë„ÅßÂÆåÂÖ®„Å™„Ç∑„É£„Éº„Éâ„Çí‰øùÊåÅ„Åô„Çã„Çà„ÅÜ„Å´„Åó„Å¶„ÄÅÊ§úÁ¥¢Ë¶ÅÊ±Ç„ÅåÂêå‰∏Ä„Çæ„Éº„É≥ÂÜÖ„ÅßÂÆåÁµê„Åß„Åç„Çã„Çà„ÅÜ„Å´Ë®≠ÂÆö„ÅåÂèØËÉΩ„Å®„Å™„Çã „Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç∞„É´„Éº„Éó„ÅÆË®≠ÂÆö Azure„ÅÆIaaS„Å´„Åä„Åë„Çã„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Éï„Ç£„É´„Çø„É™„É≥„Ç∞„ÅÆË®≠ÂÆö„Å´„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç∞„É´„Éº„ÉóÔºàNSGÔºâ„Å®„Çà„Å∞„Çå„ÇãL4„Éï„Ç£„É´„Çø„É™„É≥„Ç∞„Åå„ÅÇ„Çã„ÄÇÂΩìÁÑ∂„Å™„Åå„Çâ„ÄÅÊó¢„Å´X-Pack„ÇíÂ∞éÂÖ•„Åó„Å¶„ÅÑ„Çå„Å∞„Åù„ÅÆ„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ê©üËÉΩ„ÅÆÔºë„Å§„Å®„Åó„Å¶„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„É¨„Éô„É´„ÅÆ„Ç¢„ÇØ„Çª„ÇπÂà∂Âæ°„Å´„Å§„ÅÑ„Å¶„ÇÇË°å„ÅÜ„Åì„Å®„Åå„Åß„Åç„Çã„Åå„ÄÅX-Pack„ÇíÂ∞éÂÖ•„Åó„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØÁ¢∫ÂÆü„Å´NSG„ÅÆË®≠ÂÆö„ÅØÂøÖË¶Å„Å´„Å™„Å£„Å¶„Åè„Çã„ÄÇ„Åæ„Åü„ÄÅElastic Stack‰ª•Â§ñ„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å®„ÅÆÈÄ£Êê∫„ÅÆÈöõ„Å´„ÇÇÂøÖ„ÅöÂøÖË¶Å„Å´„Å™„Å£„Å¶„Åè„Çã„ÄÇAzure‰∏ä„Åß„ÅÆ„Ç∑„Çπ„ÉÜ„É†ÊßãÁØâ„Åß„ÅØÊ¨†„Åã„Åô„Åì„Å®„ÅÆ„Åß„Åç„Å™„ÅÑË®≠ÂÆö„ÅÆÔºë„Å§„ÄÇ\nAzure„Çµ„Éº„Éì„Çπ„Åã„Çâ„ÅÆ„Éá„Éº„Çø„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥ Azure VM„Å´„Å§„ÅÑ„Å¶„ÅØ„ÄÅ„Ç™„É≥„Éó„É¨ÂêåÊßò„Å´„ÄÅ„Éì„É´„Éà„Ç§„É≥„ÅÆBeats„ÇÑlogstash„Å®„ÅÆÈÄ£Êê∫„Å´„Çà„Çä„ÄÅ„Åù„ÅÆ„É≠„Ç∞„ÇÑMetrics„Å™„Å©„ÅÆ„Éá„Éº„Çø„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÇíÂÆüÁèæ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ‰∏ÄÊñπ„ÄÅAzure„ÅåÁâπ„Å´Âäõ„ÇíÂÖ•„Çå„Å¶„ÅÑ„ÇãPaaSÔºàPlatform as a ServicesÔºâ„Åã„Çâ„ÅÆ„Éá„Éº„Çø„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„Å´„Å§„ÅÑ„Å¶„ÅØ„Å©„ÅÜ„Åã„Å®„ÅÑ„ÅÜ„Å®„ÄÅ‰∏ãË®ò„ÅÆ„Çµ„Éº„Éì„Çπ„Å´„Å§„ÅÑ„Å¶„ÅØÊó¢„Å´„Éì„É´„Éà„Ç§„É≥„ÅßÁî®ÊÑè„Åï„Çå„Å¶„ÅÑ„ÇãÊ©üËÉΩ„ÇÑ„ÄÅ„Ç≥„Éü„É•„Éã„ÉÜ„Ç£Ë£ΩLogstash Input „Éó„É©„Ç∞„Ç§„É≥„ÇíÂà©Áî®„Åô„Çã„Åì„Å®„Åß„Éá„Éº„Çø„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÇíÂÆüÁèæ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ H2M_LI_HEADER Azure Blob Storage: logstash-input-azureblob H2M_LI_HEADER Azure Service Bus (Topic): logstash-input-azuretopic H2M_LI_HEADER Azure Event Hub: logstash-input-azureeventhub H2M_LI_HEADER Azure SQL Database: logstash-input-jdbc H2M_LI_HEADER Azure Database for MySQL: logstash-input-jdbc H2M_LI_HEADER Azure Database for PostgreSQL: logstash-input-jdbc H2M_LI_HEADER Azure HDInsight: ES-Hadoop„Å´„Çà„ÇãÈÄ£Êê∫","title":"15ÂàÜ„Åß„ÅäÂ±ä„Åë„Åô„ÇãElastic Stack on AzureË®≠Ë®à„ÉªÊßãÁØâ„Éé„Ç¶„Éè„Ç¶"},{"content":"‰ªäÂπ¥„ÇÇ„ÅÇ„Å®Â∞ë„Åó„ÄÇ„Åª„ÅºË∂£Âë≥„ÅÆÁØÑÂõ≤„ÇíË∂Ö„Åà„Å™„ÅÑ„É¨„Éô„É´„Åß‰ªäÂπ¥Âèñ„ÇäÁµÑ„Çì„Å†„ÉÜ„Éº„Éû„ÅÆÔºë„Å§„Å´Azure Functions with Python„Åå„ÅÇ„Çã„ÄÇ„ÅÇ„Åæ„ÇäÊÉÖÂ†±„ÅåÁÑ°„ÅÑ‰∏≠„ÄÅËààÂë≥Êú¨‰Ωç„Åß„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ„Çí‰Ωú„Å£„Å¶„ÅØÂãï„Åã„Åó„Å¶Ë©¶„Åó„Å¶Âæó„Çâ„Çå„ÅüÊÉÖÂ†±„Çí„Ç∑„Ç≥„Ç∑„Ç≥„Å®Github„Å´‰∏ä„Åí„Å¶„ÅÑ„Çã„ÅÜ„Å°„Å´„Éä„É¨„ÉÉ„Ç∏„ÅåÊ∫ú„Åæ„Å£„Å¶Êù•„Åü„ÄÇ„Åù„Çå„Åª„Å©Â§ö„Åè„ÅØ„Å™„ÅÑ„Å®ÊÄù„ÅÜ„ÅåPython„ÅßAzure Functions„Ç¢„Éó„É™„Çí‰Ωú„Çä„Åü„ÅÑ„Å®„ÅÑ„ÅÜ‰∫∫„ÇÇ„ÅÑ„Çã„Å®ÊÄù„ÅÜ„ÅÆ„Åß„Éé„Ç¶„Éè„Ç¶„Çí„Éñ„É≠„Ç∞„Å´„Åæ„Å®„ÇÅ„Å¶„Åä„Åè„ÄÇ„ÅÑ„Åç„Å™„ÇäÊ∞¥„ÇíÂ∑Æ„Åô„Çà„ÅÜ„Åß„ÅØ„ÅÇ„Çã„Åå„ÄÅÁèæÊôÇÁÇπÔºà2017Âπ¥12ÊúàÔºâ„Åß„ÅØAzure Functions„ÅÆPython„Çµ„Éù„Éº„Çø„Éì„É™„ÉÜ„Ç£„ÅØExperimentalÔºàÂÆüÈ®ìÁöÑ„Çµ„Éù„Éº„ÉàÔºâ„Åß„ÅÇ„Çä„Éó„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥Âêë„Åç„Åß„ÅØ„Å™„ÅÑÁä∂Ê≥Å„Åß„ÅÇ„Çã„ÅÆ„Åß„ÄÅ„Éõ„É≥„Éà„Å´Python„ÅåÂ•Ω„Åç„Å™‰∫∫„ÅåOn your own risk„ÅßÊ•Ω„Åó„Çì„Åß„ÅÑ„Åü„Å†„Åë„Çå„Å∞„Å®ÊÄù„ÅÜ„ÄÇ\nAzure Functions„ÅÆPython„Çµ„Éù„Éº„ÉàÁä∂Ê≥Å Azure Functions„ÅÆRuntime„Å´„ÅØÂ§ß„Åç„Åè1Á≥ª„Å®ÔºíÁ≥ª„ÅÆÔºíÁ®ÆÈ°û„ÅÇ„Çã„Åå„ÄÅÁèæÊôÇÁÇπ„ÅßPython„ÅØ1Á≥ª„Åß„ÅÆ„ÅøExperimental„Çµ„Éù„Éº„Éà„Å®„ÅÑ„ÅÜÁä∂Ê≥ÅÔºà See also Ë®ÄË™û„Çµ„Éù„Éº„ÉàÁä∂Ê≥ÅÔºâ\nExperimentalÔºàÂÆüÈ®ìÁöÑ„Çµ„Éù„Éº„ÉàÔºâ„Å™„ÅÆ„ÅßÊú¨Áï™„Åß„ÅÆÂà©Áî®„ÅØÈùûÊé®Â•®„Åß„ÅÇ„Çä„ÄÅÂÖ¨Âºè„Çµ„Éù„Éº„Éà„ÅØ„Å™„ÅÑÔºà„Éô„Çπ„Éà„Ç®„Éï„Ç©„Éº„Éà„Åß„ÅÆ„Çµ„Éù„Éº„Éà„ÅØÂæó„Çâ„Çå„Çã„ÅØ„ÅöÔºâ„ÄÇ„Åæ„Åü„ÄÅÂΩìÁÑ∂„Å™„Åå„ÇâGAË®ÄË™û„Å´ÊØî„Åπ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅØÊÇ™„ÅÑ„ÄÇPython„ÅØFunctionÂëº„Å≥Âá∫„ÅóÊØé„Å´python.exe„ÅåÂÆüË°å„Åï„Çå„ÇãÔºàGAË®ÄË™û„ÅØRuntime„Å®Âêå„Åò„Éó„É≠„Çª„Çπ„ÅßÂÆüË°åÔºâ„ÄÇ\nÂ∞ÜÊù•ÁöÑ„Å™Ë©±„Çí„Åô„Çã„Å®„ÄÅAzure Functions Runtime 1Á≥ª„Åß„ÅÆPython„Çµ„Éù„Éº„Éà„Å´„Å§„ÅÑ„Å¶„ÅØ‰ªä„ÅÆExperimental„ÅÆÂüü„ÇíË∂Ö„Åà„Çã„Åì„Å®„ÅØ„Å™„ÅÑ„Å†„Çç„ÅÜ„ÄÇ‰∏ÄÊñπ„ÄÅRuntime 2Á≥ª„Åß„ÅØPython„ÅåÊ≠£Âºè„Çµ„Éù„Éº„Éà„Åï„Çå„Çã„Çà„ÅÜ„Å´ÂØæÂøú„ÅåÈÄ≤„ÇÅ„Çâ„Çå„Å¶„ÅÑ„Çã„ÄÇ„Åü„Å†„ÅóÊôÇÊúü„ÅØÊú™ÂÆö„ÄÇ„Åì„ÅÆÂØæÂøú„Å´„Å§„ÅÑ„Å¶„ÅØ‰∏ãË®òGithub Issue„ÅåÂàá„Çâ„Çå„Å¶„Åä„Çä„ÄÅ„ÅÇ„ÇãÁ®ãÂ∫¶„ÅÆÂØæÂøúÁä∂Ê≥Å„Åß„ÅÇ„Çå„Å∞Á¢∫Ë™çÂèØËÉΩ„ÄÇPython„Çí‰Ωø„ÅÜÂà©ÁÇπ„ÅÆÔºë„Å§„Å´„ÄÅÂº∑Âäõ„Å™Êï∞ÁêÜË®àÁÆó„ÄÅËá™ÁÑ∂Ë®ÄË™ûËß£Êûê„ÄÅÊ©üÊ¢∞Â≠¶ÁøíÁ≥ª„É¢„Ç∏„É•„Éº„É´„Åå„ÅÇ„Çã„Åå„ÄÅÊó©„ÅèÂÆâÂÆö„Å®„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅåÂÇô„Çè„Å£„ÅüPython„Çµ„Éº„Éê„É¨„Çπ„Ç¢„Éó„É™ÂÆüË°åÁí∞Â¢É„Åß„Åì„Çå„ÇâÂº∑Âäõ„Å™„É¢„Ç∏„É•„Éº„É´„ÇíÊ¥ªÁî®„Åß„Åç„Åü„Çâ„Å®ÊÄù„ÅÜ„ÅÆ„ÅØÁßÅ„Å†„Åë„Åß„ÅØ„Å™„ÅÑ„Å†„Çç„ÅÜ„ÄÇ‰ªäÂæå„ÅÆÈÄ≤Â±ï„Å´ÊúüÂæÖ„ÄÇ\nFeature planning: first class Python support Hosting Plan„ÅÆÈÅ∏Êäû„Å´„Å§„ÅÑ„Å¶ Consumption Plan vs App Service Plan Azure Functions„ÅÆHosting Plan„Å´„ÅØConsumption Plan„Å®App Service Plan„ÅÆ2„Å§„Åå„ÅÇ„Å£„Å¶„ÄÅË®ÄË™û„Å´Èñ¢‰øÇ„Å™„ÅèÂêÑ„Éó„É©„É≥„ÅÆÁâπÂæ¥„ÅØÊ¨°„ÅÆÈÄö„Çä:\nConsumption Plan\n„Ç≥„Éº„ÉâÂÆüË°åÊôÇ„Å´„Ç≥„É≥„Éî„É•„Éº„ÉÜ„Ç£„É≥„Ç∞Ââ≤„ÇäÂΩì„Å¶ „É™„ÇΩ„Éº„Çπ‰ΩøÁî®ÈáèÔºàÈñ¢Êï∞ÂÆüË°åÊôÇÈñì„ÄÅ‰ΩøÁî®„É°„É¢„É™Ôºâ„ÅßË™≤Èáë Ëá™Âãï„Çπ„Ç±„Éº„É´„ÄÅÂêÑÂá¶ÁêÜ„ÅØ„Äú10ÂàÜ„Åæ„Åß App Service Plan\nÂ∞ÇÁî®VM„Åß„É™„ÇΩ„Éº„ÇπÁ¢∫‰øù Á∂ôÁ∂öÂá¶ÁêÜÔºö10ÂàÜ‰ª•‰∏ä„ÅÆÂá¶ÁêÜ App ServiceÁí∞Â¢É„Åß„ÅÆ„ÅøÂèØËÉΩ„Å™Âá¶ÁêÜ: App Service Environment, VNET/VPNÊé•Á∂ö, „Çà„ÇäÂ§ß„Åç„Å™„Çµ„Ç§„Ç∫„ÅÆVM, etc Python„Åß‰Ωø„ÅÜ‰∏ä„ÅßÊ∞ó„Çí„Å§„Åë„Çã„Éù„Ç§„É≥„Éà Python 3.X„Å™„Å©Runtime„ÅÆÂ§âÊõ¥„ÇíË°å„ÅÜÂ†¥Âêà„ÅØ„ÄÅÂ∞ÇÁî®Áí∞Â¢É„Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Å£„Å¶App Service PlanÂøÖÈ†à Consumption Plan„ÅÆÂ†¥Âêà„ÄÅPython„Å´Èôê„Çâ„ÅöCold„Çπ„Çø„Éº„ÉàÂïèÈ°å„Å®„ÅÑ„ÅÜ‰ºëÁú†„Åó„ÅüFunction„ÅÆËµ∑Âãï„ÅåÊ•µÁ´Ø„Å´ÈÅÖ„Åè„Å™„ÇãÂïèÈ°å„Åå„ÅÇ„Çã„ÅÆ„Å†„Åå„ÄÅPython„ÅÆÂ†¥Âêà„ÅØ„ÄÅGAË®ÄË™û„Å´ÊØî„Åπ„Å¶„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅåÊÇ™„Åè„ÄÅSciPy„Å™„Å©Èáç„ÇÅ„ÅÆ„É¢„Ç∏„É•„Éº„É´„ÇíÂà©Áî®„Åô„Çã„Å®Áµ∂ÊúõÁöÑ„Å´ÈÅÖ„Åè„Å™„Çã„Åì„Å®„Åã„ÇâConsumption Plan„Åß„ÅÆÂïèÈ°å„ÅåÁâπ„Å´È°ïËëó„Å´„Åß„Å¶„Åè„Çã„ÄÇ„Åì„Çå„Åæ„Åß„ÅÆÁµåÈ®ì„Åã„Çâ„ÄÅÂ∞è„Åï„ÅÑ„Ç§„É≥„Çπ„Çø„É≥„Çπ„Çí‰∏¶„Åπ„ÇãConsumption Plan„Çà„Çä„ÇÇÊØîËºÉÁöÑÂ§ß„Åç„Å™„Çµ„Ç§„Ç∫„ÅÆVM„ÅåÈÅ∏„Åπ„ÇãApp Service Plan„ÅÆÊñπ„ÅåÂêë„ÅÑ„Å¶„ÅÑ„Çã„Åì„Å®„ÅåÂ§ö„ÅÑ„ÄÇPython„ÅÆÂ†¥Âêà„ÅØ„ÄÅ‰∫àÊ∏¨ÂèØËÉΩ„Å™„ÉØ„Éº„ÇØ„É≠„Éº„Éâ„Å´ÂØæ„Åó„Å¶App Service Plan„Åß‰Ωø„ÅÜ„Åª„ÅÜ„ÅåÂïèÈ°å„ÅåÂ∞ë„Å™„ÅÑ„ÄÇConsumption Plan„ÅÆÈ≠ÖÂäõ„Åß„ÅÇ„ÇãMicro BillingÔºà‰Ωø„Å£„ÅüÂàÜ„Å†„ÅëË™≤ÈáëÔºâ„ÇÑ„É™„ÇØ„Ç®„Çπ„Éà„Å´Âøú„Åò„Åü„Ç™„Éº„Éà„Çπ„Ç±„Éº„É™„É≥„Ç∞„Å®„ÅÑ„Å£„ÅüÁúü„ÅÆ„Çµ„Éº„Éê„É¨„Çπ„Å´ÊúüÂæÖ„Åï„Çå„ÇãË¶Å‰ª∂„ÅØÊó¢„Å´Ê≠£Âºè„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„ÇãC#„ÄÅNode„Åß„ÇÑ„Å£„Å¶„ÅÑ„Åü„Å†„Åè„ÅÆ„Åå„Çà„ÅÑ„Åã„Å®„ÄÇ [ÂèÇËÄÉ] Cold„Çπ„Çø„Éº„ÉàÂïèÈ°å Consumption Plan„Å´„Åä„Åë„ÇãÂïèÈ°å Azure Functions Cold Start Workaround The only downside is that the consumption model that keeps the cost so dirt-cheap means that unless you are using your Function constantly (in which case, you might be better off with the non-consumption options anyway), you will often be hit with a long delay as your Function wakes up from hibernation ‰ºëÁú†„Åó„ÅüFunction„Çí„Å©„ÅÜËµ∑„Åì„Åô„Åã„Åå„Éù„Ç§„É≥„Éà„ÄÇ‰∫ãÂâç„Å´Á©∫„É™„ÇØ„Ç®„Çπ„Éà„ÇíÈÄÅ„Çã„Åì„Å®„ÅåËÄÉ„Åà„Çâ„Çå„Çã„ÅåÂïèÈ°å„ÅØ„Çø„Ç§„Éü„É≥„Ç∞Ôºà„Éï„Ç©„Éº„É†Èñã„ÅÑ„ÅüÊôÇ„Å®„ÅãÔºâ Python 3.X„É©„É≥„Çø„Ç§„É†„Å∏„ÅÆÂ§âÊõ¥ÊñπÊ≥ï 2017Âπ¥12ÊúàÊôÇÁÇπ„ÅÆAzure Functions„ÅÆ„Éá„Éï„Ç©„É´„ÉàPython Runtime„ÅØ2.7.8„Åß„ÅÇ„Çã„ÄÇSite Extension„Å´Python3.5Á≥ª„Å®Python3.6Á≥ª„ÅåÁî®ÊÑè„Åï„Çå„Å¶„ÅÑ„Çã„ÅÆ„Åß„ÄÅ„Åù„Çå„ÇíÂà©Áî®„Åó„Å¶Functions„ÅßÂà©Áî®„Åô„ÇãPython Runtime„ÇíÂ§âÊõ¥„Åô„ÇãÊñπÊ≥ï„Çí‰∏ãË®ò„Éö„Éº„Ç∏„Å´Á∫è„ÇÅ„Åü„ÄÇ\nHow to change the Python version used in a Function App „É¢„Ç∏„É•„Éº„É´„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´ÊñπÊ≥ï pip„Å®Kudu DebugConsole/UI„ÇíÂà©Áî®„Åó„ÅüÔºíÁ®ÆÈ°û„ÅÆ„É¢„Ç∏„É•„Éº„É´„Ç§„É≥„Çπ„Éà„Éº„É´ÊñπÊ≥ï„Çí‰∏ãË®ò„Éö„Éº„Ç∏„Å´Á∫è„ÇÅ„Åü„ÄÇ\nHow to install Python modules Python„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ ÁßÅ„ÅåË©¶„Åó„ÅüTrigger„Å®BindingÂà©Áî®„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ„ÅØÂÖ®„Å¶‰∏ãË®òGithub„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å´ËøΩÂä†„Åô„Çã„Çà„ÅÜ„Å´„Åó„Å¶„ÅÑ„Çã„ÄÇ„ÇÇ„Åó„Åì„Çå„ÇíË™≠„Çì„Åß„ÅÑ„ÇãÁöÜ„Åï„Çì„Åß‰∏ãË®ò„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Åß„Ç´„Éê„Éº„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑTrigger/Binding„ÅÆÁµÑ„ÅøÂêà„Çè„Åõ„ÇíË©¶„Åï„Çå„Åü„ÇâÊòØÈùû„Å®„ÇÇ„Ç≥„É≥„Éà„É™„Éì„É•„Éº„Éà„Åè„Å†„Åï„ÅÑ„ÄÇ\nhttps://github.com/yokawasa/azure-functions-python-samples „Çπ„É©„Ç§„Éâ„Å®Hands-on„Éû„ÉÜ„É™„Ç¢„É´ Azure Antenna„Å´„Å¶2017Âπ¥11Êúà20Êó•„Å®11Êúà28Êó•„Å´ÂÆüÊñΩ„Åó„Åü„Çª„ÉÉ„Ç∑„Éß„É≥Ë≥áÊñô:\nPython„Å´„Çà„ÇãAzure„Çµ„Éº„Éê„É¨„Çπ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÈñãÁô∫ / Serverless Application Development with Python from Yoichi Kawasaki\nHands-on„Éû„ÉÜ„É™„Ç¢„É´Ôºö\nHands-on: Serverless Application Development with Python „Åù„Çå„Åß„ÅØ„ÄÅEnjoy Serverless Application Development with Python!\n[ËøΩË®ò] ‰∏äË®ò„Çª„ÉÉ„Ç∑„Éß„É≥„Å´Èñ¢„Åô„ÇãË®ò‰∫ã ÊΩúÂÖ•„É¨„Éù„Éº„Éà\u0026raquo; Python„Çí‰Ωø„Å£„ÅüAzure„Çµ„Éº„Éê„É¨„Çπ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÈñãÁô∫ Ê∏ãË∞∑„Éí„Ç´„É™„Ç® Azure Antenna „Éè„É≥„Ç∫„Ç™„É≥ ÂèÇÂä†„É¨„Éù„Éº„Éà ","permalink":"https://unofficialism.info/posts/azure-functions-app-development-with-python-experimental/","summary":"‰ªäÂπ¥„ÇÇ„ÅÇ„Å®Â∞ë„Åó„ÄÇ„Åª„ÅºË∂£Âë≥„ÅÆÁØÑÂõ≤„ÇíË∂Ö„Åà„Å™„ÅÑ„É¨„Éô„É´„Åß‰ªäÂπ¥Âèñ„ÇäÁµÑ„Çì„Å†„ÉÜ„Éº„Éû„ÅÆÔºë„Å§„Å´Azure Functions with Python„Åå„ÅÇ„Çã„ÄÇ„ÅÇ„Åæ„ÇäÊÉÖÂ†±„ÅåÁÑ°„ÅÑ‰∏≠„ÄÅËààÂë≥Êú¨‰Ωç„Åß„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ„Çí‰Ωú„Å£„Å¶„ÅØÂãï„Åã„Åó„Å¶Ë©¶„Åó„Å¶Âæó„Çâ„Çå„ÅüÊÉÖÂ†±„Çí„Ç∑„Ç≥„Ç∑„Ç≥„Å®Github„Å´‰∏ä„Åí„Å¶„ÅÑ„Çã„ÅÜ„Å°„Å´„Éä„É¨„ÉÉ„Ç∏„ÅåÊ∫ú„Åæ„Å£„Å¶Êù•„Åü„ÄÇ„Åù„Çå„Åª„Å©Â§ö„Åè„ÅØ„Å™„ÅÑ„Å®ÊÄù„ÅÜ„ÅåPython„ÅßAzure Functions„Ç¢„Éó„É™„Çí‰Ωú„Çä„Åü„ÅÑ„Å®„ÅÑ„ÅÜ‰∫∫„ÇÇ„ÅÑ„Çã„Å®ÊÄù„ÅÜ„ÅÆ„Åß„Éé„Ç¶„Éè„Ç¶„Çí„Éñ„É≠„Ç∞„Å´„Åæ„Å®„ÇÅ„Å¶„Åä„Åè„ÄÇ„ÅÑ„Åç„Å™„ÇäÊ∞¥„ÇíÂ∑Æ„Åô„Çà„ÅÜ„Åß„ÅØ„ÅÇ„Çã„Åå„ÄÅÁèæÊôÇÁÇπÔºà2017Âπ¥12ÊúàÔºâ„Åß„ÅØAzure Functions„ÅÆPython„Çµ„Éù„Éº„Çø„Éì„É™„ÉÜ„Ç£„ÅØExperimentalÔºàÂÆüÈ®ìÁöÑ„Çµ„Éù„Éº„ÉàÔºâ„Åß„ÅÇ„Çä„Éó„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥Âêë„Åç„Åß„ÅØ„Å™„ÅÑÁä∂Ê≥Å„Åß„ÅÇ„Çã„ÅÆ„Åß„ÄÅ„Éõ„É≥„Éà„Å´Python„ÅåÂ•Ω„Åç„Å™‰∫∫„ÅåOn your own risk„ÅßÊ•Ω„Åó„Çì„Åß„ÅÑ„Åü„Å†„Åë„Çå„Å∞„Å®ÊÄù„ÅÜ„ÄÇ\nAzure Functions„ÅÆPython„Çµ„Éù„Éº„ÉàÁä∂Ê≥Å Azure Functions„ÅÆRuntime„Å´„ÅØÂ§ß„Åç„Åè1Á≥ª„Å®ÔºíÁ≥ª„ÅÆÔºíÁ®ÆÈ°û„ÅÇ„Çã„Åå„ÄÅÁèæÊôÇÁÇπ„ÅßPython„ÅØ1Á≥ª„Åß„ÅÆ„ÅøExperimental„Çµ„Éù„Éº„Éà„Å®„ÅÑ„ÅÜÁä∂Ê≥ÅÔºà See also Ë®ÄË™û„Çµ„Éù„Éº„ÉàÁä∂Ê≥ÅÔºâ\nExperimentalÔºàÂÆüÈ®ìÁöÑ„Çµ„Éù„Éº„ÉàÔºâ„Å™„ÅÆ„ÅßÊú¨Áï™„Åß„ÅÆÂà©Áî®„ÅØÈùûÊé®Â•®„Åß„ÅÇ„Çä„ÄÅÂÖ¨Âºè„Çµ„Éù„Éº„Éà„ÅØ„Å™„ÅÑÔºà„Éô„Çπ„Éà„Ç®„Éï„Ç©„Éº„Éà„Åß„ÅÆ„Çµ„Éù„Éº„Éà„ÅØÂæó„Çâ„Çå„Çã„ÅØ„ÅöÔºâ„ÄÇ„Åæ„Åü„ÄÅÂΩìÁÑ∂„Å™„Åå„ÇâGAË®ÄË™û„Å´ÊØî„Åπ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅØÊÇ™„ÅÑ„ÄÇPython„ÅØFunctionÂëº„Å≥Âá∫„ÅóÊØé„Å´python.exe„ÅåÂÆüË°å„Åï„Çå„ÇãÔºàGAË®ÄË™û„ÅØRuntime„Å®Âêå„Åò„Éó„É≠„Çª„Çπ„ÅßÂÆüË°åÔºâ„ÄÇ\nÂ∞ÜÊù•ÁöÑ„Å™Ë©±„Çí„Åô„Çã„Å®„ÄÅAzure Functions Runtime 1Á≥ª„Åß„ÅÆPython„Çµ„Éù„Éº„Éà„Å´„Å§„ÅÑ„Å¶„ÅØ‰ªä„ÅÆExperimental„ÅÆÂüü„ÇíË∂Ö„Åà„Çã„Åì„Å®„ÅØ„Å™„ÅÑ„Å†„Çç„ÅÜ„ÄÇ‰∏ÄÊñπ„ÄÅRuntime 2Á≥ª„Åß„ÅØPython„ÅåÊ≠£Âºè„Çµ„Éù„Éº„Éà„Åï„Çå„Çã„Çà„ÅÜ„Å´ÂØæÂøú„ÅåÈÄ≤„ÇÅ„Çâ„Çå„Å¶„ÅÑ„Çã„ÄÇ„Åü„Å†„ÅóÊôÇÊúü„ÅØÊú™ÂÆö„ÄÇ„Åì„ÅÆÂØæÂøú„Å´„Å§„ÅÑ„Å¶„ÅØ‰∏ãË®òGithub Issue„ÅåÂàá„Çâ„Çå„Å¶„Åä„Çä„ÄÅ„ÅÇ„ÇãÁ®ãÂ∫¶„ÅÆÂØæÂøúÁä∂Ê≥Å„Åß„ÅÇ„Çå„Å∞Á¢∫Ë™çÂèØËÉΩ„ÄÇPython„Çí‰Ωø„ÅÜÂà©ÁÇπ„ÅÆÔºë„Å§„Å´„ÄÅÂº∑Âäõ„Å™Êï∞ÁêÜË®àÁÆó„ÄÅËá™ÁÑ∂Ë®ÄË™ûËß£Êûê„ÄÅÊ©üÊ¢∞Â≠¶ÁøíÁ≥ª„É¢„Ç∏„É•„Éº„É´„Åå„ÅÇ„Çã„Åå„ÄÅÊó©„ÅèÂÆâÂÆö„Å®„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅåÂÇô„Çè„Å£„ÅüPython„Çµ„Éº„Éê„É¨„Çπ„Ç¢„Éó„É™ÂÆüË°åÁí∞Â¢É„Åß„Åì„Çå„ÇâÂº∑Âäõ„Å™„É¢„Ç∏„É•„Éº„É´„ÇíÊ¥ªÁî®„Åß„Åç„Åü„Çâ„Å®ÊÄù„ÅÜ„ÅÆ„ÅØÁßÅ„Å†„Åë„Åß„ÅØ„Å™„ÅÑ„Å†„Çç„ÅÜ„ÄÇ‰ªäÂæå„ÅÆÈÄ≤Â±ï„Å´ÊúüÂæÖ„ÄÇ\nFeature planning: first class Python support Hosting Plan„ÅÆÈÅ∏Êäû„Å´„Å§„ÅÑ„Å¶ Consumption Plan vs App Service Plan Azure Functions„ÅÆHosting Plan„Å´„ÅØConsumption Plan„Å®App Service Plan„ÅÆ2„Å§„Åå„ÅÇ„Å£„Å¶„ÄÅË®ÄË™û„Å´Èñ¢‰øÇ„Å™„ÅèÂêÑ„Éó„É©„É≥„ÅÆÁâπÂæ¥„ÅØÊ¨°„ÅÆÈÄö„Çä:\nConsumption Plan\n„Ç≥„Éº„ÉâÂÆüË°åÊôÇ„Å´„Ç≥„É≥„Éî„É•„Éº„ÉÜ„Ç£„É≥„Ç∞Ââ≤„ÇäÂΩì„Å¶ „É™„ÇΩ„Éº„Çπ‰ΩøÁî®ÈáèÔºàÈñ¢Êï∞ÂÆüË°åÊôÇÈñì„ÄÅ‰ΩøÁî®„É°„É¢„É™Ôºâ„ÅßË™≤Èáë Ëá™Âãï„Çπ„Ç±„Éº„É´„ÄÅÂêÑÂá¶ÁêÜ„ÅØ„Äú10ÂàÜ„Åæ„Åß App Service Plan\nÂ∞ÇÁî®VM„Åß„É™„ÇΩ„Éº„ÇπÁ¢∫‰øù Á∂ôÁ∂öÂá¶ÁêÜÔºö10ÂàÜ‰ª•‰∏ä„ÅÆÂá¶ÁêÜ App ServiceÁí∞Â¢É„Åß„ÅÆ„ÅøÂèØËÉΩ„Å™Âá¶ÁêÜ: App Service Environment, VNET/VPNÊé•Á∂ö, „Çà„ÇäÂ§ß„Åç„Å™„Çµ„Ç§„Ç∫„ÅÆVM, etc Python„Åß‰Ωø„ÅÜ‰∏ä„ÅßÊ∞ó„Çí„Å§„Åë„Çã„Éù„Ç§„É≥„Éà Python 3.X„Å™„Å©Runtime„ÅÆÂ§âÊõ¥„ÇíË°å„ÅÜÂ†¥Âêà„ÅØ„ÄÅÂ∞ÇÁî®Áí∞Â¢É„Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Å£„Å¶App Service PlanÂøÖÈ†à Consumption Plan„ÅÆÂ†¥Âêà„ÄÅPython„Å´Èôê„Çâ„ÅöCold„Çπ„Çø„Éº„ÉàÂïèÈ°å„Å®„ÅÑ„ÅÜ‰ºëÁú†„Åó„ÅüFunction„ÅÆËµ∑Âãï„ÅåÊ•µÁ´Ø„Å´ÈÅÖ„Åè„Å™„ÇãÂïèÈ°å„Åå„ÅÇ„Çã„ÅÆ„Å†„Åå„ÄÅPython„ÅÆÂ†¥Âêà„ÅØ„ÄÅGAË®ÄË™û„Å´ÊØî„Åπ„Å¶„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅåÊÇ™„Åè„ÄÅSciPy„Å™„Å©Èáç„ÇÅ„ÅÆ„É¢„Ç∏„É•„Éº„É´„ÇíÂà©Áî®„Åô„Çã„Å®Áµ∂ÊúõÁöÑ„Å´ÈÅÖ„Åè„Å™„Çã„Åì„Å®„Åã„ÇâConsumption Plan„Åß„ÅÆÂïèÈ°å„ÅåÁâπ„Å´È°ïËëó„Å´„Åß„Å¶„Åè„Çã„ÄÇ„Åì„Çå„Åæ„Åß„ÅÆÁµåÈ®ì„Åã„Çâ„ÄÅÂ∞è„Åï„ÅÑ„Ç§„É≥„Çπ„Çø„É≥„Çπ„Çí‰∏¶„Åπ„ÇãConsumption Plan„Çà„Çä„ÇÇÊØîËºÉÁöÑÂ§ß„Åç„Å™„Çµ„Ç§„Ç∫„ÅÆVM„ÅåÈÅ∏„Åπ„ÇãApp Service Plan„ÅÆÊñπ„ÅåÂêë„ÅÑ„Å¶„ÅÑ„Çã„Åì„Å®„ÅåÂ§ö„ÅÑ„ÄÇPython„ÅÆÂ†¥Âêà„ÅØ„ÄÅ‰∫àÊ∏¨ÂèØËÉΩ„Å™„ÉØ„Éº„ÇØ„É≠„Éº„Éâ„Å´ÂØæ„Åó„Å¶App Service Plan„Åß‰Ωø„ÅÜ„Åª„ÅÜ„ÅåÂïèÈ°å„ÅåÂ∞ë„Å™„ÅÑ„ÄÇConsumption Plan„ÅÆÈ≠ÖÂäõ„Åß„ÅÇ„ÇãMicro BillingÔºà‰Ωø„Å£„ÅüÂàÜ„Å†„ÅëË™≤ÈáëÔºâ„ÇÑ„É™„ÇØ„Ç®„Çπ„Éà„Å´Âøú„Åò„Åü„Ç™„Éº„Éà„Çπ„Ç±„Éº„É™„É≥„Ç∞„Å®„ÅÑ„Å£„ÅüÁúü„ÅÆ„Çµ„Éº„Éê„É¨„Çπ„Å´ÊúüÂæÖ„Åï„Çå„ÇãË¶Å‰ª∂„ÅØÊó¢„Å´Ê≠£Âºè„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„ÇãC#„ÄÅNode„Åß„ÇÑ„Å£„Å¶„ÅÑ„Åü„Å†„Åè„ÅÆ„Åå„Çà„ÅÑ„Åã„Å®„ÄÇ [ÂèÇËÄÉ] Cold„Çπ„Çø„Éº„ÉàÂïèÈ°å Consumption Plan„Å´„Åä„Åë„ÇãÂïèÈ°å Azure Functions Cold Start Workaround The only downside is that the consumption model that keeps the cost so dirt-cheap means that unless you are using your Function constantly (in which case, you might be better off with the non-consumption options anyway), you will often be hit with a long delay as your Function wakes up from hibernation ‰ºëÁú†„Åó„ÅüFunction„Çí„Å©„ÅÜËµ∑„Åì„Åô„Åã„Åå„Éù„Ç§„É≥„Éà„ÄÇ‰∫ãÂâç„Å´Á©∫„É™„ÇØ„Ç®„Çπ„Éà„ÇíÈÄÅ„Çã„Åì„Å®„ÅåËÄÉ„Åà„Çâ„Çå„Çã„ÅåÂïèÈ°å„ÅØ„Çø„Ç§„Éü„É≥„Ç∞Ôºà„Éï„Ç©„Éº„É†Èñã„ÅÑ„ÅüÊôÇ„Å®„ÅãÔºâ Python 3.","title":"Azure Functions Python Programming  - Experimental"},{"content":"„Åì„Çå„ÅØ9/29 Azure Web Seminar „ÄåAzure „Çµ„Éº„Éì„Çπ„ÇíÊ¥ªÁî®„Åó„Å¶‰Ωú„Çã„Éï„É´„Éû„Éç„Éº„Ç∏„Éâ„Å™ÂÖ®ÊñáÊ§úÁ¥¢„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Äç„ÅÆ„Éï„Ç©„É≠„Éº„Ç¢„ÉÉ„ÉóË®ò‰∫ã„Åß„Åô„ÄÇ„Å™„Åã„Å™„ÅãÊöá„Åå„Åß„Åç„ÅöÂ∞ë„ÄÖÊôÇÈñì„ÅåÁµåÈÅé„Åó„Å¶„Åó„Åæ„ÅÑ„Åæ„Åó„Åü„ÄÇ\nAzure „Çµ„Éº„Éì„Çπ„ÇíÊ¥ªÁî®„Åó„Å¶‰Ωú„Çã„Éï„É´„Éû„Éç„Éº„Ç∏„Éâ„Å™ÂÖ®ÊñáÊ§úÁ¥¢„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ from Yoichi Kawasaki\nSample Application \u0026amp; Source Code „Çª„Éü„Éä„Éº„ÅßÁ¥π‰ªã„Åó„Åü„Çµ„É≥„Éó„É´„Ç¢„Éó„É™„ÅØAzureÂÖ¨Âºè„Çµ„Ç§„Éà„Å´Ëºâ„Åõ„Å¶„ÅÇ„Çã‰ª£Ë°®ÁöÑ„Å™„Çµ„Éº„Éì„Çπ„ÅÆFAQ„Éá„Éº„Çø„ÇíÂÖÉ„Å´„Åó„ÅüHTML/CSS/Javascript„Å´„Çà„ÇãQÔºÜA„Éä„É¨„Ç∏„ÉÉ„Ç∏„Éô„Éº„ÇπÊ§úÁ¥¢„ÅÆ„Ç∑„É≥„Ç∞„É´„Éö„Éº„Ç∏„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß„Åô„ÄÇÊ§úÁ¥¢„Ç®„É≥„Ç∏„É≥„Å´Azure Search„Çí‰Ωø„ÅÑ„ÄÅ„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å´Cosmos DB„Çí‰Ωø„ÅÑAzure Search„ÅÆCosmosDB Indexer„Åß„ÇØ„É≠„Éº„É™„É≥„Ç∞„Åô„ÇãÊßãÊàê„Å´„Åó„Å¶„Åæ„Åô„ÄÇ„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„Å®Ë®≠ÂÆöÊâãÈ†Ü„ÅØ‰ª•‰∏ãGithub„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å´„Ç¢„ÉÉ„Éó„Åó„Å¶„ÅÇ„Çä„Åæ„Åô„ÄÇ„ÇÇ„Åó„Éê„Ç∞„ÇÑË®≠ÂÆöÊâãÈ†ÜÁ≠â„Åß„ÅîË≥™Âïè„Åå„ÅÇ„Çå„Å∞Github„ÅßIssueÁôªÈå≤„ÅÑ„Åü„Å†„Åë„Çå„Å∞ÊôÇÈñì„ÇíË¶ã„Å§„Åë„Å¶ÂØæÂøú„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åç„Åæ„Åô„ÄÇ\nSource Code: https://github.com/yokawasa/azure-search-qna-demo/\nDemo: AI Digital Media Search „Çª„Éü„Éä„Éº‰∏≠„Å´Á¥π‰ªã„Åó„ÅüÈùûÊßãÈÄ†Âåñ„Éá„Éº„Çø„ÅÆÂÖ®ÊñáÊ§úÁ¥¢„Éá„É¢„Å®„Åó„Å¶Á¥π‰ªã„Åó„ÅüAI Digital Media Search„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÄÇ„É°„Éá„Ç£„Ç¢ x Èü≥Â£∞Ë™çË≠ò x Ê©üÊ¢∞ÁøªË®≥ x ÂÖ®ÊñáÊ§úÁ¥¢ÂÖ®„Å¶„ÇíÁµ°„ÇÅ„ÅüÈù¢ÁôΩ„ÅÑ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å™„ÅÆ„Åß„Åì„Å°„Çâ„Åß„Éá„É¢ÂãïÁîª„Å®„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„ÇíÂÖ±Êúâ„Åó„Åæ„Åô„ÄÇ„Åæ„Åü„Åì„ÅÆ„Ç¢„Éó„É™„ÅØAzure PaaS„Çµ„Éº„Éì„Çπ„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Å¶„Éó„É¨„Çº„É≥„ÉÜ„Éº„Ç∑„Éß„É≥„É¨„Ç§„É§„Éº(Web App for Container)„ÅÆ„Åø„Å™„Çâ„Åö„Éá„Éº„ÇøÁîüÊàêÈÉ®ÂàÜÔºàAMS, Functions, Logic AppÔºâ„ÇÇÂÖ®„Å¶„Çµ„Éº„Éê„É¨„Çπ„ÅßÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÅÆ„Åß„Åì„ÅÆ„Ç®„É™„Ç¢„ÅÆ„Çµ„É≥„Éó„É´„Ç¢„Éó„É™„Å®„Åó„Å¶„ÇÇ„Å®„Å¶„ÇÇËâØ„ÅÑ„ÇÇ„ÅÆ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ\nDemo Video: AI Digital Media Search Demo Source Code: https://github.com/shigeyf/ai-digitalmedia AzureSearch.js - Azure Search UI„É©„Ç§„Éñ„É©„É™ AzureSearch.js„ÅØAzure Search„ÅÆUI„É©„Ç§„Éñ„É©„É™„Åß„ÄÅAzure Search„Éó„É≠„ÉÄ„ÇØ„Éà„ÉÅ„Éº„É†‰∏ªË¶ÅÈñãÁô∫ËÄÖ„Å´„Çà„ÇäÈñãÂßã„Åï„Çå„ÅüOSS„É©„Ç§„Éñ„É©„É™„Åß„Åô„ÄÇTypeScript„ÅßÊõ∏„Åã„Çå„Å¶„ÅÑ„Çã„ÅÆ„Åß„Å®„Å¶„ÇÇË™≠„Åø„ÇÑ„Åô„Åè„ÄÅ„Åæ„Åü„ÄÅ„É©„Ç§„Éñ„É©„É™„ÅåÊèê‰æõ„Åô„Çã„Ç™„Éñ„Ç∏„Çß„ÇØ„ÉàÊìç‰Ωú„Å´„Çà„ÇäÈùûÂ∏∏„Å´Áü≠„ÅÑ„Ç≥„Éº„Éâ„Åß„Çµ„Éº„ÉÅ„Éú„ÉÉ„ÇØ„Çπ„ÄÅÁµêÊûúÂá∫Âäõ„ÄÅ„Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥„ÄÅ„Éï„Ç°„Çª„ÉÉ„Éà„ÄÅ„Çµ„Ç∏„Çß„Çπ„Ç∑„Éß„É≥„Å™„Å©„ÅßÊßãÊàê„Åï„Çå„Çã„Çµ„Éº„ÉÅÁî®UI„ÇíÁ∞°Âçò„Å´ÁµÑ„ÅøÁ´ã„Å¶„Çã„Åì„Å®„ÅåÂèØËÉΩ„Åß„Åô„ÄÇ„Å™„Åã„Å™„Åã„ÅÑ„Åë„Å¶„ÅÑ„Çã„É©„Ç§„Éñ„É©„É™„Å´„ÇÇ„Åã„Åã„Çè„Çâ„Åö„ÄÅ„ÅÇ„Åæ„Çä‰∏ñ„ÅÆ‰∏≠„Å´Áü•„Çâ„Çå„Å¶„ÅÑ„Å™„ÅÑ„ÅÆ„ÅØ„ÇÇ„Å£„Åü„ÅÑ„Å™„ÅÑ„Å®ÊÄù„ÅÑ„Çª„Éü„Éä„Éº„ÅÆÊúÄÂæå„ÅßÁ¥π‰ªã„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åç„Åæ„Åó„Åü„ÄÇ„Åì„Çå‰Ωø„Çè„Å™„ÅÑÊâã„ÅØ„Å™„ÅÑ„Åß„Åô„ÄÇÊâã„Å£Âèñ„ÇäÊó©„Åè„ÅØ„ÄÅ‰∏ãË®ò„ÅÆAzureSearch.js„Ç¢„Éó„É™„ÉÜ„É≥„Éó„É¨„Éº„Éà„Ç∏„Çß„Éç„É¨„Éº„Çø„Éö„Éº„Ç∏„ÅßÁöÜ„Åï„Çì„ÅÆAzure Search„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆQueryKey„Å®„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Çπ„Ç≠„Éº„ÉûÔºàJSON„Éï„Ç©„Éº„Éû„ÉÉ„ÉàÔºâ„ÇíÂÖ•Âäõ„Åô„Çã„Å®AzureSearch.js„Ç¢„Éó„É™„ÅÆÈõõÂΩ¢„ÅåÁîüÊàê„Åï„Çå„Åæ„Åô„ÅÆ„Åß„ÄÅ„Åù„Åì„Åã„ÇâÂßã„ÇÅ„Çã„ÅÆ„Åå„Çà„ÅÑ„Åã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ\nAzureSearch.js„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éà„ÉÉ„ÉóÔº†Github „Éá„É¢„Ç¢„Éó„É™„Çµ„Ç§„Éà AzureSearch.js„Ç¢„Éó„É™„ÅÆ„ÉÜ„É≥„Éó„É¨„Éº„Éà„Ç∏„Çß„Éç„É¨„Éº„Çø END\n","permalink":"https://unofficialism.info/posts/building-full-text-search-application-using-azure-services/","summary":"„Åì„Çå„ÅØ9/29 Azure Web Seminar „ÄåAzure „Çµ„Éº„Éì„Çπ„ÇíÊ¥ªÁî®„Åó„Å¶‰Ωú„Çã„Éï„É´„Éû„Éç„Éº„Ç∏„Éâ„Å™ÂÖ®ÊñáÊ§úÁ¥¢„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Äç„ÅÆ„Éï„Ç©„É≠„Éº„Ç¢„ÉÉ„ÉóË®ò‰∫ã„Åß„Åô„ÄÇ„Å™„Åã„Å™„ÅãÊöá„Åå„Åß„Åç„ÅöÂ∞ë„ÄÖÊôÇÈñì„ÅåÁµåÈÅé„Åó„Å¶„Åó„Åæ„ÅÑ„Åæ„Åó„Åü„ÄÇ\nAzure „Çµ„Éº„Éì„Çπ„ÇíÊ¥ªÁî®„Åó„Å¶‰Ωú„Çã„Éï„É´„Éû„Éç„Éº„Ç∏„Éâ„Å™ÂÖ®ÊñáÊ§úÁ¥¢„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ from Yoichi Kawasaki\nSample Application \u0026amp; Source Code „Çª„Éü„Éä„Éº„ÅßÁ¥π‰ªã„Åó„Åü„Çµ„É≥„Éó„É´„Ç¢„Éó„É™„ÅØAzureÂÖ¨Âºè„Çµ„Ç§„Éà„Å´Ëºâ„Åõ„Å¶„ÅÇ„Çã‰ª£Ë°®ÁöÑ„Å™„Çµ„Éº„Éì„Çπ„ÅÆFAQ„Éá„Éº„Çø„ÇíÂÖÉ„Å´„Åó„ÅüHTML/CSS/Javascript„Å´„Çà„ÇãQÔºÜA„Éä„É¨„Ç∏„ÉÉ„Ç∏„Éô„Éº„ÇπÊ§úÁ¥¢„ÅÆ„Ç∑„É≥„Ç∞„É´„Éö„Éº„Ç∏„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß„Åô„ÄÇÊ§úÁ¥¢„Ç®„É≥„Ç∏„É≥„Å´Azure Search„Çí‰Ωø„ÅÑ„ÄÅ„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å´Cosmos DB„Çí‰Ωø„ÅÑAzure Search„ÅÆCosmosDB Indexer„Åß„ÇØ„É≠„Éº„É™„É≥„Ç∞„Åô„ÇãÊßãÊàê„Å´„Åó„Å¶„Åæ„Åô„ÄÇ„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„Å®Ë®≠ÂÆöÊâãÈ†Ü„ÅØ‰ª•‰∏ãGithub„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å´„Ç¢„ÉÉ„Éó„Åó„Å¶„ÅÇ„Çä„Åæ„Åô„ÄÇ„ÇÇ„Åó„Éê„Ç∞„ÇÑË®≠ÂÆöÊâãÈ†ÜÁ≠â„Åß„ÅîË≥™Âïè„Åå„ÅÇ„Çå„Å∞Github„ÅßIssueÁôªÈå≤„ÅÑ„Åü„Å†„Åë„Çå„Å∞ÊôÇÈñì„ÇíË¶ã„Å§„Åë„Å¶ÂØæÂøú„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åç„Åæ„Åô„ÄÇ\nSource Code: https://github.com/yokawasa/azure-search-qna-demo/\nDemo: AI Digital Media Search „Çª„Éü„Éä„Éº‰∏≠„Å´Á¥π‰ªã„Åó„ÅüÈùûÊßãÈÄ†Âåñ„Éá„Éº„Çø„ÅÆÂÖ®ÊñáÊ§úÁ¥¢„Éá„É¢„Å®„Åó„Å¶Á¥π‰ªã„Åó„ÅüAI Digital Media Search„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÄÇ„É°„Éá„Ç£„Ç¢ x Èü≥Â£∞Ë™çË≠ò x Ê©üÊ¢∞ÁøªË®≥ x ÂÖ®ÊñáÊ§úÁ¥¢ÂÖ®„Å¶„ÇíÁµ°„ÇÅ„ÅüÈù¢ÁôΩ„ÅÑ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å™„ÅÆ„Åß„Åì„Å°„Çâ„Åß„Éá„É¢ÂãïÁîª„Å®„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„ÇíÂÖ±Êúâ„Åó„Åæ„Åô„ÄÇ„Åæ„Åü„Åì„ÅÆ„Ç¢„Éó„É™„ÅØAzure PaaS„Çµ„Éº„Éì„Çπ„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Å¶„Éó„É¨„Çº„É≥„ÉÜ„Éº„Ç∑„Éß„É≥„É¨„Ç§„É§„Éº(Web App for Container)„ÅÆ„Åø„Å™„Çâ„Åö„Éá„Éº„ÇøÁîüÊàêÈÉ®ÂàÜÔºàAMS, Functions, Logic AppÔºâ„ÇÇÂÖ®„Å¶„Çµ„Éº„Éê„É¨„Çπ„ÅßÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÅÆ„Åß„Åì„ÅÆ„Ç®„É™„Ç¢„ÅÆ„Çµ„É≥„Éó„É´„Ç¢„Éó„É™„Å®„Åó„Å¶„ÇÇ„Å®„Å¶„ÇÇËâØ„ÅÑ„ÇÇ„ÅÆ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ\nDemo Video: AI Digital Media Search Demo Source Code: https://github.com/shigeyf/ai-digitalmedia AzureSearch.js - Azure Search UI„É©„Ç§„Éñ„É©„É™ AzureSearch.js„ÅØAzure Search„ÅÆUI„É©„Ç§„Éñ„É©„É™„Åß„ÄÅAzure Search„Éó„É≠„ÉÄ„ÇØ„Éà„ÉÅ„Éº„É†‰∏ªË¶ÅÈñãÁô∫ËÄÖ„Å´„Çà„ÇäÈñãÂßã„Åï„Çå„ÅüOSS„É©„Ç§„Éñ„É©„É™„Åß„Åô„ÄÇTypeScript„ÅßÊõ∏„Åã„Çå„Å¶„ÅÑ„Çã„ÅÆ„Åß„Å®„Å¶„ÇÇË™≠„Åø„ÇÑ„Åô„Åè„ÄÅ„Åæ„Åü„ÄÅ„É©„Ç§„Éñ„É©„É™„ÅåÊèê‰æõ„Åô„Çã„Ç™„Éñ„Ç∏„Çß„ÇØ„ÉàÊìç‰Ωú„Å´„Çà„ÇäÈùûÂ∏∏„Å´Áü≠„ÅÑ„Ç≥„Éº„Éâ„Åß„Çµ„Éº„ÉÅ„Éú„ÉÉ„ÇØ„Çπ„ÄÅÁµêÊûúÂá∫Âäõ„ÄÅ„Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥„ÄÅ„Éï„Ç°„Çª„ÉÉ„Éà„ÄÅ„Çµ„Ç∏„Çß„Çπ„Ç∑„Éß„É≥„Å™„Å©„ÅßÊßãÊàê„Åï„Çå„Çã„Çµ„Éº„ÉÅÁî®UI„ÇíÁ∞°Âçò„Å´ÁµÑ„ÅøÁ´ã„Å¶„Çã„Åì„Å®„ÅåÂèØËÉΩ„Åß„Åô„ÄÇ„Å™„Åã„Å™„Åã„ÅÑ„Åë„Å¶„ÅÑ„Çã„É©„Ç§„Éñ„É©„É™„Å´„ÇÇ„Åã„Åã„Çè„Çâ„Åö„ÄÅ„ÅÇ„Åæ„Çä‰∏ñ„ÅÆ‰∏≠„Å´Áü•„Çâ„Çå„Å¶„ÅÑ„Å™„ÅÑ„ÅÆ„ÅØ„ÇÇ„Å£„Åü„ÅÑ„Å™„ÅÑ„Å®ÊÄù„ÅÑ„Çª„Éü„Éä„Éº„ÅÆÊúÄÂæå„ÅßÁ¥π‰ªã„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åç„Åæ„Åó„Åü„ÄÇ„Åì„Çå‰Ωø„Çè„Å™„ÅÑÊâã„ÅØ„Å™„ÅÑ„Åß„Åô„ÄÇÊâã„Å£Âèñ„ÇäÊó©„Åè„ÅØ„ÄÅ‰∏ãË®ò„ÅÆAzureSearch.js„Ç¢„Éó„É™„ÉÜ„É≥„Éó„É¨„Éº„Éà„Ç∏„Çß„Éç„É¨„Éº„Çø„Éö„Éº„Ç∏„ÅßÁöÜ„Åï„Çì„ÅÆAzure Search„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆQueryKey„Å®„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Çπ„Ç≠„Éº„ÉûÔºàJSON„Éï„Ç©„Éº„Éû„ÉÉ„ÉàÔºâ„ÇíÂÖ•Âäõ„Åô„Çã„Å®AzureSearch.js„Ç¢„Éó„É™„ÅÆÈõõÂΩ¢„ÅåÁîüÊàê„Åï„Çå„Åæ„Åô„ÅÆ„Åß„ÄÅ„Åù„Åì„Åã„ÇâÂßã„ÇÅ„Çã„ÅÆ„Åå„Çà„ÅÑ„Åã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ\nAzureSearch.js„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éà„ÉÉ„ÉóÔº†Github „Éá„É¢„Ç¢„Éó„É™„Çµ„Ç§„Éà AzureSearch.js„Ç¢„Éó„É™„ÅÆ„ÉÜ„É≥„Éó„É¨„Éº„Éà„Ç∏„Çß„Éç„É¨„Éº„Çø END","title":"Developing Full Managed Search Application in Azure"},{"content":"Azure Search„ÅÆ„Ç¢„Éä„É©„Ç§„Ç∂„Éº„Å´„Çà„Çã„ÉÜ„Ç≠„Çπ„ÉàËß£ÊûêÁµêÊûú„ÇíÂá∫Âäõ„Åô„ÇãÔºà„Å†„Åë„ÅÆÔºâ„ÉÑ„Éº„É´„Çí‰Ωú„Å£„Å¶„Åø„Åü„ÅÆ„Åß„Åì„Åì„ÅßÁ¥π‰ªã„Åó„Åæ„Åô„ÄÇ„Åù„ÅÆÂêç„ÇÇazure-search-taÔºàta=Test AnalyzerÔºâ„ÄÇ‰∏≠Ë∫´„ÅØAzure Search„ÅÆAnalyzer API„ÅÆÂá∫ÂäõÁµêÊûú„ÇíÊï¥ÂΩ¢„Åó„Å¶Ë°®Á§∫„Åï„Åõ„Å¶„ÅÑ„Å¶„ÅÑ„Çã„Å†„Åë„ÅÆÂçòÁ¥î„Å™„ÇÇ„ÅÆ„Åß„ÅÇ„Çä„Åæ„Åô„Åå„ÄÅAzure Search„ÅÆÂÖ®ÊñáÊ§úÁ¥¢„ÉÅ„É•„Éº„Éã„É≥„Ç∞„ÇÑ„Ç≠„Éº„ÉØ„Éº„Éâ„Å´„Éí„ÉÉ„Éà„Åó„Å™„ÅÑÂéüÂõ†Ë™øÊüª„Çí„Åô„ÇãÈöõ„Å´„ÅØÂΩπ„Å´Á´ã„Å§„Å®ÊÄù„Å£„Å¶„Åæ„Åô„ÄÇ„Äå„Å©„ÅÜ„Åó„Å¶„Åì„ÅÆ„Ç≠„Éº„ÉØ„Éº„Éâ„Åå„Å≤„Å£„Åã„Åã„Çâ„Å™„ÅÑ„ÅÆÔºü„Äç„ÇíÁ™Å„ÅçË©∞„ÇÅ„Çã„Å´„ÅØÊúÄÁµÇÁöÑ„Å´„Ç¢„Éä„É©„Ç§„Ç∂„ÅÆ„ÉÜ„Ç≠„Çπ„ÉàËß£ÊûêÁµêÊûú„Å®Á™Å„ÅçÂêà„Çè„Åõ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÅÆ„Å®„ÄÅ„Ç¢„Éä„É©„Ç§„Ç∂„Éº„ÇíÈÅ∏Êäû„Åô„ÇãÈöõ„Å´„ÉÜ„Ç≠„Çπ„ÉàËß£Êûê„ÅåË¶ñË¶öÂåñ„Åï„Çå„Å¶„ÅÑ„Çã„Å®Âà§Êñ≠„Åó„ÇÑ„Åô„ÅÑ„Å†„Çç„ÅÜ„Å®„ÄÇ„ÉÑ„Éº„É´„ÅØ2Á®ÆÈ°û„Åß ÔºàÔºëÔºâWeb UI„ÉÑ„Éº„É´„Å®ÔºàÔºíÔºâ„Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„ÉÑ„Éº„É´\nWeb UI Tool https://github.com/yokawasa/azure-search-ta\n„Ç§„É≥„Çπ„Éà„Éº„É´„ÅØË∂ÖÁ∞°Âçò„ÄÇÔºàÔºëÔºâGithub„Åã„Çâazure-search-ta„Çíclone ÔºàÔºíÔºâazure-search-ta/ui ÈÖç‰∏ã„ÅÆ„Éï„Ç°„Ç§„É´„ÇíPHP„ÅåÂãï„ÅèWeb„Çµ„Éº„Éê„Å´„Ç≥„Éî„Éº ÔºàÔºìÔºâanalyze-api.php„Çí„Ç®„Éá„Ç£„Çø„ÅßÈñã„ÅÑ„Å¶„Åä‰Ωø„ÅÑ„ÅÆAzure Search„Ç´„Ç¶„É≥„ÉàÂêç„Å®Azure Search API Admin„Ç≠„Éº„ÅÆÂÄ§„ÇíË®≠ÂÆö„Åè„Å†„Åï„ÅÑ„ÄÇ„ÅÇ„Å®„ÅØazure-search-ta-ui.html„Å´„Ç¢„ÇØ„Çª„Çπ„ÅÑ„Åü„Å†„Åë„Çå„Å∞‰∏äË®ò„ÅÆ„Çà„ÅÜ„Å™UI„ÅåÂá∫Âäõ„Åï„Çå„Çã„ÅØ„Åö„Åß„Åô„ÄÇ„Å™„ÅúHTML/JS„Å†„Åë„Åß„ÅØ„Å™„ÅèÈñì„Å´PHP„ÇíÊåü„Çì„Åß„ÅÑ„Çã„ÅÆ„Åã„Å´„Å§„ÅÑ„Å¶„ÄÅAzure Search„ÅÆAnalyze API„ÇÑÁÆ°ÁêÜÁ≥ªAPI„É™„ÇØ„Ç®„Çπ„Éà„Å´‰ΩçÁΩÆ‰ªò„Åë„Çâ„Çå„Å¶„Åä„Çä„ÄÅÁÆ°ÁêÜÁ≥ªAPI„ÅØvia CORS„Åß„ÅÆ„É™„ÇØ„Ç®„Çπ„Éà„ÇíÂèó„Åë‰ªò„Åë„Å¶„ÅÑ„Å™„ÅÑ„Åã„Çâ„Åß„ÅÇ„Çã„ÄÇ\n$ git clone https://github.com/yokawasa/azure-search-ta.git` $ vi azure-search-ta/ui/analyze-api.php $azureSearchAccount=\u0026#34;\u0026#34;; $azureSearchApiKey = \u0026#34;\u0026#34;; Command-Line Tool 1. „Ç§„É≥„Çπ„Éà„Éº„É´„Å®Ë®≠ÂÆö pip„Åßazure-search-ta„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„ÄÇÊó¢„Å´Âè§„ÅÑ„Éê„Éº„Ç∏„Éß„É≥„Çí„Ç§„É≥„Çπ„Éà„Éº„É´Ê∏à„Åø„Åß„Ç¢„ÉÉ„Éó„Éá„Éº„Éà„Åô„ÇãÈöõ„ÅØ‚Äï‚Äïupgrade„Çí„Å§„Åë„Å¶ÂÆüË°å„Åè„Å†„Åï„ÅÑ„ÄÇ\n$ pip install --user azure-search-ta Ê¨°„Å´„ÄÅsearch.conf„Å´„Åä‰Ωø„ÅÑ„ÅÆAzure Search„Ç´„Ç¶„É≥„ÉàÂêç„Å®Azure Search API Admin„Ç≠„Éº„ÅÆÂÄ§„ÇíË®≠ÂÆö„Åè„Å†„Åï„ÅÑ„ÄÇ\n# Azure Search Service Name ( never put space before and after = ) SEARCH_SERVICE_NAME= # Azure Search API Admin Key ( never put space before and after = ) SEARCH_API_KEY= 2. ‰Ωø„ÅÑÊñπ „ÅÑ„Åè„Å§„Åã‰Ωø„ÅÑÊñπ„ÇíÁ¥π‰ªã„Åó„Åæ„Åô„ÄÇ\nusage: azure-search-ta [-h] [-v] [-c CONF] [-i INDEX] [-a ANALYZER] [-t TEXT] [-o OUTPUT]` This program do text analysis and generate formatted output by using Azure Search Analyze API optional arguments: -h, --help show this help message and exit -v, --version show program\u0026#39;s version number and exit -c CONF, --conf CONF Azure Search Configuration file. Default:search.conf -i INDEX, --index INDEX Azure Search index name -a ANALYZER, --analyzer ANALYZER Azure Search analyzer name -t TEXT, --text TEXT A file path or HTTP(s) URL from which the command line reads the text to analyze -o OUTPUT, --output OUTPUT Output format (\u0026#34;simple\u0026#34; or \u0026#34;normal\u0026#34;). Default:normal ja.microsoft„Ç¢„Éä„É©„Ç§„Ç∂„Éº„Å´„Çà„Çã„ÉÜ„Ç≠„Çπ„ÉàËß£ÊûêÁµêÊûú„Çínormal„É¢„Éº„Éâ„ÅßÂá∫Âäõ„Åô„Çã‰æã„ÄÇAnalyzer API„ÅØ„Éë„É©„É°„Éº„Çø„Å´„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÂêç„ÅåÂøÖË¶Å„Å™„ÅÆ„Åß„ÄÅ„Å™„Çì„Åß„ÇÇ„ÅÑ„ÅÑ„ÅÆ„Åß„ÅîËá™ÂàÜ„ÅÆ„Ç¢„Ç´„Ç¶„É≥„Éà„Å´Ë®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Çã„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÂêç„ÇíÊåáÂÆö„Åè„Å†„Åï„ÅÑ„ÄÇ„Åì„Åì„Åß„ÅØ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπta„Åßsimple.txt„Å´ÂØæË±°„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÇíË®òÂÖ•„Åó„Å¶ÂÆüË°å„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ\n$ cat sample1.txt ÂêæËº©„ÅØÁå´„Åß„ÅÇ„Çã $ azure-search-ta -c ./search.conf -i ta -a ja.microsoft --t sample1.txt INPUT: ÂêæËº©„ÅØÁå´„Åß„ÅÇ„Çã TOKENS: [ÂêæËº©] [Áå´] [„ÅÇ„Çã] Azure Search„Å´„Éì„É´„Éà„Ç§„É≥„Åï„Çå„Å¶„ÅÑ„Çã„Ç¢„Éä„É©„Ç§„Ç∂„Éº„Åß„Åë„Åß„Å™„ÅèÁöÜ„Åï„Çì„Åå‰ΩúÊàê„Åó„Åü„Ç´„Çπ„Çø„É†„Ç¢„Éä„É©„Ç§„Ç∂„Éº„Å´„Çà„Çã„ÉÜ„Ç≠„Çπ„ÉàËß£ÊûêÁµêÊûú„ÇÇÂΩìÁÑ∂Âá∫ÂäõÂèØËÉΩ„Åß„Åô„ÄÇ‰ª•‰∏ã„ÅØ„ÄÅ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπtacustom„Å´N„Ç∞„É©„É†ÂàÜÂâ≤„ÅÆ„Ç´„Çπ„Çø„É†„Ç¢„Éä„É©„Ç§„Ç∂„Éºmy_ngram„Çí‰ΩúÊàê„Åó„Åü„Å®„Åó„Å¶my_ngram„Ç¢„Éä„É©„Ç§„Ç∂„Éº„Å´„Çà„Çã„ÉÜ„Ç≠„Çπ„ÉàËß£ÊûêÁµêÊûú„ÇíÂá∫Âäõ„Åô„Çã‰æã„Åß„Åô„ÄÇ„Ç´„Çπ„Çø„É†„Ç¢„Éä„É©„Ç§„Ç∂„Éº„ÅÆÂÆöÁæ©„ÅØGithub„Éö„Éº„Ç∏„ÅÆ„Åª„ÅÜ„Å´Ë©≥„Åó„ÅèÊõ∏„ÅÑ„Å¶„ÅÑ„Çã„ÅÆ„Åß„Çà„Åã„Å£„Åü„Çâ„Å©„ÅÜ„Åû„ÄÇ\n$ cat sample1.txt ÂêæËº©„ÅØÁå´„Åß„ÅÇ„Çã $ azure-search-ta -c ./search.conf -i tacustom -a my_ngram --t sample1.txt -o simple \u0026#39;ÂêæËº©\u0026#39; \u0026#39;ÂêæËº©„ÅØ\u0026#39; \u0026#39;ÂêæËº©„ÅØÁå´„Åß\u0026#39; \u0026#39;ÂêæËº©„ÅØÁå´\u0026#39; \u0026#39;Ëº©„ÅØÁå´„Åß„ÅÇ\u0026#39; \u0026#39;Ëº©„ÅØ\u0026#39; \u0026#39;Ëº©„ÅØÁå´\u0026#39; \u0026#39;Ëº©„ÅØÁå´„Åß\u0026#39; \u0026#39;„ÅØÁå´„Åß„ÅÇ\u0026#39; \u0026#39;„ÅØÁå´„Åß\u0026#39; \u0026#39;„ÅØÁå´\u0026#39; \u0026#39;„ÅØÁå´„Åß„ÅÇ„Çã\u0026#39; \u0026#39;Áå´„Åß„ÅÇ\u0026#39; \u0026#39;Áå´„Åß\u0026#39; \u0026#39;Áå´„Åß „ÅÇ„Çã\u0026#39; \u0026#39;„Åß„ÅÇ„Çã\u0026#39; \u0026#39;„Åß„ÅÇ\u0026#39; \u0026#39;„ÅÇ„Çã\u0026#39; ‰ªñ„Å´„ÅØ„ÄÅazure-search-ta„ÅØ„Ç§„É≥„Çø„Éº„Éç„ÉÉ„Éà‰∏ä„ÅÆ„Éö„Éº„Ç∏„ÅÆ„ÉÜ„Ç≠„Çπ„ÉàËß£ÊûêÊ©üËÉΩ„ÇÇ‰ªò„ÅÑ„Å¶„ÅÑ„Çã„ÅÆ„Åß„ÄÅ„Åù„ÅÑ„Å§„ÇíË©¶„Åó„Å¶„Åø„Åæ„Åô„ÄÇja.lucene„Ç¢„Éä„É©„Ç§„Ç∂„Çí‰Ωø„Å£„Å¶http://www.yahoo.co.jp„Éà„ÉÉ„Éó„Éö„Éº„Ç∏„ÅÆÂÜÖÂÆπ„ÇíËß£Êûê„Åó„Åæ„Åô„ÄÇ\n$ azure-search-ta -c ./search.conf -i ta -a ja.lucene --t http://www.yahoo.co.jp -o simple \u0026#39;html\u0026#39; \u0026#39;public\u0026#39; \u0026#39;w\u0026#39; \u0026#39;3\u0026#39; \u0026#39;c\u0026#39; \u0026#39;dtd\u0026#39; \u0026#39;html\u0026#39; \u0026#39;4\u0026#39; \u0026#39;01\u0026#39; \u0026#39;transitional\u0026#39; \u0026#39;en\u0026#39; \u0026#39;http\u0026#39; \u0026#39;www\u0026#39; \u0026#39;w\u0026#39; \u0026#39;3\u0026#39; \u0026#39;org\u0026#39; \u0026#39;tr\u0026#39; \u0026#39;html\u0026#39; \u0026#39;4\u0026#39; \u0026#39;loose\u0026#39; \u0026#39;dtd\u0026#39; \u0026#39;yahoo\u0026#39; \u0026#39;japan\u0026#39; \u0026#39;„Éò„É´„Éó\u0026#39; \u0026#39;yahoo\u0026#39; \u0026#39;japan\u0026#39; \u0026#39;„Éà„ÉÉ„Éó„Éö„Éº„Ç∏\u0026#39; \u0026#39;Ê©üËÉΩ\u0026#39; \u0026#39;Ê≠£„Åó„Åè\u0026#39; \u0026#39;„Åî\u0026#39; \u0026#39;Âà©Áî®\u0026#39; \u0026#39;„ÅÑ„Åü„Å†„Åè\u0026#39; \u0026#39;‰∏ãË®ò\u0026#39; \u0026#39;Áí∞Â¢É\u0026#39; \u0026#39;ÂøÖË¶Å\u0026#39; \u0026#39;windows\u0026#39; \u0026#39;internet\u0026#39; \u0026#39;explorer\u0026#39; \u0026#39;9\u0026#39; \u0026#39;0\u0026#39; \u0026#39;‰ª•‰∏ä\u0026#39; \u0026#39;chrome\u0026#39; \u0026#39;ÊúÄÊñ∞\u0026#39; \u0026#39;Áâà\u0026#39; \u0026#39;firefox\u0026#39; \u0026#39;ÊúÄÊñ∞\u0026#39; \u0026#39;Áâà\u0026#39; \u0026#39;microsoft\u0026#39; \u0026#39;edge\u0026#39; \u0026#39;macintosh\u0026#39; \u0026#39;safari\u0026#39; \u0026#39;5\u0026#39; \u0026#39;0\u0026#39; \u0026#39;‰ª•‰∏ä\u0026#39; \u0026#39;internet\u0026#39; \u0026#39;explorer\u0026#39; \u0026#39;9\u0026#39; \u0026#39;0\u0026#39; \u0026#39;‰ª•‰∏ä\u0026#39; \u0026#39;„Åî\u0026#39; \u0026#39;Âà©Áî®\u0026#39; \u0026#39;Â†¥Âêà\u0026#39; \u0026#39;internet\u0026#39; \u0026#39;explorer\u0026#39; \u0026#39;‰∫íÊèõ\u0026#39; \u0026#39;Ë°®Á§∫\u0026#39; \u0026#39;ÂèÇËÄÉ\u0026#39; \u0026#39;‰∫íÊèõ\u0026#39; \u0026#39;Ë°®Á§∫\u0026#39; \u0026#39;ÁÑ°Âäπ\u0026#39; \u0026#39;Âåñ\u0026#39; \u0026#39;Ë©¶„Åó\u0026#39; \u0026#39;„Åè„Å†„Åï„Çã\u0026#39; \u0026#39;Êù±Âåó\u0026#39; \u0026#39;Ëá™Ëª¢Ëªä\u0026#39; \u0026#39;„Ç§„Éô„É≥„Éà\u0026#39; \u0026#39;ÂèÇÂä†\u0026#39; \u0026#39;ÊñπÊ≥ï\u0026#39; \u0026#39;‰∫ãÂâç\u0026#39; \u0026#39;„ÉÅ„Çß„ÉÉ„ÇØ\u0026#39; \u0026#39;„Åì„Å†„Çè„Çä\u0026#39; \u0026#39;„Åî\u0026#39; \u0026#39;ÂΩìÂú∞\u0026#39; \u0026#39;„Çπ„Ç§„Éº„ÉÑ\u0026#39; \u0026#39;Âèñ„ÇäÂØÑ„Åõ„Çã\u0026#39; \u0026#39;‰∏äÊµ∑\u0026#39; \u0026#39;„Éû„Éº„Ç∏„É£„É≥\u0026#39; \u0026#39;ÂÆöÁï™\u0026#39; \u0026#39;„Ç≤„Éº„É†\u0026#39; \u0026#39;ÁÑ°Êñô\u0026#39; \u0026#39;ÈÅä„Å∂\u0026#39; \u0026#39;„Éã„É•„Éº„Çπ\u0026#39; \u0026#39;11\u0026#39; \u0026#39;ÊôÇ\u0026#39; \u0026#39;1\u0026#39; \u0026#39;ÂàÜ\u0026#39; \u0026#39;Êõ¥Êñ∞\u0026#39; \u0026#39;ÈüìÂõΩ\u0026#39; \u0026#39;Âåó\u0026#39; \u0026#39;Â§™ÈôΩ\u0026#39; \u0026#39;ÊîøÁ≠ñ\u0026#39; \u0026#39;ÂõûÂ∏∞\u0026#39; \u0026#39;Â®ò\u0026#39; \u0026#39;ÊîæÁΩÆ\u0026#39; \u0026#39;ÁÜ±‰∏≠\u0026#39; \u0026#39;Áóá\u0026#39; \u0026#39;Ê≠ª„Å™„Åô\u0026#39; \u0026#39;ÈÄÆÊçï\u0026#39; \u0026#39;‰øùËÇ≤\u0026#39; \u0026#39;Ê≠ª‰∫°\u0026#39; \u0026#39;‰∫ãÊïÖ\u0026#39; \u0026#39;Áù°Áú†\u0026#39; \u0026#39;‰∏≠\u0026#39; \u0026#39;Ê≥®ÊÑè\u0026#39; \u0026#39;‰∏âËè±\u0026#39; \u0026#39;ufj\u0026#39; \u0026#39;Ê≥ï‰∫∫\u0026#39; \u0026#39;ËûçË≥á\u0026#39; \u0026#39;ÈäÄË°å\u0026#39; \u0026#39;ÈõÜÁ¥Ñ\u0026#39; \u0026#39;„Éï„É¨„Éº„Éê\u0026#39; \u0026#39;Ê∞¥\u0026#39; \u0026#39;‰∫∫Ê∞ó\u0026#39; \u0026#39;Á∂ö„Åè\u0026#39; \u0026#39;ÂêÑÂõΩ\u0026#39; \u0026#39;Â§ß\u0026#39; \u0026#39;Ë¶èÊ®°\u0026#39; \u0026#39;„Çµ„Ç§„Éê\u0026#39; \u0026#39;ÊîªÊíÉ\u0026#39; \u0026#39;Ë•øÊ≠¶\u0026#39; \u0026#39;ËèäÊ±†\u0026#39; \u0026#39;Ê≤¢Êùë\u0026#39; \u0026#39;Ë∂Ö\u0026#39; \u0026#39;È©öÁï∞\u0026#39; \u0026#39;Ë¢´\u0026#39; \u0026#39;ÊâìÁéá\u0026#39; \u0026#39;ÂØ∫Â≥∂\u0026#39; \u0026#39;„Åó„ÅÆ„Å∂\u0026#39; \u0026#39;Èï∑Áî∑\u0026#39; \u0026#39;Ë∂Ö\u0026#39; \u0026#39;Ëã±Êâç\u0026#39; \u0026#39;ÊïôËÇ≤\u0026#39; \u0026#39;„ÇÇ„Å£„Å®\u0026#39; \u0026#39;Ë¶ã„Çã\u0026#39; \u0026#39;Ë®ò‰∫ã\u0026#39; \u0026#39;‰∏ÄË¶ß\u0026#39; \u0026#39;„Ç¥„Éü\u0026#39; \u0026#39;ÂèéÈõÜ\u0026#39; \u0026#39;Ëªä\u0026#39; \u0026#39;Â≠êËÇ≤„Å¶\u0026#39; \u0026#39;5\u0026#39; \u0026#39;Êúà\u0026#39; \u0026#39;13\u0026#39; \u0026#39;Êó•\u0026#39; \u0026#39;7\u0026#39; \u0026#39;ÊôÇ\u0026#39; \u0026#39;55\u0026#39; \u0026#39;ÂàÜ\u0026#39; \u0026#39;ÈÖç‰ø°\u0026#39; \u0026#39;Áî£ÁµåÊñ∞ËÅû\u0026#39; \u0026#39;„Ç∑„Éß„ÉÉ„Éî„É≥„Ç∞\u0026#39; \u0026#39;„É§„Éï„Ç™„ÇØ\u0026#39; \u0026#39;ÊóÖË°å\u0026#39; \u0026#39;„Éõ„ÉÜ„É´\u0026#39; \u0026#39;‰∫àÁ¥Ñ\u0026#39; \u0026#39;„Éã„É•„Éº„Çπ\u0026#39; \u0026#39;Â§©Ê∞ó\u0026#39; \u0026#39;„Çπ„Éù„Éº„ÉÑ„Éä„Éì\u0026#39; \u0026#39;„Éï„Ç°„Ç§„Éä„É≥„Çπ\u0026#39; \u0026#39;„ÉÜ„É¨„Éì\u0026#39; \u0026#39;gyao\u0026#39; \u0026#39;y\u0026#39; \u0026#39;„É¢„Éê„Ç≤\u0026#39; \u0026#39;Âú∞Âüü\u0026#39; \u0026#39;Âú∞Âõ≥\u0026#39; \u0026#39;Ë∑ØÁ∑ö\u0026#39; \u0026#39;È£ü„Åπ„Çã\u0026#39; \u0026#39;„É≠„Ç∞\u0026#39; \u0026#39;Ê±Ç‰∫∫\u0026#39; \u0026#39;„Ç¢„É´„Éê„Ç§„Éà\u0026#39; \u0026#39;‰∏çÂãïÁî£\u0026#39; \u0026#39;Ëá™ÂãïËªä\u0026#39; \u0026#39;Êé≤Á§∫Êùø\u0026#39; \u0026#39;„Éñ„É≠„Ç∞\u0026#39; \u0026#39;„Éì„É•„Éº„ÉÜ„Ç£\u0026#39; \u0026#39;Âá∫‰ºö„ÅÑ\u0026#39; \u0026#39;ÈõªÂ≠ê\u0026#39; \u0026#39;Êõ∏Á±ç\u0026#39; \u0026#39;Êò†Áîª\u0026#39; \u0026#39;„Ç≤„Éº„É†\u0026#39; \u0026#39;Âç†„ÅÑ\u0026#39; \u0026#39;„Çµ„Éº„Éì„Çπ\u0026#39; \u0026#39;‰∏ÄË¶ß\u0026#39; \u0026#39;„É≠„Ç∞„Ç§„É≥\u0026#39; \u0026#39;id\u0026#39; \u0026#39;„ÇÇ„Å£„Å®\u0026#39; \u0026#39;‰æøÂà©\u0026#39; \u0026#39;Êñ∞Ë¶è\u0026#39; \u0026#39;ÂèñÂæó\u0026#39; \u0026#39;„É°„Éº„É´\u0026#39; \u0026#39;„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ\u0026#39; \u0026#39;ÂèñÂæó\u0026#39; \u0026#39;„Ç´„É¨„É≥„ÉÄ\u0026#39; \u0026#39;„Ç´„É¨„É≥„ÉÄ\u0026#39; \u0026#39;Ê¥ªÁî®\u0026#39; \u0026#39;„Éù„Ç§„É≥„Éà\u0026#39; \u0026#39;Á¢∫Ë™ç\u0026#39; \u0026#39;„É≠„Ç∞„Ç§„É≥\u0026#39; \u0026#39;Â±•Ê≠¥\u0026#39; \u0026#39;Á¢∫Ë™ç\u0026#39; \u0026#39;‰ºöÁ§æ\u0026#39; \u0026#39;Ê¶ÇË¶Å\u0026#39; \u0026#39;ÊäïË≥á\u0026#39; \u0026#39;ÂÆ∂\u0026#39; \u0026#39;ÊÉÖÂ†±\u0026#39; \u0026#39;Á§æ‰ºö\u0026#39; \u0026#39;ÁöÑ\u0026#39; \u0026#39;Ë≤¨‰ªª\u0026#39; \u0026#39;‰ºÅÊ•≠\u0026#39; \u0026#39;Ë°åÂãï\u0026#39; \u0026#39;ÊÜ≤Á´†\u0026#39; \u0026#39;Â∫ÉÂëä\u0026#39; \u0026#39;Êé≤Ëºâ\u0026#39; \u0026#39;Êé°Áî®\u0026#39; \u0026#39;ÊÉÖÂ†±\u0026#39; \u0026#39;Âà©Áî®\u0026#39; \u0026#39;Ë¶èÁ¥Ñ\u0026#39; \u0026#39;ÂÖçË≤¨\u0026#39; \u0026#39;‰∫ãÈ†Ö\u0026#39; \u0026#39;„É°„Éá„Ç£„Ç¢\u0026#39; \u0026#39;„Çπ„ÉÜ„Éº„Éà„É°„É≥„Éà\u0026#39; \u0026#39;„Çª„Ç≠„É•„É™„ÉÜ„Ç£\u0026#39; \u0026#39;ËÄÉ„ÅàÊñπ\u0026#39; \u0026#39;„Éó„É©„Ç§„Éê„Ç∑\u0026#39; \u0026#39;„Éù„É™„Ç∑\u0026#39; \u0026#39;copyright\u0026#39; \u0026#39;c\u0026#39; \u0026#39;2017\u0026#39; \u0026#39;yahoo\u0026#39; \u0026#39;japan\u0026#39; \u0026#39;corporation\u0026#39; \u0026#39;all\u0026#39; \u0026#39;rights\u0026#39; \u0026#39;reserved\u0026#39; „ÇÇ„ÅÜÂ∞ë„Åó„Å†„ÅëGithub„ÅÆ„Åª„ÅÜ„Å´„ÅØË©≥„Åó„ÅèÊõ∏„ÅÑ„Å¶„ÅÇ„Çã„ÅÆ„Åß„Åù„Å°„Çâ„ÇÇÂèÇËÄÉ„Å´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n","permalink":"https://unofficialism.info/posts/azure-search-analyzer-test-with-azure-search-ta/","summary":"Azure Search„ÅÆ„Ç¢„Éä„É©„Ç§„Ç∂„Éº„Å´„Çà„Çã„ÉÜ„Ç≠„Çπ„ÉàËß£ÊûêÁµêÊûú„ÇíÂá∫Âäõ„Åô„ÇãÔºà„Å†„Åë„ÅÆÔºâ„ÉÑ„Éº„É´„Çí‰Ωú„Å£„Å¶„Åø„Åü„ÅÆ„Åß„Åì„Åì„ÅßÁ¥π‰ªã„Åó„Åæ„Åô„ÄÇ„Åù„ÅÆÂêç„ÇÇazure-search-taÔºàta=Test AnalyzerÔºâ„ÄÇ‰∏≠Ë∫´„ÅØAzure Search„ÅÆAnalyzer API„ÅÆÂá∫ÂäõÁµêÊûú„ÇíÊï¥ÂΩ¢„Åó„Å¶Ë°®Á§∫„Åï„Åõ„Å¶„ÅÑ„Å¶„ÅÑ„Çã„Å†„Åë„ÅÆÂçòÁ¥î„Å™„ÇÇ„ÅÆ„Åß„ÅÇ„Çä„Åæ„Åô„Åå„ÄÅAzure Search„ÅÆÂÖ®ÊñáÊ§úÁ¥¢„ÉÅ„É•„Éº„Éã„É≥„Ç∞„ÇÑ„Ç≠„Éº„ÉØ„Éº„Éâ„Å´„Éí„ÉÉ„Éà„Åó„Å™„ÅÑÂéüÂõ†Ë™øÊüª„Çí„Åô„ÇãÈöõ„Å´„ÅØÂΩπ„Å´Á´ã„Å§„Å®ÊÄù„Å£„Å¶„Åæ„Åô„ÄÇ„Äå„Å©„ÅÜ„Åó„Å¶„Åì„ÅÆ„Ç≠„Éº„ÉØ„Éº„Éâ„Åå„Å≤„Å£„Åã„Åã„Çâ„Å™„ÅÑ„ÅÆÔºü„Äç„ÇíÁ™Å„ÅçË©∞„ÇÅ„Çã„Å´„ÅØÊúÄÁµÇÁöÑ„Å´„Ç¢„Éä„É©„Ç§„Ç∂„ÅÆ„ÉÜ„Ç≠„Çπ„ÉàËß£ÊûêÁµêÊûú„Å®Á™Å„ÅçÂêà„Çè„Åõ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÅÆ„Å®„ÄÅ„Ç¢„Éä„É©„Ç§„Ç∂„Éº„ÇíÈÅ∏Êäû„Åô„ÇãÈöõ„Å´„ÉÜ„Ç≠„Çπ„ÉàËß£Êûê„ÅåË¶ñË¶öÂåñ„Åï„Çå„Å¶„ÅÑ„Çã„Å®Âà§Êñ≠„Åó„ÇÑ„Åô„ÅÑ„Å†„Çç„ÅÜ„Å®„ÄÇ„ÉÑ„Éº„É´„ÅØ2Á®ÆÈ°û„Åß ÔºàÔºëÔºâWeb UI„ÉÑ„Éº„É´„Å®ÔºàÔºíÔºâ„Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„ÉÑ„Éº„É´\nWeb UI Tool https://github.com/yokawasa/azure-search-ta\n„Ç§„É≥„Çπ„Éà„Éº„É´„ÅØË∂ÖÁ∞°Âçò„ÄÇÔºàÔºëÔºâGithub„Åã„Çâazure-search-ta„Çíclone ÔºàÔºíÔºâazure-search-ta/ui ÈÖç‰∏ã„ÅÆ„Éï„Ç°„Ç§„É´„ÇíPHP„ÅåÂãï„ÅèWeb„Çµ„Éº„Éê„Å´„Ç≥„Éî„Éº ÔºàÔºìÔºâanalyze-api.php„Çí„Ç®„Éá„Ç£„Çø„ÅßÈñã„ÅÑ„Å¶„Åä‰Ωø„ÅÑ„ÅÆAzure Search„Ç´„Ç¶„É≥„ÉàÂêç„Å®Azure Search API Admin„Ç≠„Éº„ÅÆÂÄ§„ÇíË®≠ÂÆö„Åè„Å†„Åï„ÅÑ„ÄÇ„ÅÇ„Å®„ÅØazure-search-ta-ui.html„Å´„Ç¢„ÇØ„Çª„Çπ„ÅÑ„Åü„Å†„Åë„Çå„Å∞‰∏äË®ò„ÅÆ„Çà„ÅÜ„Å™UI„ÅåÂá∫Âäõ„Åï„Çå„Çã„ÅØ„Åö„Åß„Åô„ÄÇ„Å™„ÅúHTML/JS„Å†„Åë„Åß„ÅØ„Å™„ÅèÈñì„Å´PHP„ÇíÊåü„Çì„Åß„ÅÑ„Çã„ÅÆ„Åã„Å´„Å§„ÅÑ„Å¶„ÄÅAzure Search„ÅÆAnalyze API„ÇÑÁÆ°ÁêÜÁ≥ªAPI„É™„ÇØ„Ç®„Çπ„Éà„Å´‰ΩçÁΩÆ‰ªò„Åë„Çâ„Çå„Å¶„Åä„Çä„ÄÅÁÆ°ÁêÜÁ≥ªAPI„ÅØvia CORS„Åß„ÅÆ„É™„ÇØ„Ç®„Çπ„Éà„ÇíÂèó„Åë‰ªò„Åë„Å¶„ÅÑ„Å™„ÅÑ„Åã„Çâ„Åß„ÅÇ„Çã„ÄÇ\n$ git clone https://github.com/yokawasa/azure-search-ta.git` $ vi azure-search-ta/ui/analyze-api.php $azureSearchAccount=\u0026#34;\u0026#34;; $azureSearchApiKey = \u0026#34;\u0026#34;; Command-Line Tool 1. „Ç§„É≥„Çπ„Éà„Éº„É´„Å®Ë®≠ÂÆö pip„Åßazure-search-ta„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„ÄÇÊó¢„Å´Âè§„ÅÑ„Éê„Éº„Ç∏„Éß„É≥„Çí„Ç§„É≥„Çπ„Éà„Éº„É´Ê∏à„Åø„Åß„Ç¢„ÉÉ„Éó„Éá„Éº„Éà„Åô„ÇãÈöõ„ÅØ‚Äï‚Äïupgrade„Çí„Å§„Åë„Å¶ÂÆüË°å„Åè„Å†„Åï„ÅÑ„ÄÇ\n$ pip install --user azure-search-ta Ê¨°„Å´„ÄÅsearch.conf„Å´„Åä‰Ωø„ÅÑ„ÅÆAzure Search„Ç´„Ç¶„É≥„ÉàÂêç„Å®Azure Search API Admin„Ç≠„Éº„ÅÆÂÄ§„ÇíË®≠ÂÆö„Åè„Å†„Åï„ÅÑ„ÄÇ\n# Azure Search Service Name ( never put space before and after = ) SEARCH_SERVICE_NAME= # Azure Search API Admin Key ( never put space before and after = ) SEARCH_API_KEY= 2.","title":"Azure Search Text Analyzer Tools - azure-search-ta"},{"content":"Python Easter Egg = Python„ÅÆÈö†„Åó„ÇØ„É¨„Ç∏„ÉÉ„Éà„Å®„ÅØ„ÅÑ„Å£„Å¶„ÇÇPythonÂü∫Á§éÊú¨„Å™„Å©„Åß„Çà„ÅèÁ¥π‰ªã„Åï„Çå„Å¶„ÅÑ„Çã„ÇÇ„ÅÆ„Å™„ÅÆ„ÅßÊó¢„Å´„ÅîÂ≠òÁü•„Åã„ÇÇ„Åó„Çå„Å™„ÅÑ„ÅåËÉåÊôØ„ÅåÈù¢ÁôΩ„ÅÑ„ÅÆ„Åß„Åì„Åì„ÅßÁ¥π‰ªã„ÄÇ\nPython„Å´„ÅØthis„É¢„Ç∏„É•„Éº„É´„Å®„ÅÑ„ÅÜ„ÄåThe Zen of Python„Äç(Note 1)„ÇíÂá∫Âäõ„Åô„Çã„Å†„Åë„ÅÆ„É¢„Ç∏„É•„Éº„É´„Åå„ÅÇ„Çã„ÄÇ„Åì„ÅÆ„É¢„Ç∏„É•„Éº„É´„ÄÅ‰∏≠Ë∫´(Note 2)„ÇíË¶ã„Å¶„Åø„Çã„Å®ÂàÜ„Åã„Çã„Åå„ÄÅÁ∑è„Çπ„ÉÜ„ÉÉ„Éó„Å´„Åó„Å¶„Çè„Åö„Åã28Ë°å„ÄÅROT13ÊöóÂè∑Âåñ(Note 3)„Åï„Çå„ÅüÊñáÂ≠óÂàó„ÇíÂæ©Âè∑Âåñ„Åô„Çã„Å†„Åë„ÅÆÂçòÁ¥î„ÅßÂèñ„Çã„Å´Ë∂≥„Çâ„Å™„ÅÑ„ÇÇ„ÅÆ„Åã„ÇÇ„Åó„Çå„Å™„ÅÑ„Åå„Åì„ÅÆ„É¢„Ç∏„É•„Éº„É´„Åå‰Ωú„Çâ„Çå„ÅüËÉåÊôØ„ÅØÈù¢ÁôΩ„ÅÑ„ÄÇBarry WarsawÊ∞è„ÅåË®ò‰∫ã„Äåimport this and The Zen of Python„Äç„Åßthis„É¢„Ç∏„É•„Éº„É´„ÅåË™ïÁîü„Å´„Åæ„Å§„Çè„ÇãÈù¢ÁôΩ„ÅÑË©±„ÇíÁ¥π‰ªã„Åó„Å¶„ÅÑ„Çã„ÄÇ\n„Äåimport this and The Zen of Python„Äç„ÅÆ‰∏ÄÈÉ®Á∞°Ë®≥\n2001Âπ¥Áßã„ÄÅForetec SeminarÁ§æ„ÅØ„ÅÆInternational Python Conference #10(‰ª•‰∏ãIPC10„ÄÅPycon„ÅÆÂâçË∫´„Å®„Å™„Çã„Ç´„É≥„Éï„Ç°„É¨„É≥„Çπ)„ÅÆÊ∫ñÂÇô„Çí„Åó„Å¶„Åä„ÇäPython„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Åã„Çâ„Åù„ÅÆ„Ç´„É≥„Éï„Ç°„É¨„É≥„Çπ„ÅÆ„Çπ„É≠„Éº„Ç¨„É≥„ÇíÊ±Ç„ÇÅ„Å¶„ÅÑ„Åü„ÄÇ„Çπ„É≠„Éº„Ç¨„É≥„ÅØT„Ç∑„É£„ÉÑ„Å´„ÇÇ„Éó„É™„É≥„Éà„Åï„Çå„Çã‰∫àÂÆö„Å†„Å£„Åü„ÄÇGuide„ÇÑ„ÄÅFred„ÄÅJeremy„ÇÑËëóËÄÖÈÅî„ÅØ„Åã„Å§„Å¶„ÅØForetec SeminarÁ§æ„Å´ÊâÄÂ±û„Åó„Å¶„ÅÑ„Åü„ÅåPythonlabs„ÇíÁµêÊàê„Åô„Çã2000Âπ¥„Å´ÂêåÁ§æ„ÇíÂéª„Å£„Å¶„ÅÑ„Çã„ÄÇ„Åù„Åó„Å¶Pythonlabs„ÅØPython„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Åã„Çâ„ÅÆ„Çπ„É≠„Éº„Ç¨„É≥ÂøúÂãü„ÅÆÂØ©Êüª„Å®ÂãùËÄÖ„ÅÆÈÅ∏ÂÆö„ÇíÊãÖÂΩì„Åô„Çã„Åì„Å®„Å´„Å™„Å£„Åü„ÄÇÂøúÂãü„ÅØ500„Åè„Çâ„ÅÑ„ÅÇ„Å£„Åü„Åå„ÄÅ„Å©„Çå„ÇÇ„Å≤„Å©„ÅÑ„ÇÇ„ÅÆ„Å†„Å£„Åü„ÄÇTim„Å®ËëóËÄÖ„ÅØ1„Å§„Å´Áµû„Çâ„Çå„Çã„Åæ„Åß‰ΩïÂ∫¶„Å®„Å™„ÅèÈÅ∏Âà•‰ΩúÊ•≠„ÇíË°å„ÅÑ\nÊúÄÁµÇÁöÑ„Å´\u0026quot;import this\u0026quot;„ÇíÈÅ∏„Çì„Å†„ÄÇÁêÜÁî±„ÅØ\u0026quot;import this\u0026quot;„Å®„ÅÑ„ÅÜË®ÄËëâ„ÅÆÊåÅ„Å§„Åµ„Åñ„Åë„Åü„ÄÅÂ∞è„Éê„Ç´„Å´„Åó„Åü„Çà„ÅÜ„Å™„Éà„Éº„É≥„ÅåÂ•Ω„Åç„Å†„Å£„Åü„Åã„Çâ„Å®„ÅÑ„ÅÜ„ÄÇ\nËëóËÄÖ„Åü„Å°„ÅØ„Åì„ÅÆ\u0026quot;import this\u0026quot;„Çí„Çπ„É≠„Éº„Ç¨„É≥„Å´ÈÅ∏„Çì„Åß„Åô„Åê„Å´this„É¢„Ç∏„É•„Éº„É´(this.py)„ÇíÂÆüË£Ö„Åó„Åü„ÄÇ„É¢„Ç∏„É•„Éº„É´„ÅØ„ÄåThe Zen of Python„Äç„ÇíÂá∫Âäõ„Åô„Çã„Å†„Åë„ÅÆ„ÇÇ„ÅÆ„Å†„Å£„Åü„ÅåÈÄî‰∏≠Tim„ÇÑGuido„ÅÆÊèêÊ°à„Åßrot13„ÅßÊöóÂè∑Âåñ„Åó„Å¶ÂÜÖÂÆπ„ÇíÂ∞ë„ÅóÈõ£Ë™≠Âåñ„Åô„ÇãÂ∑•Â§´„Åå„Åï„Çå„Åü„Çä„ÇÇ„Åó„Åü„ÄÇIPC10„ÅåÁµÇ„Çè„Å£„Å¶„Åô„Åê„ÄÅÂΩº„Çâ„ÅØ„Åì„ÅÆ„Ç§„Éô„É≥„Éà„ÇíË®òÂøµ„Åó„Å¶this„É¢„Ç∏„É•„Éº„É´„ÇíPython2.2.1„Éñ„É©„É≥„ÉÅ„Å´„Ç≥„Éü„ÉÉ„Éà„Åó„Åü„ÄÇ„Åì„ÅÆÊôÇ„ÄÅËëóËÄÖ„ÅÆÊèêÊ°à„Åß‰ªñ„ÅÆË™∞„Å´„ÇÇÁü•„Çâ„Çå„Å™„ÅÑ„Çà„ÅÜ„Å´„Åô„Çã„Åü„ÇÅ„Å´„ÇΩ„Éº„ÇπÁÆ°ÁêÜ„Ç∑„Çπ„ÉÜ„É†„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥ÈÄöÁü•Ê©üËÉΩ„ÇíÂÅúÊ≠¢„Åó„ÄÅ„Åì„Å£„Åù„Çä„Åì„ÅÆ„É¢„Ç∏„É•„Éº„É´„ÇíPython2.2.1„ÅÆ„Éñ„É©„É≥„ÉÅ„Å´Âê´„ÇÅ„Åü„ÅÆ„Å†„ÄÇ„Åì„Çå„Çâ„ÅÆ„Åì„Å®„ÅØÂΩº„Çâ‰ª•Â§ñ„Å´Ë™∞„Å´„ÇÇÁü•„Çâ„Åõ„ÅöÂÜÖÁ∑í„ÅßË°å„Çè„Çå„Åü„ÄÇËëóËÄÖ„ÅÑ„Çè„Åè„ÄÅ„Åì„ÅÆÂΩº„Çâ„ÅÆ‰ªïËæº„Çì„Å†easter eggÔºàthis„É¢„Ç∏„É•„Éº„É´„ÅÆ„Åì„Å®„ÄÇ„ÇΩ„Éï„Éà„Ç¶„Çß„Ç¢„Åß„ÅÑ„ÅÜeaster egg„Å®„ÅØÈö†„Åó„Ç≥„Éû„É≥„Éâ„Å®„Åã„ÄÅÈö†„Åó„ÇØ„É¨„Ç∏„ÉÉ„Éà„ÅÆ„Çà„ÅÜ„Å™„ÇÇ„ÅÆÔºâ„ÅåË™∞„Åã„Å´Ë¶ã„Å§„Åã„Çã„Åæ„Åß„ÅØ„Åó„Å∞„Çâ„ÅèÊôÇÈñì„Åå„Åã„Åã„Å£„Åü„Åù„ÅÜ„Å†„ÄÇ\nBarry WarsawÊ∞è„ÅåÂêåË®ò‰∫ã„Çí„ÄåThat was all back in the day when the Python community had a sense of humor„Äç„Å®„ÅÑ„ÅÜ‰∏ÄÊñá„ÅßÁ∑†„ÇÅ„Åè„Åè„Å£„Å¶„ÅÑ„Çã„Çà„ÅÜ„Å´„ÄÅ„Åì„ÅÆË®ò‰∫ã„ÇíË™≠„ÇÄ„Å®ÂΩìÊôÇ„ÅÆPython„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Åå„ÅÑ„Åã„Å´„É¶„Éº„É¢„Ç¢Ê∫¢„Çå„Åü„ÇÇ„ÅÆ„Å†„Å£„Åü„ÅÆ„Åã„ÅåÊÑü„Åò„Çâ„Çå„Çã„ÄÇphython-2.2.1„Åå„É™„É™„Éº„Çπ„Åï„Çå„Åü„ÅÆ„ÅØ2002Âπ¥4Êúà10Êó•„Åß„ÄÅ„Åù„Çå„Åã„Çâ„Å©„Çå„Åè„Çâ„ÅÑÁµå„Å£„Å¶„Åì„ÅÆthis„É¢„Ç∏„É•„Éº„É´„ÅåÁô∫Ë¶ã„Åï„Çå„Åü„ÅÆ„ÅãÂàÜ„Åã„Çâ„Å™„ÅÑ„ÅåÂàù„ÇÅ„Å¶Áô∫Ë¶ã„Åó„Åü‰∫∫„ÅØÁµ∂ÂØæ„Åª„Å£„Åì„Çä„Åó„Åü„Åì„Å®„Å†„Çç„ÅÜ„ÄÇ\nNote 1: import this „ÄåThe Zen of Python„Äç„ÅØPython„Éè„ÉÉ„Ç´„Éº„ÄÅTim Peters„Å´„Çà„Å£„Å¶Êõ∏„Åã„Çå„ÅüÊúâÂêç„Å™ÊñáÁ´†„ÅßPythonË®≠Ë®àÂì≤Â≠¶„ÇíË¶ÅÁ¥Ñ„Åó„Åü„Çà„ÅÜ„Å™„ÇÇ„ÅÆ„Å®Ë®Ä„Çè„Çå„Å¶„ÅÑ„Çã„ÄÇ Barry WarsawÊ∞è„ÅÆË®ò‰∫ã„Å´„Çà„Çã„Å®Ëµ∑Ê∫ê„ÅØTim PetersÊ∞è„Å´„Çà„Çã1999Âπ¥6Êúà4Êó•„ÅÆPython-list„Å∏„ÅÆ„Åì„ÅÆÊäïÁ®ø„ÅÆ„Çà„ÅÜ„Å†„ÄÇ‰ª•‰∏ã„ÄÅPython„Ç§„É≥„Çø„É©„ÇØ„ÉÜ„Ç£„ÇØ„É¢„Éº„Éâ„Åßimport this„ÇíÂÆüË°å„Åó„ÄåThe Zen of Python„Äç„ÇíË°®Á§∫„Åï„Åõ„ÅüÂÜÖÂÆπÔºö\n$ python Python 3.4.3 (default, Oct 14 2015, 20:28:29) [GCC 4.8.4] on linux Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. \u0026gt;\u0026gt;\u0026gt; import this The Zen of Python, by Tim Peters Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren\u0026#39;t special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you\u0026#39;re Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it\u0026#39;s a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let\u0026#39;s do more of those! \u0026gt;\u0026gt;\u0026gt; Note 2: this.py this.py„ÅÆ‰∏≠Ë∫´„ÄÇ ÊÑèÂë≥‰∏çÊòé„Å™„Ç≥„Éº„Éâ„ÇíROT13 (Note 3)„ÅßË§áÂêàÂåñ„Åô„Çã„Åì„Å®„Åß„ÄåThe Zen of Python„Äç„ÇíÂá∫Âäõ„Åó„Å¶„ÅÑ„Çã„ÄÇ /usr/lib/python3.4/this.py\ns = \u0026#34;\u0026#34;\u0026#34;Gur Mra bs Clguba, ol Gvz Crgref Ornhgvshy vf orggre guna htyl. Rkcyvpvg vf orggre guna vzcyvpvg. Fvzcyr vf orggre guna pbzcyrk. Pbzcyrk vf orggre guna pbzcyvpngrq. Syng vf orggre guna arfgrq. Fcnefr vf orggre guna qrafr. Ernqnovyvgl pbhagf. Fcrpvny pnfrf nera\u0026#39;g fcrpvny rabhtu gb oernx gur ehyrf. Nygubhtu cenpgvpnyvgl orngf chevgl. Reebef fubhyq arire cnff fvyragyl. Hayrff rkcyvpvgyl fvyraprq. Va gur snpr bs nzovthvgl, ershfr gur grzcgngvba gb thrff. Gurer fubhyq or bar-- naq cersrenoyl bayl bar --boivbhf jnl gb qb vg. Nygubhtu gung jnl znl abg or boivbhf ng svefg hayrff lbh\u0026#39;er Qhgpu. Abj vf orggre guna arire. Nygubhtu arire vf bsgra orggre guna *evtug* abj. Vs gur vzcyrzragngvba vf uneq gb rkcynva, vg\u0026#39;f n onq vqrn. Vs gur vzcyrzragngvba vf rnfl gb rkcynva, vg znl or n tbbq vqrn. Anzrfcnprf ner bar ubaxvat terng vqrn -- yrg\u0026#39;f qb zber bs gubfr!\u0026#34;\u0026#34;\u0026#34; d = {} for c in (65, 97): for i in range(26): d[chr(i+c)] = chr((i+13) % 26 + c) print \u0026#34;\u0026#34;.join([d.get(c, c) for c in s]) Note 3: ROT13 ROT13„ÅØÂÆö„ÇÅ„Çâ„Çå„ÅüÁΩÆ„ÅçÊèõ„Åà„Éû„ÉÉ„Éó„Å´„ÇÇ„Å®„Å•„ÅÑ„Å¶ÊñáÂ≠ó„ÇíÁΩÆ„ÅçÊèõ„Åà„Çã„Å†„Åë„ÅÆÂçòÁ¥î„Å™ÊöóÂè∑ÊñπÂºè„ÄÇÊ¨°„ÅÆÂ§âÊèõ„Éû„ÉÉ„Éó„Å´Âü∫„Å•„ÅÑ„Å¶ÊñáÂ≠ó„ÇíÂ§âÊèõ„Åô„Çã„ÅÆ„Åß‰æã„Åà„Å∞A‚ÜíN„ÄÅB‚ÜíO„ÄÅC‚ÜíP„ÅÆ„Çà„ÅÜ„Å´Â§âÊèõ„Åï„Çå„Çã„ÄÇ\nABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ‚Üë‚Üì NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm „Å°„Å™„Åø„Å´this.py„Åß„ÅØ„Åì„ÅÆÂ§âÊèõ„Éû„ÉÉ„Éó„Çí„É¢„Ç∏„É•„Éº„É´‰∏≠„ÅßÁîüÊàê„Åó„Å¶„ÅÑ„Çã„ÅåPython2Á≥ª„ÄÅ3Á≥ª„Åß„ÅØROT13„ÅÆÂÆüË£Ö„ÅØÊ®ôÊ∫ñ„ÅßÁµÑ„ÅøËæº„Åæ„Çå„Å¶„ÅÑ„Çã„ÅÆ„ÅßÊ¨°„ÅÆ„Çà„ÅÜ„Å´Áõ¥Êé•decodeÈñ¢Êï∞„Å´\u0026rsquo;rot13\u0026rsquo;„ÇíÊåáÂÆö„Åô„Çã„Åì„Å®„ÅßROT13„ÅßÊöóÂè∑Âåñ„Åï„Çå„ÅüÊñáÂ≠óÂàós„ÇíË§áÂêàÂåñ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ\n\u0026gt;\u0026gt;\u0026gt; this.s \u0026#34;Gur Mra bs Clguba, ol Gvz Crgref\\n\\nOrnhgvshy vf orggre guna htyl.\\nRkcyvpvg vf orggre guna vzcyvpvg.\\nFvzcyr vf orggre guna pbzcyrk.\\nPbzcyrk vf orggre guna pbzcyvpngrq.\\nSyng vf orggre guna arfgrq.\\nFcnefr vf orggre guna qrafr.\\nErnqnovyvgl pbhagf.\\nFcrpvny pnfrf nera\u0026#39;g fcrpvny rabhtu gb oernx gur ehyrf.\\nNygubhtu cenpgvpnyvgl orngf chevgl.\\nReebef fubhyq arire cnff fvyragyl.\\nHayrff rkcyvpvgyl fvyraprq.\\nVa gur snpr bs nzovthvgl, ershfr gur grzcgngvba gb thrff.\\nGurer fubhyq or bar-- naq cersrenoyl bayl bar --boivbhf jnl gb qb vg.\\nNygubhtu gung jnl znl abg or boivbhf ng svefg hayrff lbh\u0026#39;er Qhgpu.\\nAbj vf orggre guna arire.\\nNygubhtu arire vf bsgra orggre guna *evtug* abj.\\nVs gur vzcyrzragngvba vf uneq gb rkcynva, vg\u0026#39;f n onq vqrn.\\nVs gur vzcyrzragngvba vf rnfl gb rkcynva, vg znl or n tbbq vqrn.\\nAnzrfcnprf ner bar ubaxvat terng vqrn -- yrg\u0026#39;f qb zber bs gubfr!\u0026#34; \u0026gt;\u0026gt;\u0026gt; this.s.decode(\u0026#39;rot13\u0026#39;) u\u0026#34;The Zen of Python, by Tim Peters\\n\\nBeautiful is better than ugly.\\nExplicit is better than implicit.\\nSimple is better than complex.\\nComplex is better than complicated.\\nFlat is better than nested.\\nSparse is better than dense.\\nReadability counts.\\nSpecial cases aren\u0026#39;t special enough to break the rules.\\nAlthough practicality beats purity.\\nErrors should never pass silently.\\nUnless explicitly silenced.\\nIn the face of ambiguity, refuse the temptation to guess.\\nThere should be one-- and preferably only one --obvious way to do it.\\nAlthough that way may not be obvious at first unless you\u0026#39;re Dutch.\\nNow is better than never.\\nAlthough never is often better than *right* now.\\nIf the implementation is hard to explain, it\u0026#39;s a bad idea.\\nIf the implementation is easy to explain, it may be a good idea.\\nNamespaces are one honking great idea -- let\u0026#39;s do more of those!\u0026#34; „Åä„Çè„Çä\n","permalink":"https://unofficialism.info/posts/python-easter-egg/","summary":"Python Easter Egg = Python„ÅÆÈö†„Åó„ÇØ„É¨„Ç∏„ÉÉ„Éà„Å®„ÅØ„ÅÑ„Å£„Å¶„ÇÇPythonÂü∫Á§éÊú¨„Å™„Å©„Åß„Çà„ÅèÁ¥π‰ªã„Åï„Çå„Å¶„ÅÑ„Çã„ÇÇ„ÅÆ„Å™„ÅÆ„ÅßÊó¢„Å´„ÅîÂ≠òÁü•„Åã„ÇÇ„Åó„Çå„Å™„ÅÑ„ÅåËÉåÊôØ„ÅåÈù¢ÁôΩ„ÅÑ„ÅÆ„Åß„Åì„Åì„ÅßÁ¥π‰ªã„ÄÇ\nPython„Å´„ÅØthis„É¢„Ç∏„É•„Éº„É´„Å®„ÅÑ„ÅÜ„ÄåThe Zen of Python„Äç(Note 1)„ÇíÂá∫Âäõ„Åô„Çã„Å†„Åë„ÅÆ„É¢„Ç∏„É•„Éº„É´„Åå„ÅÇ„Çã„ÄÇ„Åì„ÅÆ„É¢„Ç∏„É•„Éº„É´„ÄÅ‰∏≠Ë∫´(Note 2)„ÇíË¶ã„Å¶„Åø„Çã„Å®ÂàÜ„Åã„Çã„Åå„ÄÅÁ∑è„Çπ„ÉÜ„ÉÉ„Éó„Å´„Åó„Å¶„Çè„Åö„Åã28Ë°å„ÄÅROT13ÊöóÂè∑Âåñ(Note 3)„Åï„Çå„ÅüÊñáÂ≠óÂàó„ÇíÂæ©Âè∑Âåñ„Åô„Çã„Å†„Åë„ÅÆÂçòÁ¥î„ÅßÂèñ„Çã„Å´Ë∂≥„Çâ„Å™„ÅÑ„ÇÇ„ÅÆ„Åã„ÇÇ„Åó„Çå„Å™„ÅÑ„Åå„Åì„ÅÆ„É¢„Ç∏„É•„Éº„É´„Åå‰Ωú„Çâ„Çå„ÅüËÉåÊôØ„ÅØÈù¢ÁôΩ„ÅÑ„ÄÇBarry WarsawÊ∞è„ÅåË®ò‰∫ã„Äåimport this and The Zen of Python„Äç„Åßthis„É¢„Ç∏„É•„Éº„É´„ÅåË™ïÁîü„Å´„Åæ„Å§„Çè„ÇãÈù¢ÁôΩ„ÅÑË©±„ÇíÁ¥π‰ªã„Åó„Å¶„ÅÑ„Çã„ÄÇ\n„Äåimport this and The Zen of Python„Äç„ÅÆ‰∏ÄÈÉ®Á∞°Ë®≥\n2001Âπ¥Áßã„ÄÅForetec SeminarÁ§æ„ÅØ„ÅÆInternational Python Conference #10(‰ª•‰∏ãIPC10„ÄÅPycon„ÅÆÂâçË∫´„Å®„Å™„Çã„Ç´„É≥„Éï„Ç°„É¨„É≥„Çπ)„ÅÆÊ∫ñÂÇô„Çí„Åó„Å¶„Åä„ÇäPython„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Åã„Çâ„Åù„ÅÆ„Ç´„É≥„Éï„Ç°„É¨„É≥„Çπ„ÅÆ„Çπ„É≠„Éº„Ç¨„É≥„ÇíÊ±Ç„ÇÅ„Å¶„ÅÑ„Åü„ÄÇ„Çπ„É≠„Éº„Ç¨„É≥„ÅØT„Ç∑„É£„ÉÑ„Å´„ÇÇ„Éó„É™„É≥„Éà„Åï„Çå„Çã‰∫àÂÆö„Å†„Å£„Åü„ÄÇGuide„ÇÑ„ÄÅFred„ÄÅJeremy„ÇÑËëóËÄÖÈÅî„ÅØ„Åã„Å§„Å¶„ÅØForetec SeminarÁ§æ„Å´ÊâÄÂ±û„Åó„Å¶„ÅÑ„Åü„ÅåPythonlabs„ÇíÁµêÊàê„Åô„Çã2000Âπ¥„Å´ÂêåÁ§æ„ÇíÂéª„Å£„Å¶„ÅÑ„Çã„ÄÇ„Åù„Åó„Å¶Pythonlabs„ÅØPython„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Åã„Çâ„ÅÆ„Çπ„É≠„Éº„Ç¨„É≥ÂøúÂãü„ÅÆÂØ©Êüª„Å®ÂãùËÄÖ„ÅÆÈÅ∏ÂÆö„ÇíÊãÖÂΩì„Åô„Çã„Åì„Å®„Å´„Å™„Å£„Åü„ÄÇÂøúÂãü„ÅØ500„Åè„Çâ„ÅÑ„ÅÇ„Å£„Åü„Åå„ÄÅ„Å©„Çå„ÇÇ„Å≤„Å©„ÅÑ„ÇÇ„ÅÆ„Å†„Å£„Åü„ÄÇTim„Å®ËëóËÄÖ„ÅØ1„Å§„Å´Áµû„Çâ„Çå„Çã„Åæ„Åß‰ΩïÂ∫¶„Å®„Å™„ÅèÈÅ∏Âà•‰ΩúÊ•≠„ÇíË°å„ÅÑ\nÊúÄÁµÇÁöÑ„Å´\u0026quot;import this\u0026quot;„ÇíÈÅ∏„Çì„Å†„ÄÇÁêÜÁî±„ÅØ\u0026quot;import this\u0026quot;„Å®„ÅÑ„ÅÜË®ÄËëâ„ÅÆÊåÅ„Å§„Åµ„Åñ„Åë„Åü„ÄÅÂ∞è„Éê„Ç´„Å´„Åó„Åü„Çà„ÅÜ„Å™„Éà„Éº„É≥„ÅåÂ•Ω„Åç„Å†„Å£„Åü„Åã„Çâ„Å®„ÅÑ„ÅÜ„ÄÇ\nËëóËÄÖ„Åü„Å°„ÅØ„Åì„ÅÆ\u0026quot;import this\u0026quot;„Çí„Çπ„É≠„Éº„Ç¨„É≥„Å´ÈÅ∏„Çì„Åß„Åô„Åê„Å´this„É¢„Ç∏„É•„Éº„É´(this.py)„ÇíÂÆüË£Ö„Åó„Åü„ÄÇ„É¢„Ç∏„É•„Éº„É´„ÅØ„ÄåThe Zen of Python„Äç„ÇíÂá∫Âäõ„Åô„Çã„Å†„Åë„ÅÆ„ÇÇ„ÅÆ„Å†„Å£„Åü„ÅåÈÄî‰∏≠Tim„ÇÑGuido„ÅÆÊèêÊ°à„Åßrot13„ÅßÊöóÂè∑Âåñ„Åó„Å¶ÂÜÖÂÆπ„ÇíÂ∞ë„ÅóÈõ£Ë™≠Âåñ„Åô„ÇãÂ∑•Â§´„Åå„Åï„Çå„Åü„Çä„ÇÇ„Åó„Åü„ÄÇIPC10„ÅåÁµÇ„Çè„Å£„Å¶„Åô„Åê„ÄÅÂΩº„Çâ„ÅØ„Åì„ÅÆ„Ç§„Éô„É≥„Éà„ÇíË®òÂøµ„Åó„Å¶this„É¢„Ç∏„É•„Éº„É´„ÇíPython2.2.1„Éñ„É©„É≥„ÉÅ„Å´„Ç≥„Éü„ÉÉ„Éà„Åó„Åü„ÄÇ„Åì„ÅÆÊôÇ„ÄÅËëóËÄÖ„ÅÆÊèêÊ°à„Åß‰ªñ„ÅÆË™∞„Å´„ÇÇÁü•„Çâ„Çå„Å™„ÅÑ„Çà„ÅÜ„Å´„Åô„Çã„Åü„ÇÅ„Å´„ÇΩ„Éº„ÇπÁÆ°ÁêÜ„Ç∑„Çπ„ÉÜ„É†„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ„Ç§„É≥ÈÄöÁü•Ê©üËÉΩ„ÇíÂÅúÊ≠¢„Åó„ÄÅ„Åì„Å£„Åù„Çä„Åì„ÅÆ„É¢„Ç∏„É•„Éº„É´„ÇíPython2.2.1„ÅÆ„Éñ„É©„É≥„ÉÅ„Å´Âê´„ÇÅ„Åü„ÅÆ„Å†„ÄÇ„Åì„Çå„Çâ„ÅÆ„Åì„Å®„ÅØÂΩº„Çâ‰ª•Â§ñ„Å´Ë™∞„Å´„ÇÇÁü•„Çâ„Åõ„ÅöÂÜÖÁ∑í„ÅßË°å„Çè„Çå„Åü„ÄÇËëóËÄÖ„ÅÑ„Çè„Åè„ÄÅ„Åì„ÅÆÂΩº„Çâ„ÅÆ‰ªïËæº„Çì„Å†easter eggÔºàthis„É¢„Ç∏„É•„Éº„É´„ÅÆ„Åì„Å®„ÄÇ„ÇΩ„Éï„Éà„Ç¶„Çß„Ç¢„Åß„ÅÑ„ÅÜeaster egg„Å®„ÅØÈö†„Åó„Ç≥„Éû„É≥„Éâ„Å®„Åã„ÄÅÈö†„Åó„ÇØ„É¨„Ç∏„ÉÉ„Éà„ÅÆ„Çà„ÅÜ„Å™„ÇÇ„ÅÆÔºâ„ÅåË™∞„Åã„Å´Ë¶ã„Å§„Åã„Çã„Åæ„Åß„ÅØ„Åó„Å∞„Çâ„ÅèÊôÇÈñì„Åå„Åã„Åã„Å£„Åü„Åù„ÅÜ„Å†„ÄÇ\nBarry WarsawÊ∞è„ÅåÂêåË®ò‰∫ã„Çí„ÄåThat was all back in the day when the Python community had a sense of humor„Äç„Å®„ÅÑ„ÅÜ‰∏ÄÊñá„ÅßÁ∑†„ÇÅ„Åè„Åè„Å£„Å¶„ÅÑ„Çã„Çà„ÅÜ„Å´„ÄÅ„Åì„ÅÆË®ò‰∫ã„ÇíË™≠„ÇÄ„Å®ÂΩìÊôÇ„ÅÆPython„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Åå„ÅÑ„Åã„Å´„É¶„Éº„É¢„Ç¢Ê∫¢„Çå„Åü„ÇÇ„ÅÆ„Å†„Å£„Åü„ÅÆ„Åã„ÅåÊÑü„Åò„Çâ„Çå„Çã„ÄÇphython-2.2.1„Åå„É™„É™„Éº„Çπ„Åï„Çå„Åü„ÅÆ„ÅØ2002Âπ¥4Êúà10Êó•„Åß„ÄÅ„Åù„Çå„Åã„Çâ„Å©„Çå„Åè„Çâ„ÅÑÁµå„Å£„Å¶„Åì„ÅÆthis„É¢„Ç∏„É•„Éº„É´„ÅåÁô∫Ë¶ã„Åï„Çå„Åü„ÅÆ„ÅãÂàÜ„Åã„Çâ„Å™„ÅÑ„ÅåÂàù„ÇÅ„Å¶Áô∫Ë¶ã„Åó„Åü‰∫∫„ÅØÁµ∂ÂØæ„Åª„Å£„Åì„Çä„Åó„Åü„Åì„Å®„Å†„Çç„ÅÜ„ÄÇ\nNote 1: import this „ÄåThe Zen of Python„Äç„ÅØPython„Éè„ÉÉ„Ç´„Éº„ÄÅTim Peters„Å´„Çà„Å£„Å¶Êõ∏„Åã„Çå„ÅüÊúâÂêç„Å™ÊñáÁ´†„ÅßPythonË®≠Ë®àÂì≤Â≠¶„ÇíË¶ÅÁ¥Ñ„Åó„Åü„Çà„ÅÜ„Å™„ÇÇ„ÅÆ„Å®Ë®Ä„Çè„Çå„Å¶„ÅÑ„Çã„ÄÇ Barry WarsawÊ∞è„ÅÆË®ò‰∫ã„Å´„Çà„Çã„Å®Ëµ∑Ê∫ê„ÅØTim PetersÊ∞è„Å´„Çà„Çã1999Âπ¥6Êúà4Êó•„ÅÆPython-list„Å∏„ÅÆ„Åì„ÅÆÊäïÁ®ø„ÅÆ„Çà„ÅÜ„Å†„ÄÇ‰ª•‰∏ã„ÄÅPython„Ç§„É≥„Çø„É©„ÇØ„ÉÜ„Ç£„ÇØ„É¢„Éº„Éâ„Åßimport this„ÇíÂÆüË°å„Åó„ÄåThe Zen of Python„Äç„ÇíË°®Á§∫„Åï„Åõ„ÅüÂÜÖÂÆπÔºö","title":"Python Easter Egg"},{"content":"UPDATED 2017-02-15: changed docker run command example due to Issue#4\n‰ª•Ââç„Äåazuresshconfig„ÅÆÁ¥π‰ªã ‚Äì Azure‰∏ä„Åß„ÅÆSSHÁîüÊ¥ª„ÇíÂ∞ë„Åó„Å†„ÅëÂø´ÈÅ©„Å´„Åô„Çã„Äç„ÅÆÊäïÁ®ø„Åßazuresshconfig„ÅÆÁ¥π‰ªã„Çí„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„ÅÑ„Åü„Åå„ÄÅ„ÉÑ„Éº„É´„Çí„É™„É™„Éº„Çπ„Åó„Å¶‰ª•Êù•„ÄÅÊï∞Â∞ë„Å™„ÅÑË≤¥Èáç„Å™Âà©Áî®ËÄÖÊßò„Åã„Çâ„Ç§„É≥„Çπ„Éà„Éº„É´„Åå„Ç≥„Ç±„Çã„Çì„Å†„Åë„Å©‰Ωï„Å®„Åã„Åó„Çç„Å®„ÅÑ„ÅÜ„ÇØ„É¨„Éº„É†„Çí„ÅÑ„Åü„Å†„ÅÑ„Å¶„ÅÑ„Åü„ÄÇ„Åù„Åì„Åß„Ç§„É≥„Çπ„Éà„Éº„É´„Éû„Éã„É•„Ç¢„É´„ÇíÂÖÖÂÆü„Åï„Åõ„Çà„ÅÜ„Åã„Å®„Åã„ÄÅ„Ç§„É≥„Çπ„Éà„Éº„É©„Éº„Çí„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†Âà•„Å´ÂÖÖÂÆü„Åï„Åõ„Çà„ÅÜ„Åã„Å®„ÅãËÄÉ„Åà„Åü„ÇÇ„ÅÆ„ÅÆ„ÄÅ„Åì„Åì„ÅØÊµÅË°å„Çä„ÅÆ„Ç≥„É≥„ÉÜ„ÉäÂÆüË°å„Åß„Åç„Çã„Çà„ÅÜ„Åó„Åü„Åª„ÅÜ„Åå„ÅÑ„ÅÑ„Å†„Çç„ÅÜ„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅßDockerÂØæÂøú„Åô„Çã„Åì„Å®„Å´„Åó„Åü„ÄÇ\n‰ªäÂõû„ÅÆÂØæÂøú„Å´„Çà„Çäpip„Ç§„É≥„Çπ„Éà„Éº„É´„ÇÑ„ÄÅ„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†Âà•„Å´prerequisite„Å™„É©„É≥„Çø„Ç§„É†„ÄÅ„Éò„ÉÉ„ÉÄ„Éï„Ç°„Ç§„É´„ÄÅ„É©„Ç§„Éñ„É©„É™„Å®„ÅÑ„Å£„ÅüÈù¢ÂÄí„Å™„Ç§„É≥„Çπ„Éà„Éº„É´„Åå‰∏çË¶Å„Å®„Å™„Çä„ÄÅMac„ÄÅWindows„ÄÅLinux(Ubuntu„ÄÅCentOS„ÄÅ„Åù„ÅÆ‰ªñdistro)Èñ¢‰øÇ„Å™„Åè„Ç∑„É≥„Éó„É´„Å´docker run„Ç≥„Éû„É≥„Éâ„Åß„ÅÆÂÆüË°å„ÅåÂèØËÉΩ„Å®„Å™„Å£„Åü„ÄÇ\n„Åó„Åã„ÇÇË∂ÖËªΩÈáèLinux„Éá„Ç£„Çπ„Éà„É™„Éì„É•„Éº„Ç∑„Éß„É≥„Åß„ÅÇ„ÇãAlpine Linux„ÅÆ‰∏ä„Å´Python„É©„É≥„Çø„Ç§„É†„Å®„ÉÑ„Éº„É´„ÇíËºâ„Åõ„Å¶„ÅÑ„Çã„Å†„Åë„Åß„ÅÇ„Çã„Åü„ÇÅ„Çµ„Ç§„Ç∫„ÅØ„Åü„Å£„Åü„ÅÆ155MB„Å®„Åã„Å™„ÇäËªΩ„ÇÅ\n$ docker images azuresshconfig REPOSITORY TAG IMAGE ID CREATED SIZE azuresshconfig latest 7488bef4343f 7 minutes ago 155 MB ÂÆüË°å‰æã $ docker run -v $HOME:/root --rm -it yoichikawasaki/azuresshconfig \\ --output stdout --user yoichika --identityfile ~/.ssh/id_rsa \u0026gt; $HOME/.ssh/config Dockerfile„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„Éì„É´„Éâ„ÉªÂÆüË°å„ÅØ„Åì„Å°„Çâ\n$ curl https://raw.githubusercontent.com/yokawasa/azure-ssh-config/master/Dockerfile -o Dockerfile $ docker build -t azuresshconfig . $ docker run -v $HOME:/root --rm -it yoichikawasaki/azuresshconfig \\ --output stdout --user yoichika --identityfile ~/.ssh/id_rsa \u0026gt; $HOME/.ssh/config LINKS yoichikawasaki/azuresshconfig Ôº† Docker Hub https://github.com/yokawasa/azure-ssh-config Enjoy SSH life on Azure with dockerized azuresshconfig!\n","permalink":"https://unofficialism.info/posts/azuresshconfig-has-been-dockerized/","summary":"UPDATED 2017-02-15: changed docker run command example due to Issue#4\n‰ª•Ââç„Äåazuresshconfig„ÅÆÁ¥π‰ªã ‚Äì Azure‰∏ä„Åß„ÅÆSSHÁîüÊ¥ª„ÇíÂ∞ë„Åó„Å†„ÅëÂø´ÈÅ©„Å´„Åô„Çã„Äç„ÅÆÊäïÁ®ø„Åßazuresshconfig„ÅÆÁ¥π‰ªã„Çí„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„ÅÑ„Åü„Åå„ÄÅ„ÉÑ„Éº„É´„Çí„É™„É™„Éº„Çπ„Åó„Å¶‰ª•Êù•„ÄÅÊï∞Â∞ë„Å™„ÅÑË≤¥Èáç„Å™Âà©Áî®ËÄÖÊßò„Åã„Çâ„Ç§„É≥„Çπ„Éà„Éº„É´„Åå„Ç≥„Ç±„Çã„Çì„Å†„Åë„Å©‰Ωï„Å®„Åã„Åó„Çç„Å®„ÅÑ„ÅÜ„ÇØ„É¨„Éº„É†„Çí„ÅÑ„Åü„Å†„ÅÑ„Å¶„ÅÑ„Åü„ÄÇ„Åù„Åì„Åß„Ç§„É≥„Çπ„Éà„Éº„É´„Éû„Éã„É•„Ç¢„É´„ÇíÂÖÖÂÆü„Åï„Åõ„Çà„ÅÜ„Åã„Å®„Åã„ÄÅ„Ç§„É≥„Çπ„Éà„Éº„É©„Éº„Çí„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†Âà•„Å´ÂÖÖÂÆü„Åï„Åõ„Çà„ÅÜ„Åã„Å®„ÅãËÄÉ„Åà„Åü„ÇÇ„ÅÆ„ÅÆ„ÄÅ„Åì„Åì„ÅØÊµÅË°å„Çä„ÅÆ„Ç≥„É≥„ÉÜ„ÉäÂÆüË°å„Åß„Åç„Çã„Çà„ÅÜ„Åó„Åü„Åª„ÅÜ„Åå„ÅÑ„ÅÑ„Å†„Çç„ÅÜ„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅßDockerÂØæÂøú„Åô„Çã„Åì„Å®„Å´„Åó„Åü„ÄÇ\n‰ªäÂõû„ÅÆÂØæÂøú„Å´„Çà„Çäpip„Ç§„É≥„Çπ„Éà„Éº„É´„ÇÑ„ÄÅ„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†Âà•„Å´prerequisite„Å™„É©„É≥„Çø„Ç§„É†„ÄÅ„Éò„ÉÉ„ÉÄ„Éï„Ç°„Ç§„É´„ÄÅ„É©„Ç§„Éñ„É©„É™„Å®„ÅÑ„Å£„ÅüÈù¢ÂÄí„Å™„Ç§„É≥„Çπ„Éà„Éº„É´„Åå‰∏çË¶Å„Å®„Å™„Çä„ÄÅMac„ÄÅWindows„ÄÅLinux(Ubuntu„ÄÅCentOS„ÄÅ„Åù„ÅÆ‰ªñdistro)Èñ¢‰øÇ„Å™„Åè„Ç∑„É≥„Éó„É´„Å´docker run„Ç≥„Éû„É≥„Éâ„Åß„ÅÆÂÆüË°å„ÅåÂèØËÉΩ„Å®„Å™„Å£„Åü„ÄÇ\n„Åó„Åã„ÇÇË∂ÖËªΩÈáèLinux„Éá„Ç£„Çπ„Éà„É™„Éì„É•„Éº„Ç∑„Éß„É≥„Åß„ÅÇ„ÇãAlpine Linux„ÅÆ‰∏ä„Å´Python„É©„É≥„Çø„Ç§„É†„Å®„ÉÑ„Éº„É´„ÇíËºâ„Åõ„Å¶„ÅÑ„Çã„Å†„Åë„Åß„ÅÇ„Çã„Åü„ÇÅ„Çµ„Ç§„Ç∫„ÅØ„Åü„Å£„Åü„ÅÆ155MB„Å®„Åã„Å™„ÇäËªΩ„ÇÅ\n$ docker images azuresshconfig REPOSITORY TAG IMAGE ID CREATED SIZE azuresshconfig latest 7488bef4343f 7 minutes ago 155 MB ÂÆüË°å‰æã $ docker run -v $HOME:/root --rm -it yoichikawasaki/azuresshconfig \\ --output stdout --user yoichika --identityfile ~/.ssh/id_rsa \u0026gt; $HOME/.ssh/config Dockerfile„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„Éì„É´„Éâ„ÉªÂÆüË°å„ÅØ„Åì„Å°„Çâ\n$ curl https://raw.githubusercontent.com/yokawasa/azure-ssh-config/master/Dockerfile -o Dockerfile $ docker build -t azuresshconfig . $ docker run -v $HOME:/root --rm -it yoichikawasaki/azuresshconfig \\ --output stdout --user yoichika --identityfile ~/.","title":"azuresshconfig has been dockerized"},{"content":"Logstash is an open source, server-side data processing pipeline that ingests data from a multitude of sources simultaneously, transforms it, and then sends it to your favorite destinations. Here is a list of logstash plugins for Microsoft Azure Services.\nPlugin Name Target Azure Services Note logstash-input-azureeventhub EventHub Logstash input plugin reads data from specified Azure Event Hubs logstash-input-azureblob Blob Storage Logstash input plugin that reads and parses data from Azure Storage Blobs logstash-input-azuretopic Service Bus Topic Logstash input plugin reads messages from Azure Service Bus Topics logstash-input-azuretopicthreadable Service Bus Topic Logstash input plugin reads messages from Azure Service Bus Topics using multiple threads logstash-output-applicationinsights Application Insights Logstash output plugin that store events to Application Insights logstash-input-azurewadtable Table Storage Logstash input plugin for Azure Diagnostics. Specifically pulling diagnostics data from Windows Azure Diagnostics tables logstash-input-azurewadeventhub EventHub Logstash input plugin reads Azure diagnostics data from specified Azure Event Hubs and parses the data for output logstash-input-azurewadtable Table Storage Logstash input plugin reads Azure diagnostics data from specified Azure Storage Table and parses the data for output logstash-output-documentdb Cosmos DB logstash output plugin that stores events to Azure Cosmos DB logstash-output-azuresearch Azure Search logstash output plugin that stores events to Azure Search logstash-output-azure_loganalytics Log Analytics logstash output plugin that stores events to Azure Log Analytics logstash-input-jdbc SQL Database, Azure Database for MySQL/PostgreSQL Input plugin to ingest data in any database with a JDBC interface into Logstash that support most of major RDBMS such as MySQL„ÄÅPostgreSQL„ÄÅOracleDB„ÄÅMicrosoft SQL, etc (as of Dec 29, 2016)\n","permalink":"https://unofficialism.info/posts/logstash-plugins-for-azure-services/","summary":"Logstash is an open source, server-side data processing pipeline that ingests data from a multitude of sources simultaneously, transforms it, and then sends it to your favorite destinations. Here is a list of logstash plugins for Microsoft Azure Services.\nPlugin Name Target Azure Services Note logstash-input-azureeventhub EventHub Logstash input plugin reads data from specified Azure Event Hubs logstash-input-azureblob Blob Storage Logstash input plugin that reads and parses data from Azure Storage Blobs logstash-input-azuretopic Service Bus Topic Logstash input plugin reads messages from Azure Service Bus Topics logstash-input-azuretopicthreadable Service Bus Topic Logstash input plugin reads messages from Azure Service Bus Topics using multiple threads logstash-output-applicationinsights Application Insights Logstash output plugin that store events to Application Insights logstash-input-azurewadtable Table Storage Logstash input plugin for Azure Diagnostics.","title":"Logstash plugins for Microsoft Azure Services"},{"content":"ÈÅéÂéª„Å´Êú¨„Éñ„É≠„Ç∞„Åß„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÂàá„ÇäÂè£„Å®„Åó„ÅüÈü≥Â£∞Ë™çË≠ò„ÇÑOCRÊäÄË°ì„ÇíÂà©Áî®„Åó„Åü„Éá„É¢„ÇíÁ¥π‰ªã„Åó„Åü„Åå„ÄÅ„Åì„Åì„Åß„ÅØ„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆ‰∏≠„ÅÆ‰∫∫Áâ©Âá∫ÁèæÁÆáÊâÄ„Å´ÈÄ£Âãï„Åó„Å¶‰∫∫Áâ©Âêç„ÇíÂ≠óÂπï„ÅßË°®Á§∫„Åï„Åõ„Çã„Éá„É¢„Å®„Åù„ÅÆÂÆüË£ÖÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åó„Åü„ÅÑ„ÄÇ‰∫∫Áâ©Ë≠òÂà•„Å´„ÅØAzure„ÅÆCognitive Services„ÅÆFace API„Çí‰Ωø„Å£„Å¶„ÅÑ„Å¶„ÄÅ„Åì„Çå„ÅßÂãïÁîª„ÅÆ‰∏≠„Å´Âá∫Áèæ„Åô„ÇãÈ°î„ÅÆÊ§úÂá∫„ÇíË°å„ÅÑ„ÄÅ‰∫à„ÇÅÁôªÈå≤„Åó„Å¶„ÅÑ„Çã‰∫∫Áâ©„É™„Çπ„Éà„Å®„ÅÆ„Éû„ÉÉ„ÉÅ„É≥„Ç∞„Å´„Çà„ÇäÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÄÇ Cognitive Serivces„Å®„ÅØË¶ñË¶ö„ÄÅÈü≥Â£∞„ÄÅË®ÄË™û„ÄÅÁü•Ë≠ò„Å™„Å©„Éû„Ç§„ÇØ„É≠„ÇΩ„Éï„Éà„Åå„Åì„Çå„Åæ„ÅßÁ†îÁ©∂„ÇíÈÄö„Åò„Å¶ÈñãÁô∫„Åó„Å¶„Åç„Åü„Åï„Åæ„Åñ„Åæ„Å™Ë¶ÅÁ¥†ÊäÄË°ì„ÇíAPI„Å®„Åó„Å¶Êèê‰æõ„Åó„Å¶„ÅÑ„Çã„Çµ„Éº„Éì„Çπ„ÅÆ„Åì„Å®„Åß„ÄÅÊúÄËøëÂ∑∑„Åß‰∫∫Â∑•Áü•ËÉΩÔºàAIÔºâ„Å†„Å®„Åã„Ç§„É≥„ÉÜ„É™„Ç∏„Çß„É≥„Çπ„Å®„Åã„ÅÑ„ÅÜ„Ç≠„Éº„ÉØ„Éº„Éâ„Çí„Çà„ÅèËÄ≥„Å´„Åô„Çã„ÅÆ„Åß„ÅØ„Å™„ÅÑ„Åã„Å®ÊÄù„ÅÜ„ÅåAzureÂà©Áî®„Ç∑„Éä„É™„Ç™„Åß„Åù„ÅÜ„ÅÑ„Å£„Åü„Ç§„É≥„ÉÜ„É™„Ç∏„Çß„É≥„ÇπÔºàÁü•ËÉΩ/Áü•ÊÄßÔºâ„ÇíÂÖº„Å≠ÂÇô„Åà„Åü„Ç¢„Éó„É™„Çí‰Ωú„ÇãÂ†¥Âêà„ÅØÈñìÈÅï„ÅÑ„Å™„Åè‰∏≠Ê†∏„Å®„Å™„Çã„Çµ„Éº„Éì„Çπ„ÅÆ1„Å§„Åß„ÅÇ„Çã„ÄÇFace API„ÅØ„Åù„ÅÆ‰∏≠„Åß„ÇÇÈ°î„ÅÆÊ§úÂá∫„ÉªË≠òÂà•„ÇÑ„ÄÅÈ°î„Å´„Åæ„Å§„Çè„ÇãÊÑüÊÉÖ„ÄÅÁâπÂæ¥„Å™„Å©„É°„Çø„Éá„Éº„ÇøÊäΩÂá∫„Å´ÁâπÂåñ„Åó„ÅüAPI„Åß„ÅÇ„Çã„ÄÇ\ndemo site source code ‰∏ªË¶Å„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„Å®Ê©üËÉΩ ‰∏ãÂõ≥„ÅØ‰ªäÂõû„ÅÆ„Éá„É¢‰ΩúÊàê„ÅÆ„Åü„ÇÅ„Å´Ë°å„Å£„Å¶„ÅÑ„ÇãÂá¶ÁêÜ„Éï„É≠„Éº„Å®‰∏ªË¶Å„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„ÇíË°®„Åó„Å¶„ÅÑ„Çã„ÄÇ„ÇÑ„Å£„Å¶„ÅÑ„Çã„Åì„Å®„ÅØÂ§ß„Åç„ÅèÂàÜ„Åë„Å¶3„Å§: (1) ÂãïÁîª„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíAzure Media Encoder Standard„Çí‰Ωø„Å£„Å¶„Éï„É¨„Éº„É†„Åî„Å®„ÅÆÈùôÊ≠¢ÁîªÂÉè„ÅÆ‰ΩúÊàê, (2) Cognitive Services„ÅÆFace API„Çí‰Ωø„Å£„Å¶1„Çà„ÇäÂæó„Çâ„Çå„ÅüÈùôÊ≠¢ÁîªÂÉè„Åã„ÇâÈ°î„ÅÆÊ§úÂá∫„ÇíË°å„ÅÑ‰∫à„ÇÅÁôªÈå≤„Åó„Å¶„ÅÑ„Çã‰∫∫Áâ©„É™„Çπ„Éà„Å®„Éû„ÉÉ„ÉÅ„É≥„Ç∞ÔºàÊúÄ„ÇÇÈ°û‰ººÂ∫¶„ÅåÈ´ò„ÅÑ„ÇÇ„ÅÆ„ÇíÊú¨‰∫∫„Å®„Åø„Å™„ÅôÔºâ„Åó„Å¶‰∫∫Áâ©„ÇíË≠òÂà•, (3) 2„ÅßÂæó„Çâ„Çå„ÅüÂêÑ„Éï„É¨„Éº„É†‰∏≠„ÅÆ‰∫∫Áâ©ÊÉÖÂ†±„ÇíÊôÇÈñìÈ†Ü„Å´‰∏¶„Åπ„Å¶Â≠óÂπï(Closed Caption)Áî®„ÅÆ„Éá„Éº„Çø„Éï„Ç°„Ç§„É´„ÇíÁîüÊàê„ÄÇ‰ª•‰∏ã„ÄÅÂêÑÂá¶ÁêÜ„ÅÆË©≥Á¥∞„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åô„Çã„ÄÇ\n1. Azure Media Encoder Standard„Åß„Éï„É¨„Éº„É†„Åî„Å®„ÅÆÈùôÊ≠¢ÁîªÁîüÊàê ÊÆãÂøµ„Å™„Åå„ÇâFace API„ÅØ„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åã„ÇâÁõ¥Êé•È°îÊ§úÂá∫„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Å™„ÅÑ„Åü„ÇÅ„ÄÅ‰∏ÄÊó¶„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åã„ÇâÂêÑ„Éï„É¨„Éº„É†„Åî„Å®„ÅÆÈùôÊ≠¢Áîª„ÇíÁîüÊàê„Åó„Å¶„Åù„ÅÆÈùôÊ≠¢Áîª„ÇíÂØæË±°„Å´Âá¶ÁêÜ„ÇíË°å„ÅÜÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ„Åì„Åì„Åß„ÅØÂêÑ„Éï„É¨„Éº„É†„Åî„Å®„ÅÆÈùôÊ≠¢ÁîªÁîüÊàê„Å´Azure Media Encoder StandardÔºàMESÔºâ„ÇíÂà©Áî®„Åô„Çã„ÄÇMES„Çí‰Ωø„ÅÜ„Åì„Å®„Åß„Ç®„É≥„Ç≥„Éº„Éâ„Çø„Çπ„ÇØ„Å®„Åó„Å¶„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å´ÂØæ„Åó„Å¶Êßò„ÄÖ„Å™Âá¶ÁêÜ„ÇíË°å„ÅÜ„Åì„Å®„Åå„Åß„Åç„Çã„ÅÆ„Å†„Åå„ÄÅMES„Å´„ÅØ„Åù„ÅÆ„Ç®„É≥„Ç≥„Éº„Éâ„Çø„Çπ„ÇØ„ÅÆÔºë„Å§„Å®„Åó„Å¶„Çµ„É†„Éç„Ç§„É´ÁîüÊàê„ÅÆ„Åü„ÇÅ„ÅÆ„Çø„Çπ„ÇØ„ÅåÁî®ÊÑè„Åï„Çå„Å¶„Åä„Çä„ÄÅ‰ªäÂõû„ÅØ„Åì„ÅÆ„Çµ„É†„Éç„Éº„É´ÁîüÊàê„Çø„Çπ„ÇØ„ÇíÂà©Áî®„Åô„Çã„ÄÇ‰ªñ„ÅÆ„Ç®„É≥„Ç≥„Éº„Éâ„Çø„Çπ„ÇØÂêåÊßò„Å´„Çµ„É†„Éç„Ç§„É´ÁîüÊàê„Çø„Çπ„ÇØ„Å´„Å§„ÅÑ„Å¶„ÇÇ„Éó„É™„Çª„ÉÉ„Éà„Å®Âëº„Å∞„Çå„Çã„Ç®„É≥„Ç≥„Éº„Éâ„Å´ÂøÖË¶Å„Å™ÊÉÖÂ†±„ÇíË®òËø∞„Åó„Åü XML „Åæ„Åü„ÅØ JSONÂΩ¢Âºè„Éï„Ç°„Ç§„É´„ÇíÁî®ÊÑè„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ‰ªäÂõû„ÅØ1Áßí„Éï„É¨„Éº„É†„Åî„Å®„Å´JPEGÂΩ¢Âºè„ÅÆÈùôÊ≠¢ÁîªÔºà„Çµ„É†„Éç„Ç§„É´Ôºâ„ÇíÁîüÊàê„Åô„Çã„Åü„ÇÅ„Å´Ê¨°„ÅÆ„Çà„ÅÜ„Å™„Éó„É™„Çª„ÉÉ„ÉàÔºàamsmp-thumbnail-config.jsonÔºâ„ÇíÁî®ÊÑè„Åó„Åü„ÄÇ\n{ \u0026#34;Version\u0026#34;: 1.0, \u0026#34;Codecs\u0026#34;: [ { \u0026#34;Start\u0026#34;: \u0026#34;00:00:00\u0026#34;, \u0026#34;Step\u0026#34;: \u0026#34;00:00:01\u0026#34;, \u0026#34;Type\u0026#34;: \u0026#34;JpgImage\u0026#34;, \u0026#34;JpgLayers\u0026#34;: [ { \u0026#34;Quality\u0026#34;: 90, \u0026#34;Type\u0026#34;: \u0026#34;JpgLayer\u0026#34;, \u0026#34;Width\u0026#34;: 640, \u0026#34;Height\u0026#34;: 360 } ] } ], \u0026#34;Outputs\u0026#34;: [ { \u0026#34;FileName\u0026#34;: \u0026#34;{Basename}_{Index}{Extension}\u0026#34;, \u0026#34;Format\u0026#34;: { \u0026#34;Type\u0026#34;: \u0026#34;JpgFormat\u0026#34; } } ] } MES„Å´„Çà„Çã„Çµ„É†„Éç„Ç§„É´Âá¶ÁêÜÂÆüË°åÊñπÊ≥ï„ÇÑ„Éó„É™„Çª„ÉÉ„Éà„ÅÆË©≥Á¥∞„Å´„Å§„ÅÑ„Å¶„ÅØ„ÄåMedia Encoder Standard „Çí‰ΩøÁî®„Åó„ÅüÈ´òÂ∫¶„Å™„Ç®„É≥„Ç≥„Éº„Éâ„Äç„ÇÑÂêå„Éö„Éº„Ç∏„ÅÆ„Äå„Çµ„É†„Éç„Ç§„É´„ÇíÁîüÊàê„Åô„Çã„ÄçÈ†Ö„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ„ÄÇÂ∞ö„ÄÅ‰ªäÂõû„ÅÆ„Çµ„É†„Éç„Ç§„É´ÁîüÊàê„ÅÆ„Åü„ÇÅ„ÅÆ„Ç®„É≥„Ç≥„Éº„Éá„Ç£„É≥„Ç∞Âá¶ÁêÜ„ÅØÂ∞èÁîüËá™‰Ωú„ÅÆ„Äåazure-media-processor-java„Äç„ÇíÂà©Áî®„Åó„Å¶„Éê„ÉÉ„ÉÅÂÆüË°å„Åó„Å¶„ÅÑ„Çã„ÄÇ\n2. Cognitive Services Face API„Å´„Çà„ÇãÈ°î„ÅÆÊ§úÂá∫„Å®‰∫∫Áâ©„ÅÆË≠òÂà• „Åì„Åì„Åß„ÅØCognitive Services„ÅÆFace API„Çí‰Ωø„Å£„Å¶Ôºë„ÅßÂæó„Çâ„Çå„Åü„Éï„É¨„Éº„É†„Åî„Å®„ÅÆÈùôÊ≠¢ÁîªÂÉè„Å´ÂØæ„Åó„Å¶È°îÊ§úÂá∫„ÇíË°å„ÅÑ„ÄÅ‰∫à„ÇÅÁôªÈå≤„Åó„Å¶„ÅÑ„Çã‰∫∫Áâ©„É™„Çπ„ÉàÔºàFace API„Åß„ÅÑ„ÅÜ„Å®„Åì„Çç„ÅÆPerson GroupÔºâ„Å®ÊØîËºÉ„Åó„Å¶ÊúÄ„ÇÇÈ°û‰ººÂ∫¶„ÅÆÈ´ò„ÅÑ‰∫∫Áâ©ÔºàFace API„Åß„ÅÑ„ÅÜ„Å®„Åì„Çç„ÅÆPerson Ôºâ„Çí„Åù„ÅÆÊú¨‰∫∫„Å®„Åó„Å¶Ë≠òÂà•„Åô„Çã„ÄÇ\n2-1. ‰∫∫Áâ©„É™„Çπ„ÉàÔºàPerson GroupÔºâ„ÅÆ‰ΩúÊàê ‰∫∫Áâ©„É™„Çπ„ÉàÔºàPerson GroupÔºâ„ÅÆ‰ΩúÊàê„ÅßÂøÖË¶Å„Å™‰ΩúÊ•≠„Å®Face API„ÅÆÂà©Áî®„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„ÅØÊ¨°„ÅÆÈÄö„Çä:\nCreate a Person Group API„Çí‰Ωø„Å£„Å¶ Person Group„Çí‰ΩúÊàê ‰∏äË®ò„Åß‰ΩúÊàê„Åó„ÅüPerson Group„ÅÆ‰∏≠„Å´Create a Person API„Åß‰∫∫Áâ©„Åî„Å®„Å´Person„Çí‰ΩúÊàê„Åô„Çã„ÄÇ‰ΩúÊàê„Åï„Çå„ÅüPersonÂØæ„Åó„Å¶Add a Person Face API„Åß„Åù„ÅÆ‰∫∫Áâ©„ÅÆÈ°îÁîªÂÉè„ÇíÁôªÈå≤„Åô„Çã„ÄÇFace API„Åß„ÅØÂêÑPerson„Å´ÊúÄÂ§ß248Êûö„ÅÆÈ°îÁîªÂÉè„ÇíÁôªÈå≤„ÅåÂèØËÉΩ„Å®„Å™„Å£„Å¶„Åä„Çä„ÄÅ„Åï„Åæ„Åñ„Åæ„Å™Á®ÆÈ°û„ÅÆÈ°î„ÇíÁôªÈå≤„Åô„Çã„Åì„Å®„ÅßÊ©üÊ¢∞Â≠¶Áøí„Å´„Çà„Çä„Åù„ÅÆ‰∫∫Áâ©„ÅÆÈ°îË≠òÂà•„ÅÆÁ≤æÂ∫¶„ÅåÂêë‰∏ä„Åô„Çã„Å®„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇ ‰∏äË®ò„ÅßPerson Group„Å´ÂØæ„Åó„Å¶ÁôªÈå≤„Åï„Çå„ÅüPerson„Éá„Éº„ÇøÔºàPerson„Åî„Å®„ÅÆÈ°î„Éá„Éº„ÇøÔºâ„ÅØÊúÄÁµÇÁöÑ„Å´Train Person Group API„Åß„Éà„É¨„Éº„Éã„É≥„Ç∞„Åï„Çå„Çã„Åì„Å®„Åß„ÄÅÊ¨°„ÅÆ2-2„ÅßË°å„ÅÜÈ°îË≠òÂà•ÔºàFace Identify APIÔºâÂá¶ÁêÜ„ÅßÂà©Áî®ÂèØËÉΩ„Å™„Éá„Éº„Çø„Å®„Å™„Çã„ÄÇÊ≥®ÊÑèÁÇπ„Å®„Åó„Å¶„ÄÅ„ÅÑ„Åè„Çâ„ÅÇ„Çã‰∫∫Áâ©„ÅÆÈ°îÁîªÂÉè„ÇíÁôªÈå≤„Åó„Åü„Å®„Åó„Å¶„ÇÇ„Åù„Çå„Åå„Éà„É¨„Éº„Éã„É≥„Ç∞„Åï„Çå„Å™„ÅÑÈôê„ÇäÈ°îË≠òÂà•Âá¶ÁêÜ„Å´„Åä„ÅÑ„Å¶ÊúâÂäπ„Å´„ÅØ„Å™„Çâ„Å™„ÅÑ„Åü„ÇÅ„ÄÅÊñ∞„Åó„ÅèÈ°î„ÇíÁôªÈå≤„Åó„ÅüÂ†¥Âêà„ÅØ„Éà„É¨„Éº„Éã„É≥„Ç∞Âá¶ÁêÜ„ÇíÂøò„Çå„Åö„Å´Ë°å„Å£„Å¶„Åè„Å†„Åï„ÅÑÔºà„Åì„ÅÆÊâã„ÅÆ„Åì„Å®„ÅØËá™ÂãïÂåñ„Åó„Å¶„Åä„ÅÑ„Å¶„Åè„Å†„Åï„ÅÑÔºâ„ÄÇ 2-2. ÈùôÊ≠¢ÁîªÂÉè‰∏≠„ÅÆÈ°îË™çË≠ò„Å®‰∫∫Áâ©Ë≠òÂà• „Åì„Åì„ÅßË°å„ÅÜÂá¶ÁêÜ„ÅÆÊµÅ„Çå„Å®Face API„ÅÆÂà©Áî®„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„ÅØÊ¨°„ÅÆÈÄö„Çä:\nFace Detect API„Çí‰Ωø„Å£„Å¶ÈùôÊ≠¢ÁîªÂÉè‰∏≠„ÅÆÈ°î„ÇíÊ§úÂá∫„Åô„Çã„ÄÇÊ§úÂá∫„Åï„Çå„ÅüÈ°î„Åî„Å®„Å´Âõ∫Êúâ„ÅÆID„ÅåÂæó„Çâ„Çå„Çã„ÄÇÂ∞ö„ÄÅ1Êûö„ÅÆÁîªÂÉè„ÅßË§áÊï∞„ÅÆÈ°î„ÅåÊ§úÂá∫„Åï„Çå„ÅüÂ†¥Âêà„ÄÅÊúÄÂ§ß64„Åæ„Åß„ÅØÂèñÂæóÂèØËÉΩ„Å®„Å™„Å£„Å¶„ÅÑ„ÇãÔºà2016Âπ¥12ÊúàÁèæÂú®Ôºâ„ÄÇ ‰∏äË®ò„ÅÆÈ°îÊ§úÂá∫„ÅßÂæó„Çâ„Çå„ÅüÈ°îID„ÇíÂÖÉ„Å´Face Identify API„Çí‰Ωø„Å£„Å¶2-1„ÅßÁôªÈå≤„Åó„Åü‰∫∫Áâ©„É™„Çπ„ÉàÔºàPerson GroupÔºâ„Å´ÂØæ„Åó„Å¶‰∫∫Áâ©Ê§úÁ¥¢„ÇíË°å„ÅÑÈ°î„ÅÆÈ°û‰ººÂ∫¶Ôºà0ÔΩû1„ÅÆÊï∞ÂÄ§Ôºâ„ÅåÈ´ò„ÅÑ„ÇÇ„ÅÆÈ†Ü„Å´‰∏ÄË¶ß„ÇíÂèñÂæó„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ„Åì„Åì„Åß„ÅØÊúÄ„ÇÇÈ°û‰ººÂ∫¶„ÅåÈ´ò„ÅÑ‰∫∫Áâ©„Çí„Åù„ÅÆÈ°î„ÅÆ‰∫∫Áâ©„Å®„Åó„Å¶Ê±∫ÂÆö„Åô„Çã„ÄÇ 3. Â≠óÂπï(Closed Caption)„Éá„Éº„Çø„Éï„Ç°„Ç§„É´„ÅÆÁîüÊàê 2„ÅßÂæó„Çâ„Çå„ÅüÂêÑ„Éï„É¨„Éº„É†‰∏≠„ÅÆ‰∫∫Áâ©ÊÉÖÂ†±„Å®ÂêÑ„Éï„É¨„Éº„É†„ÅÆÊôÇÈñì„ÇíÂÖÉ„Å´Â≠óÂπïÁî®„ÅÆ„Éá„Éº„Çø„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Åß„ÅÇ„ÇãWebVTT„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Éï„Ç°„Ç§„É´„ÇíÁîüÊàê„Åô„Çã„ÄÇ‰ª•‰∏ã„ÄÅ6ÁßíÔΩû30Áßí„Åæ„Åß„ÅÆÂ≠óÂπïÂá∫Âäõ„ÇíÊúü„Åó„ÅüWebVTT„Éï„Ç°„Ç§„É´„ÅÆ„Çµ„É≥„Éó„É´„Åß„ÅÇ„Çã„Åå„ÄÅË¶ã„Å¶„ÅÑ„Åü„Å†„ÅÑ„Å¶„Çè„Åã„ÇãÈÄö„Çä„Éï„É¨„Éº„É†„ÅÆÊôÇÈñìÔºàÊúÄÂ∞èÁßíÂçò‰ΩçÔºâ„Å®„Åù„Åì„ÅßÂæó„Çâ„Çå„Åü‰∫∫Áâ©Âêç„Çí„Çª„ÉÉ„Éà„ÅßË®òËø∞„Åô„Çã„Å®„Å¶„ÇÇÂçòÁ¥î„Å™„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ\n00:00:06.000 --\u0026gt; 00:00:07.000 Satya Nadella(0.73295)` 00:00:07.000 --\u0026gt; 00:00:08.000 Satya Nadella(0.6313) 00:00:27.000 --\u0026gt; 00:00:28.000 Bryan Roper(0.68094) 00:00:29.000 --\u0026gt; 00:00:30.000 Bryan Roper(0.54939) ÂêÑ„Éï„É¨„Éº„É†„ÅÆÊôÇÈñì„Å´„Å§„ÅÑ„Å¶„ÄÅ‰ªäÂõû„ÅÆ„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆ„Éï„É¨„Éº„É†„ÅØ1Áßí„Åî„Å®„Å´ÂèñÂæó„Åó„Å¶„Åä„Çä„ÄÅ„Éï„É¨„Éº„É†„Åî„Å®„ÅÆÈùôÊ≠¢ÁîªÂÉè„Éï„Ç°„Ç§„É´„Å´„ÅØ„Éï„É¨„Éº„É†„ÅÆÈ†ÜÁï™„ÅåPostfix„Å®„Åó„Å¶„Éï„Ç°„Ç§„É´Âêç„Å´Âê´„Åæ„Çå„Å¶„ÅÑ„Çã„Åü„ÇÅÂçòÁ¥î„Å´„Éï„Ç°„Ç§„É´Âêç„Åã„Çâ„Éï„É¨„Éº„É†„ÅÆÊôÇÈñì„ÅåÁâπÂÆö„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Å£„Å¶„ÅÑ„ÇãÔºà‰æã, 10Áï™ÁõÆ„ÅÆ„Éï„Ç°„Ç§„É´= videoassetname_000010.jpgÔºâ„ÄÇ„ÇÇ„Åó‰ªäÂõû„ÅÆ„Çà„ÅÜ„Å™Ê©üÊ¢∞ÁöÑ„Å™„É´„Éº„É´„Åå„Å™„ÅÑÂ†¥Âêà„ÅØ„Éï„É¨„Éº„É†Áî®ÁîªÂÉè„Éï„Ç°„Ç§„É´Âêç„Å®ÊôÇÈñì„ÅÆ„Éû„ÉÉ„Éî„É≥„Ç∞„ÅåÂøÖË¶Å„Å®„Å™„Çã„ÄÇ\n„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å®Â≠óÂπï„ÅÆÂÜçÁîü„ÅØ„Äå„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÈü≥Â£∞Ë™çË≠ò„Éá„É¢„Äç„Åß„ÇÇÁ¥π‰ªã„Åó„Åü„Çà„ÅÜ„Å´HTML5„ÅÆtrack„Çø„Ç∞„Ç®„É¨„É°„É≥„Éà„Å´„Çà„Çã„Éì„Éá„Ç™„Éï„Ç°„Ç§„É´„ÅÆÂ≠óÂπïË°®Á§∫Ê©üËÉΩ‰Ωø„Å£„Å¶‰∫∫Áâ©Âêç„ÅÆÂ≠óÂπïË°®Á§∫„ÇíÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÄÇÊú¨„Éá„É¢„Åß„ÅØHTML5„Å´‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´„Éì„Éá„Ç™„Éï„Ç°„Ç§„É´ÔºàMP4Ôºâ„ÇíVideo„ÇΩ„Éº„Çπ„Å®„Åó„Å¶track„Ç®„É¨„É°„É≥„Éà„Å´WebVTT„Éï„Ç°„Ç§„É´Ôºàbuild2016keynote.vttÔºâ„ÇíÊåáÂÆö„Åó„Å¶„ÅÑ„Çã„ÄÇ\n\u0026lt;video id=\u0026#34;Video1\u0026#34; controls autoplay width=\u0026#34;600\u0026#34;\u0026gt; \u0026lt;source src=\u0026#34;KEY01_VideoThumbnail.mp4\u0026#34; srclang=\u0026#34;en\u0026#34; type=\u0026#34;video/mp4\u0026#34;\u0026gt; \u0026lt;track id=\u0026#34;trackJA\u0026#34; src=\u0026#34;build2016keynote.vtt\u0026#34; kind=\u0026#34;captions\u0026#34; srclang=\u0026#34;ja\u0026#34; label=\u0026#34;Person Name\u0026#34; default\u0026gt; \u0026lt;/video\u0026gt; „Éá„É¢„Éá„Éº„Çø‰ΩúÊàêÊâãÈ†Ü Github„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éö„Éº„Ç∏VideoFramesFaceRecognition-Python„ÅÆ1. Preparation„Å®2. Batch execution„ÇíÂÆüÊñΩ„ÅÑ„Åü„Å†„Åë„Çå„Å∞Face API„ÅßË≠òÂà•„Åó„ÅüÂêÑ„Éï„É¨„Éº„É†„Åî„Å®„ÅÆ‰∫∫Áâ©Âêç„ÇíÂÖÉ„Å´Â≠óÂπï„Éá„Éº„Çø*.vtt„Éï„Ç°„Ç§„É´„ÅåÁîüÊàê„Åï„Çå„Éá„É¢„Éö„Éº„Ç∏Ë°®Á§∫„ÅÆ„Åü„ÇÅ„ÅÆÊ∫ñÂÇô„ÅØÂÆå‰∫Ü„Åô„Çã„ÄÇÊúÄÂæå„Å´Ë°®Á§∫Áî®„ÅÆÈùôÁöÑ„Éö„Éº„Ç∏„ÇíÁîüÊàê„Åô„Çå„Å∞ÂÆå‰∫Ü„ÄÇÊú¨„Éá„É¢„ÅÆË°®Á§∫Áî®„Éö„Éº„Ç∏„Éá„Éº„Çø„ÅØ„Åì„Å°„Çâ„Åß„ÄÅÂü∫Êú¨ÁöÑ„Å´index.html„ÅÆÂ§âÊõ¥„ÅÆ„Åø„Åß„ÅÑ„Åë„Çã„ÅØ„Åö„ÄÇ\nÊú¨„Éá„É¢„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å´„Å§„ÅÑ„Å¶‰Ωï„ÅãÂïèÈ°å„ÇíÁô∫Ë¶ã„Åó„ÅüÂ†¥Âêà„ÅØ„Åì„Å°„Çâ„ÅÆGithub Issue„Éö„Éº„Ç∏„Å´Issue„Å®„Åó„Å¶ÁôªÈå≤„ÅÑ„Åü„Å†„Åë„Çã„Å®Âπ∏„ÅÑ„Åß„ÅÇ„Çã„ÄÇ\nAzure Media Analytics Face Detector„ÇíÊ¥ªÁî®„Åó„ÅüÂá¶ÁêÜ„ÅÆÂäπÁéáÂåñ ‰ªäÂõû„ÅÆ‰∫∫Áâ©Ë≠òÂà•„Åß„ÅØ„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÂÖ®„Å¶„ÅÆ„Éï„É¨„Éº„É†„Å´ÂØæ„Åó„Å¶Face API„Çí‰Ωø„Å£„Å¶È°îÊ§úÂá∫Âá¶ÁêÜ„ÇíË°å„Å£„Å¶„ÅÑ„Çã„Åå„ÄÅ„Åì„Çå„Åß„ÅØÈ°îÂá∫Áèæ„Éï„É¨„Éº„É†„ÅåÂ∞ë„Å™„ÅÑ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÂ†¥Âêà„Å´„ÅØÁÑ°ÈßÑ„Å™Face API„É™„ÇØ„Ç®„Çπ„Éà„ÅåÂ§ßÈáè„Å´Áô∫Áîü„Åó„Å¶„Åó„Åæ„ÅÜ„Åü„ÇÅÂäπÁéáÁöÑ„Å™Âá¶ÁêÜ„Å®„ÅØË®Ä„Åà„Å™„ÅÑ„ÄÇ„Å®„ÅÑ„ÅÜ„Åì„Å®„Åß„ÄÅ„Åì„Åì„Åß„ÅØAzure Media Face Detector„ÇíÊ¥ªÁî®„Åó„Å¶Âá¶ÁêÜ„ÇíÂäπÁéáÂåñ„Åô„ÇãÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åó„Åü„ÅÑ„ÄÇ\nAzure Media Face Detector„ÅØAzure Media Services„ÅÆ„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ(MP)„ÅÆÔºë„Å§„Åß„ÄÅ„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åã„ÇâÈ°î„ÅÆÊ§úÂá∫„ÇÑÊÑüÊÉÖ„ÅÆÊ§úÂá∫„Çí„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇÊÆãÂøµ„Å™„Åå„ÇâAzure Media Face Detector„ÅØFace API„ÅÆ„Çà„ÅÜ„Å´È°î„ÅÆË≠òÂà•„ÇíË°å„ÅÜ„Åì„Å®„ÅØ„Åß„Åç„Å™„ÅÑ„ÇÇ„ÅÆ„ÅÆ„ÄÅ„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åã„ÇâÁõ¥Êé•È°î„ÇíÊ§úÂá∫„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÅÂç≥„Å°„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åã„ÇâÁõ¥Êé•È°î„ÅåÂ≠òÂú®„Åô„Çã„Éï„É¨„Éº„É†„ÇíÁâπÂÆö„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ„Çà„Å£„Å¶„ÄÅ„Åì„ÅÆÊ©üËÉΩ„ÇíÂà©Áî®„Åó„Å¶‰∏ÄÊó¶Azure Media Face Detector„ÅßÈ°î„ÅåÊ§úÂá∫„Åï„Çå„Åü„Éï„É¨„Éº„É†„ÅÆ„Åø„Å´Áµû„ÇäËæº„Çì„Åß„Åã„ÇâFace API„Çí‰Ωø„Å£„Å¶„Éï„É¨„Éº„É†„ÅÆÈùôÊ≠¢ÁîªÂÉè„Å´ÂØæ„Åó„Å¶È°îÊ§úÂá∫„ÉªÈ°îË≠òÂà•„ÇíË°å„ÅÜ„Åì„Å®„ÅßÁÑ°ÈßÑ„Å™Face API„É™„ÇØ„Ç®„Çπ„Éà„ÇíÊ∏õ„Çâ„Åó„Å¶Âá¶ÁêÜ„ÅÆÂäπÁéáÂåñ„ÇíÂõ≥„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇÂá¶ÁêÜ„Éï„É≠„Éº„Å®„Åó„Å¶„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å™„Ç§„É°„Éº„Ç∏„ÄÇ\n„Åä„Åæ„Åë: Video Summarization „Éá„É¢„Éö„Éº„Ç∏„Çí„Åø„Å¶„ÅÑ„Åü„Å†„Åè„Å®„ÅäÂàÜ„Åã„Çä„ÅÆ„Çà„ÅÜ„Å´‰ªäÂõû„ÅÆ„Éá„É¢„Åß„ÅØ3ÂàÜ„ÅÆ„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÈ°åÊùê„Å®„Åó„Å¶„ÅÑ„Çã„Åå„ÄÅÂÖÉ„Éç„Çø„ÅØChannel9„ÅßÂÖ¨Èñã„Åï„Çå„Å¶„ÅÑ„ÇãË®à138ÂàÜ„ÅÆBuild 2016„ÅÆ„Ç≠„Éº„Éé„Éº„Éà„Çª„ÉÉ„Ç∑„Éß„É≥„Åß„ÅÇ„Çã„ÄÇ„Åì„ÅÆ„Ç≠„Éº„Éé„Éº„Éà„ÅÆ„Çª„ÉÉ„Ç∑„Éß„É≥„ÅØ„Éá„É¢„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å®„Åó„Å¶„ÅØ„ÅÇ„Åæ„Çä„Å´Èï∑„Åã„Å£„Åü„ÅÆ„Åß„Åì„Çå„ÇíAzure Media Video Thumbnails„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„ÇµÔºàMPÔºâ„Çí‰Ωø„Å£„Å¶3ÂàÜ„Å´Ë¶ÅÁ¥Ñ„Åó„Å¶„ÅÑ„Çã„ÄÇAzure Media Video Thumbnails„ÅØ„Ç¢„É´„Ç¥„É™„Ç∫„É†„Éô„Éº„Çπ„ÅßÁâπÂæ¥„Ç∑„Éº„É≥„ÅÆÊ§úÂá∫„Å®„Åù„Çå„Çâ„ÇíÁµêÂêàÔºà„Çµ„Éñ„ÇØ„É™„ÉÉ„ÉóÔºâ„Åó„Å¶„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÊåáÂÆö„Åó„ÅüÈï∑„Åï„Å´Ë¶ÅÁ¥Ñ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„ÇãMP„Åß„ÄÅÁèæÂú®Public Preview„É™„É™„Éº„Çπ‰∏≠(2016Âπ¥12ÊúàÁèæÂú®)„ÄÇ\nÂèÇËÄÉ„Åæ„Åß„Å´„ÄÅË¶ÅÁ¥ÑÔºà3ÂàÜ:180ÁßíÔºâ„Å´‰ΩøÁî®„Åó„ÅüAzure Media Video Thumbnails„ÅÆ„Çø„Çπ„ÇØ„Éó„É™„Çª„ÉÉ„Éà„ÅØ‰ª•‰∏ã„ÅÆÈÄö„ÇäÔºö\n{ \u0026#34;version\u0026#34;: \u0026#34;1.0\u0026#34;, \u0026#34;options\u0026#34;: { \u0026#34;outputAudio\u0026#34;: \u0026#34;true\u0026#34;, \u0026#34;maxMotionThumbnailDurationInSecs\u0026#34;: \u0026#34;180\u0026#34;, \u0026#34;fadeInFadeOut\u0026#34;: \u0026#34;true\u0026#34; } } END\n","permalink":"https://unofficialism.info/posts/azure-media-cognitive-demos-video-frames-face-recognition/","summary":"ÈÅéÂéª„Å´Êú¨„Éñ„É≠„Ç∞„Åß„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÂàá„ÇäÂè£„Å®„Åó„ÅüÈü≥Â£∞Ë™çË≠ò„ÇÑOCRÊäÄË°ì„ÇíÂà©Áî®„Åó„Åü„Éá„É¢„ÇíÁ¥π‰ªã„Åó„Åü„Åå„ÄÅ„Åì„Åì„Åß„ÅØ„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆ‰∏≠„ÅÆ‰∫∫Áâ©Âá∫ÁèæÁÆáÊâÄ„Å´ÈÄ£Âãï„Åó„Å¶‰∫∫Áâ©Âêç„ÇíÂ≠óÂπï„ÅßË°®Á§∫„Åï„Åõ„Çã„Éá„É¢„Å®„Åù„ÅÆÂÆüË£ÖÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åó„Åü„ÅÑ„ÄÇ‰∫∫Áâ©Ë≠òÂà•„Å´„ÅØAzure„ÅÆCognitive Services„ÅÆFace API„Çí‰Ωø„Å£„Å¶„ÅÑ„Å¶„ÄÅ„Åì„Çå„ÅßÂãïÁîª„ÅÆ‰∏≠„Å´Âá∫Áèæ„Åô„ÇãÈ°î„ÅÆÊ§úÂá∫„ÇíË°å„ÅÑ„ÄÅ‰∫à„ÇÅÁôªÈå≤„Åó„Å¶„ÅÑ„Çã‰∫∫Áâ©„É™„Çπ„Éà„Å®„ÅÆ„Éû„ÉÉ„ÉÅ„É≥„Ç∞„Å´„Çà„ÇäÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÄÇ Cognitive Serivces„Å®„ÅØË¶ñË¶ö„ÄÅÈü≥Â£∞„ÄÅË®ÄË™û„ÄÅÁü•Ë≠ò„Å™„Å©„Éû„Ç§„ÇØ„É≠„ÇΩ„Éï„Éà„Åå„Åì„Çå„Åæ„ÅßÁ†îÁ©∂„ÇíÈÄö„Åò„Å¶ÈñãÁô∫„Åó„Å¶„Åç„Åü„Åï„Åæ„Åñ„Åæ„Å™Ë¶ÅÁ¥†ÊäÄË°ì„ÇíAPI„Å®„Åó„Å¶Êèê‰æõ„Åó„Å¶„ÅÑ„Çã„Çµ„Éº„Éì„Çπ„ÅÆ„Åì„Å®„Åß„ÄÅÊúÄËøëÂ∑∑„Åß‰∫∫Â∑•Áü•ËÉΩÔºàAIÔºâ„Å†„Å®„Åã„Ç§„É≥„ÉÜ„É™„Ç∏„Çß„É≥„Çπ„Å®„Åã„ÅÑ„ÅÜ„Ç≠„Éº„ÉØ„Éº„Éâ„Çí„Çà„ÅèËÄ≥„Å´„Åô„Çã„ÅÆ„Åß„ÅØ„Å™„ÅÑ„Åã„Å®ÊÄù„ÅÜ„ÅåAzureÂà©Áî®„Ç∑„Éä„É™„Ç™„Åß„Åù„ÅÜ„ÅÑ„Å£„Åü„Ç§„É≥„ÉÜ„É™„Ç∏„Çß„É≥„ÇπÔºàÁü•ËÉΩ/Áü•ÊÄßÔºâ„ÇíÂÖº„Å≠ÂÇô„Åà„Åü„Ç¢„Éó„É™„Çí‰Ωú„ÇãÂ†¥Âêà„ÅØÈñìÈÅï„ÅÑ„Å™„Åè‰∏≠Ê†∏„Å®„Å™„Çã„Çµ„Éº„Éì„Çπ„ÅÆ1„Å§„Åß„ÅÇ„Çã„ÄÇFace API„ÅØ„Åù„ÅÆ‰∏≠„Åß„ÇÇÈ°î„ÅÆÊ§úÂá∫„ÉªË≠òÂà•„ÇÑ„ÄÅÈ°î„Å´„Åæ„Å§„Çè„ÇãÊÑüÊÉÖ„ÄÅÁâπÂæ¥„Å™„Å©„É°„Çø„Éá„Éº„ÇøÊäΩÂá∫„Å´ÁâπÂåñ„Åó„ÅüAPI„Åß„ÅÇ„Çã„ÄÇ\ndemo site source code ‰∏ªË¶Å„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„Å®Ê©üËÉΩ ‰∏ãÂõ≥„ÅØ‰ªäÂõû„ÅÆ„Éá„É¢‰ΩúÊàê„ÅÆ„Åü„ÇÅ„Å´Ë°å„Å£„Å¶„ÅÑ„ÇãÂá¶ÁêÜ„Éï„É≠„Éº„Å®‰∏ªË¶Å„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„ÇíË°®„Åó„Å¶„ÅÑ„Çã„ÄÇ„ÇÑ„Å£„Å¶„ÅÑ„Çã„Åì„Å®„ÅØÂ§ß„Åç„ÅèÂàÜ„Åë„Å¶3„Å§: (1) ÂãïÁîª„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíAzure Media Encoder Standard„Çí‰Ωø„Å£„Å¶„Éï„É¨„Éº„É†„Åî„Å®„ÅÆÈùôÊ≠¢ÁîªÂÉè„ÅÆ‰ΩúÊàê, (2) Cognitive Services„ÅÆFace API„Çí‰Ωø„Å£„Å¶1„Çà„ÇäÂæó„Çâ„Çå„ÅüÈùôÊ≠¢ÁîªÂÉè„Åã„ÇâÈ°î„ÅÆÊ§úÂá∫„ÇíË°å„ÅÑ‰∫à„ÇÅÁôªÈå≤„Åó„Å¶„ÅÑ„Çã‰∫∫Áâ©„É™„Çπ„Éà„Å®„Éû„ÉÉ„ÉÅ„É≥„Ç∞ÔºàÊúÄ„ÇÇÈ°û‰ººÂ∫¶„ÅåÈ´ò„ÅÑ„ÇÇ„ÅÆ„ÇíÊú¨‰∫∫„Å®„Åø„Å™„ÅôÔºâ„Åó„Å¶‰∫∫Áâ©„ÇíË≠òÂà•, (3) 2„ÅßÂæó„Çâ„Çå„ÅüÂêÑ„Éï„É¨„Éº„É†‰∏≠„ÅÆ‰∫∫Áâ©ÊÉÖÂ†±„ÇíÊôÇÈñìÈ†Ü„Å´‰∏¶„Åπ„Å¶Â≠óÂπï(Closed Caption)Áî®„ÅÆ„Éá„Éº„Çø„Éï„Ç°„Ç§„É´„ÇíÁîüÊàê„ÄÇ‰ª•‰∏ã„ÄÅÂêÑÂá¶ÁêÜ„ÅÆË©≥Á¥∞„Å´„Å§„ÅÑ„Å¶Ë™¨Êòé„Åô„Çã„ÄÇ\n1. Azure Media Encoder Standard„Åß„Éï„É¨„Éº„É†„Åî„Å®„ÅÆÈùôÊ≠¢ÁîªÁîüÊàê ÊÆãÂøµ„Å™„Åå„ÇâFace API„ÅØ„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åã„ÇâÁõ¥Êé•È°îÊ§úÂá∫„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Å™„ÅÑ„Åü„ÇÅ„ÄÅ‰∏ÄÊó¶„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åã„ÇâÂêÑ„Éï„É¨„Éº„É†„Åî„Å®„ÅÆÈùôÊ≠¢Áîª„ÇíÁîüÊàê„Åó„Å¶„Åù„ÅÆÈùôÊ≠¢Áîª„ÇíÂØæË±°„Å´Âá¶ÁêÜ„ÇíË°å„ÅÜÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ„Åì„Åì„Åß„ÅØÂêÑ„Éï„É¨„Éº„É†„Åî„Å®„ÅÆÈùôÊ≠¢ÁîªÁîüÊàê„Å´Azure Media Encoder StandardÔºàMESÔºâ„ÇíÂà©Áî®„Åô„Çã„ÄÇMES„Çí‰Ωø„ÅÜ„Åì„Å®„Åß„Ç®„É≥„Ç≥„Éº„Éâ„Çø„Çπ„ÇØ„Å®„Åó„Å¶„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å´ÂØæ„Åó„Å¶Êßò„ÄÖ„Å™Âá¶ÁêÜ„ÇíË°å„ÅÜ„Åì„Å®„Åå„Åß„Åç„Çã„ÅÆ„Å†„Åå„ÄÅMES„Å´„ÅØ„Åù„ÅÆ„Ç®„É≥„Ç≥„Éº„Éâ„Çø„Çπ„ÇØ„ÅÆÔºë„Å§„Å®„Åó„Å¶„Çµ„É†„Éç„Ç§„É´ÁîüÊàê„ÅÆ„Åü„ÇÅ„ÅÆ„Çø„Çπ„ÇØ„ÅåÁî®ÊÑè„Åï„Çå„Å¶„Åä„Çä„ÄÅ‰ªäÂõû„ÅØ„Åì„ÅÆ„Çµ„É†„Éç„Éº„É´ÁîüÊàê„Çø„Çπ„ÇØ„ÇíÂà©Áî®„Åô„Çã„ÄÇ‰ªñ„ÅÆ„Ç®„É≥„Ç≥„Éº„Éâ„Çø„Çπ„ÇØÂêåÊßò„Å´„Çµ„É†„Éç„Ç§„É´ÁîüÊàê„Çø„Çπ„ÇØ„Å´„Å§„ÅÑ„Å¶„ÇÇ„Éó„É™„Çª„ÉÉ„Éà„Å®Âëº„Å∞„Çå„Çã„Ç®„É≥„Ç≥„Éº„Éâ„Å´ÂøÖË¶Å„Å™ÊÉÖÂ†±„ÇíË®òËø∞„Åó„Åü XML „Åæ„Åü„ÅØ JSONÂΩ¢Âºè„Éï„Ç°„Ç§„É´„ÇíÁî®ÊÑè„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ‰ªäÂõû„ÅØ1Áßí„Éï„É¨„Éº„É†„Åî„Å®„Å´JPEGÂΩ¢Âºè„ÅÆÈùôÊ≠¢ÁîªÔºà„Çµ„É†„Éç„Ç§„É´Ôºâ„ÇíÁîüÊàê„Åô„Çã„Åü„ÇÅ„Å´Ê¨°„ÅÆ„Çà„ÅÜ„Å™„Éó„É™„Çª„ÉÉ„ÉàÔºàamsmp-thumbnail-config.jsonÔºâ„ÇíÁî®ÊÑè„Åó„Åü„ÄÇ\n{ \u0026#34;Version\u0026#34;: 1.0, \u0026#34;Codecs\u0026#34;: [ { \u0026#34;Start\u0026#34;: \u0026#34;00:00:00\u0026#34;, \u0026#34;Step\u0026#34;: \u0026#34;00:00:01\u0026#34;, \u0026#34;Type\u0026#34;: \u0026#34;JpgImage\u0026#34;, \u0026#34;JpgLayers\u0026#34;: [ { \u0026#34;Quality\u0026#34;: 90, \u0026#34;Type\u0026#34;: \u0026#34;JpgLayer\u0026#34;, \u0026#34;Width\u0026#34;: 640, \u0026#34;Height\u0026#34;: 360 } ] } ], \u0026#34;Outputs\u0026#34;: [ { \u0026#34;FileName\u0026#34;: \u0026#34;{Basename}_{Index}{Extension}\u0026#34;, \u0026#34;Format\u0026#34;: { \u0026#34;Type\u0026#34;: \u0026#34;JpgFormat\u0026#34; } } ] } MES„Å´„Çà„Çã„Çµ„É†„Éç„Ç§„É´Âá¶ÁêÜÂÆüË°åÊñπÊ≥ï„ÇÑ„Éó„É™„Çª„ÉÉ„Éà„ÅÆË©≥Á¥∞„Å´„Å§„ÅÑ„Å¶„ÅØ„ÄåMedia Encoder Standard „Çí‰ΩøÁî®„Åó„ÅüÈ´òÂ∫¶„Å™„Ç®„É≥„Ç≥„Éº„Éâ„Äç„ÇÑÂêå„Éö„Éº„Ç∏„ÅÆ„Äå„Çµ„É†„Éç„Ç§„É´„ÇíÁîüÊàê„Åô„Çã„ÄçÈ†Ö„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ„ÄÇÂ∞ö„ÄÅ‰ªäÂõû„ÅÆ„Çµ„É†„Éç„Ç§„É´ÁîüÊàê„ÅÆ„Åü„ÇÅ„ÅÆ„Ç®„É≥„Ç≥„Éº„Éá„Ç£„É≥„Ç∞Âá¶ÁêÜ„ÅØÂ∞èÁîüËá™‰Ωú„ÅÆ„Äåazure-media-processor-java„Äç„ÇíÂà©Áî®„Åó„Å¶„Éê„ÉÉ„ÉÅÂÆüË°å„Åó„Å¶„ÅÑ„Çã„ÄÇ","title":"Detecting faces in Video contents using Azure Cognitive Services Face API"},{"content":"In this article, I‚Äôd like to introduces a solution to collect events from various sources and send them into HTTP Trigger function in Azure Functions using fluent-plugin-azurefunctions. Triggers in Azure Functions are event responses used to trigger your custom code. HTTP Trigger functions allow you to respond to HTTP events sent from fluentd and cook them into whatever you want!\n[note] Azure Functions is a (\u0026ldquo;serverless\u0026rdquo;) solution for easily running small pieces of code, or \u0026ldquo;functions,\u0026rdquo; in Azure. Fluentd is an open source data collector, which lets you unify the data collection and consumption for a better use and understanding of data. fluent-plugin-azurefunctions is a fluentd output plugin that enables to collect events into Azure Functions.\nPre-requisites A basic understanding of fluentd - if you\u0026rsquo;re not familiar with fluentd, fluentd quickstart guide is good starting point Azure subscription - you need to have Azure subscription that grants you access to Microsoft Azure services, and under which you can create Azure Functions account. If you don\u0026rsquo;t have yet click here to create it Setup: Azure Functions (HTTP Trigger Function) Create a function (HTTP Trigger). First, you need to have an function app that hosts the execution of your functions in Azure if you don\u0026rsquo;t already have. Once you have an function app, you can create a function. Here are instructions:\nCreate your first Azure Function Azure Functions developer reference A quick-start HTTP trigger function sample is included under examples/function-csharp in Github repository. You simply need to save the code (run.csx) and configuration files (function.json, project.json) in the same Azure function folder. Explaining a little bit about each of files, the function.json file defines the function bindings and other configuration settings. The runtime uses this file to determine the events to monitor and how to pass data into and return data from function execution. The project.json defines packages that the application depends. The run.csx is a core application file where you write your code to process Your jobs. Here is a sample run.csx:\nusing System.Net; using Newtonsoft.Json; public static async Task\u0026lt;HttpResponseMessage\u0026gt; Run(HttpRequestMessage req, TraceWriter log) { log.Info(\u0026#34;C# HTTP trigger function to process fluentd output request.\u0026#34;); log.Info( string.Format(\u0026#34;Dump request:\\n {0}\u0026#34;,req.ToString())); // parse query parameter string payload = req.GetQueryNameValuePairs() .FirstOrDefault(q =\u0026gt; string.Compare(q.Key, \u0026#34;payload\u0026#34;, true) == 0) .Value; // Get request body dynamic data = await req.Content.ReadAsAsync\u0026lt;object\u0026gt;(); if (data.payload == null) { log.Info(\u0026#34;Please pass a payload on the query string or in the request body\u0026#34;); return new HttpResponseMessage(HttpStatusCode.BadRequest); } // Process Your Jobs! dynamic r = JsonConvert.DeserializeObject\u0026lt;dynamic\u0026gt;((string)data.payload); if (r.key1!=null) log.Info(string.Format(\u0026#34;key1={0}\u0026#34;,r.key1)); if (r.key2!=null) log.Info(string.Format(\u0026#34;key2={0}\u0026#34;,r.key2)); if (r.key3!=null) log.Info(string.Format(\u0026#34;key3={0}\u0026#34;,r.key3)); if (r.mytime!=null) log.Info(string.Format(\u0026#34;mytime={0}\u0026#34;,r.mytime)); if (r.mytag!=null) log.Info(string.Format(\u0026#34;mytag={0}\u0026#34;,r.mytag)); return new HttpResponseMessage(HttpStatusCode.OK); } Setup: Fluentd First of all, install Fluentd. The following shows how to install Fluentd using Ruby gem packger but if you are not using Ruby Gem for the installation, please refer to this installation guide where you can find many other ways to install Fluentd on many platforms.\n# install fluentd $ sudo gem install fluentd --no-ri --no-rdoc # create fluent.conf $ fluentd --setup Also, install fluent-plugin-azurefunctions for fluentd aggregator to send collected event data into Azure Functions.\n$ sudo gem install fluent-plugin-azurefunctions Next, configure fluent.conf, a fluentd configuration file as follows. Please refer to this for fluent-plugin-azurefunctions configuration. The following is a sample configuration where the plugin writes only records that are specified by key_names in incoming event stream out to Azure Functions:\n# This is used by event forwarding and the fluent-cat command \u0026lt;source\u0026gt; @type forward @id forward_input \u0026lt;/source\u0026gt; # Send Data to Azure Functions \u0026lt;match azurefunctions.**\u0026gt; @type azurefunctions endpoint AZURE_FUNCTION_ENDPOINT # ex. https://\u0026lt;accountname\u0026gt;.azurewebsites.net/api/\u0026lt;functionname\u0026gt; function_key AZURE_FUNCTION_KEY # ex. aRVQ7Lj0vzDhY0JBYF8gpxYyEBxLwhO51JSC7X5dZFbTvROs7uNg== key_names key1,key2,key3 add_time_field true time_field_name mytime time_format %s localtime true add_tag_field true tag_field_name mytag \u0026lt;/match\u0026gt; [note] If key_names not specified above, all incoming records are posted to Azure Functions (See also this).\nFinally, run fluentd with the fluent.conf that you configure above.\n$ fluentd -c ./fluent.conf -vv \u0026amp; TEST Let\u0026rsquo;s check if test events will be sent to Azure Functions that triggers the HTTP function (let\u0026rsquo;s use the sample function included in Github repo this time). First, generate test events using fluent-cat like this:\necho \u0026#39; { \u0026#34;key1\u0026#34;:\u0026#34;value1\u0026#34;, \u0026#34;key2\u0026#34;:\u0026#34;value2\u0026#34;, \u0026#34;key3\u0026#34;:\u0026#34;value3\u0026#34;}\u0026#39; | fluent-cat azurefunctions.msg As both add_time_field and add_tag_field are enabled, time and tag fields are added to the record that are selected by key_names before posting to Azure Functions, thus actual HTTP Post request body would be like this:\n{ \u0026#34;payload\u0026#34;: \u0026#39;{\u0026#34;key1\u0026#34;:\u0026#34;value1\u0026#34;, \u0026#34;key2\u0026#34;:\u0026#34;value2\u0026#34;, \u0026#34;key3\u0026#34;:\u0026#34;value3\u0026#34;, \u0026#34;mytime\u0026#34;:\u0026#34;1480195100\u0026#34;, \u0026#34;mytag\u0026#34;:\u0026#34;azurefunctions.msg\u0026#34;}\u0026#39; } If events are sent to the function successfully, a HTTP trigger function handles the events and the following logs can be seen in Azure Functions log stream:\n2016-11-26T21:18:55.200 Function started (Id=5392e7ae-3b8e-4f65-9fc1-6ae529cdfe3a) 2016-11-26T21:18:55.200 C# HTTP trigger function to process fluentd output request. 2016-11-26T21:18:55.200 key1=value1 2016-11-26T21:18:55.200 key2=value2 2016-11-26T21:18:55.200 key3=value3 2016-11-26T21:18:55.200 mytime=1480195100 2016-11-26T21:18:55.200 mytag=azurefunctions.msg 2016-11-26T21:18:55.200 Function completed (Success, Id=5392e7ae-3b8e-4f65-9fc1-6ae529cdfe3a) Advanced Senarios 1. Near Real-time processing Function Apps can output messages to different means or data stores. For example, fluentd collects events generated from IoT devices and send them to Azure Function, and the the HTTP trigger function transforms the events and processes the data to store in a persistent storage or to pass them to different means. Here are some of options available at the time of writing:\nStore JSON documents on DocumentDB Send events to Event Hub Send messages to Azure Service Bus Queues Send messages to Azure Storage Queues Store blobs to Azure Blob Storage Push notifications to Notification Hub [Send SMS text messages via Twilio](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-twilio) Send emails via SendGrid 2. Background jobs processing If the jobs are expected to be large long running ones, it\u0026rsquo;s recommended that you refactor them into smaller function sets that work together and return fast responses. For example, you can pass the HTTP trigger payload into a queue to be processed by a queue trigger function. Or if the payload is too big to pass into the queue, you can store them onto Azure Blob storage at first, then pass only limited amount of the data into a queue just to trigger background workers to process the actual work. These approaches allow you to do the actual work asynchronously and return an immediate response.\nLINKS fluent-plugin-azurefunctions Azure Functions Overview Azure functions Triggers and Bindings Azure Functions Best Practices END\n","permalink":"https://unofficialism.info/posts/fluent-plugin-azurefunctions/","summary":"In this article, I‚Äôd like to introduces a solution to collect events from various sources and send them into HTTP Trigger function in Azure Functions using fluent-plugin-azurefunctions. Triggers in Azure Functions are event responses used to trigger your custom code. HTTP Trigger functions allow you to respond to HTTP events sent from fluentd and cook them into whatever you want!\n[note] Azure Functions is a (\u0026ldquo;serverless\u0026rdquo;) solution for easily running small pieces of code, or \u0026ldquo;functions,\u0026rdquo; in Azure.","title":"Collecting events into Azure Functions and triggering your custom code using fluent-plugin-azurefunctions"},{"content":"OCR„Å®„ÅØOptical Character Recognition„ÅÆÁï•„ÅßÊó•Êú¨Ë™û„Å´„Åô„Çã„Å®ÂÖâÂ≠¶ÊñáÂ≠óË™çË≠ò„Å®Ë®≥„Åï„Çå„Å¶„Åä„Çä„ÄÅ„Åñ„Å£„Åè„Çä„Å®ÁîªÂÉè„ÅÆ‰∏≠„ÅÆÊñáÂ≠ó„Çí„ÉÜ„Ç≠„Çπ„Éà„Å´Â§âÊèõ„Åô„ÇãÊäÄË°ì„ÅÆ„Åì„Å®„ÇíÊåá„Åô„ÄÇ„ÉÜ„Ç≠„Çπ„Éà„Å´Â§âÊèõ„Åï„Çå„Çã„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅØÂãò„ÅåÈã≠„ÅÑÁöÜ„Åï„Çì„ÅØ„ÅäÊ∞ó„Å•„Åç„Å†„Å®ÊÄù„ÅÜ„Åå„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„ÅÆÂÖ®ÊñáÊ§úÁ¥¢„Åß„ÅÇ„Å£„Åü„Çä„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„Åã„ÇâÈü≥Â£∞„Å∏„ÅÆÂ§âÊèõ„ÄÅ„Åï„Çâ„Å´„ÅØÊ©üÊ¢∞ÁøªË®≥„Çí‰Ωø„Å£„Å¶Â§öË®ÄË™û„Å∏„ÅÆÂ§âÊèõ„Å®„ÅÑ„Å£„ÅüÂ±ïÈñã„ÅåËÄÉ„Åà„Çâ„Çå„Çã„ÄÇ„Åù„Çì„Å™ÂèØËÉΩÊÄß„ÇíÁßò„ÇÅ„ÅüOCR„Åß„ÅÇ„Çã„Åå„ÄÅ„Åì„Åì„Åß„ÅØ„Åù„ÅÆOCR„ÅÆÊäÄË°ì„Çí‰Ωø„Å£„Å¶„Éì„Éá„Ç™„Éï„Ç°„Ç§„É´„Åã„ÇâÊäΩÂá∫„Åó„Åü„ÉÜ„Ç≠„Çπ„Éà„Éá„Éº„Çø„ÇíÂÖÉ„Å´„Éì„Éá„Ç™„Å´Â≠óÂπïË°®Á§∫„Åó„Åü„Çä„ÄÅÂãïÁîª‰∏≠„Å´Ë°®Á§∫„Åï„Çå„ÇãÊñáÂ≠ó„ÇíÂÖ®ÊñáÊ§úÁ¥¢„Çí„Åô„Çã„Éá„É¢„ÇíÁ¥π‰ªã„Åó„Åü„ÅÑ„ÄÇÂÜÖÂÆπÁöÑ„Å´„ÅØ„ÄåAzure Media \u0026amp; Cognitive„Éá„É¢:Speech-To-Text„Äç„ÅßÁ¥π‰ªã„Åó„Åü„Éá„É¢„ÅÆOCRÁâà„Å®„ÅÑ„Å£„Åü„Å®„Åì„Çç„ÄÇ\ndemo site source code ‰∏ªË¶Å„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„Å®Ê©üËÉΩ Azure Media OCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ„Å´„Çà„Çã„ÉÜ„Ç≠„Çπ„ÉàÊäΩÂá∫ „Åì„ÅÆ„Éá„É¢„Åß„ÅØAzure Media OCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ„Éº(MP)„Çí‰ΩøÁî®„Åó„Å¶„Éì„Éá„Ç™„Éï„Ç°„Ç§„É´ÂÜÖ„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÊ§úÂá∫„Åó„Å¶„ÉÜ„Ç≠„Çπ„Éà„Éï„Ç°„Ç§„É´„ÇíÁîüÊàê„Åó„Å¶„ÅÑ„Çã„ÄÇOCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ„Éº„ÅØÂÖ•Âäõ„Éë„É©„É°„Éº„Çø„Å´„Çà„Çä„Éì„Éá„Ç™Ëß£Êûê„ÅÆÊåôÂãï„ÇíË™øÊï¥„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ‰∏ª„Å™„Éë„É©„É°„Éº„Çø„Å®„Åó„Å¶„ÅØÊ§úÁ¥¢ÂØæË±°„ÉÜ„Ç≠„Çπ„Éà„ÅÆË®ÄË™ûÔºàÊó•Êú¨Ë™û„ÇÇ„Çµ„Éù„Éº„ÉàÔºâ„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„ÅÆÂêë„Åç„ÄÅ„Çµ„É≥„Éó„É™„É≥„Ç∞„É¨„Éº„Éà„ÄÅ„Éì„Éá„Ç™„Éï„É¨„Éº„É†ÂÜÖ„ÅÆ„ÉÜ„Ç≠„Çπ„ÉàÊ§úÂá∫ÂØæË±°„ÅÆ„É™„Éº„Ç∏„Éß„É≥„Åå„ÅÇ„Çã„Åå„ÄÅÊú¨„Éá„É¢„Åß„ÅÆÂÖ•Âäõ„Éë„É©„É°„Éº„ÇøÔºàVideo-OCR-Search-Python/src/ocr-detectregion.jsonÔºâ„ÅØ‰ª•‰∏ã„ÅÆÈÄö„ÇäÊ§úÁ¥¢ÂØæË±°Ë®ÄË™û„ÅØÊó•Êú¨Ë™û„ÄÅ1Áßí„Åä„Åç„ÅÆ„Çµ„É≥„Éó„É™„É≥„Ç∞„É¨„Éº„Éà„ÄÅ„ÉÜ„Ç≠„Çπ„ÉàÊ§úÂá∫ÂØæË±°„ÅÆ„É™„Éº„Ç∏„Éß„É≥„Åã„Çâ„Éì„Éá„Ç™„Éï„É¨„Éº„É†ÂÜÖ„ÅÆ‰∏äÈÉ®1/4„ÇíÁúÅ„ÅèË®≠ÂÆöÔºàÊ§úÂá∫ÂØæË±°„Çí„Éï„É¨„Éº„É†„Éà„ÉÉ„Éó„Åã„Çâ85 pixel‰ª•‰∏ã„ÇíÂØæË±°Ôºâ„Å´„Åó„Å¶„ÅÑ„Çã„ÄÇ\n{ \u0026#34;Version\u0026#34;:\u0026#34;1.0\u0026#34;, \u0026#34;Options\u0026#34;: { \u0026#34;Language\u0026#34;:\u0026#34;Japanese\u0026#34;, \u0026#34;TimeInterval\u0026#34;:\u0026#34;00:00:01.000\u0026#34;, \u0026#34;DetectRegions\u0026#34;: [ {\u0026#34;Left\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;Top\u0026#34;:\u0026#34;85\u0026#34;,\u0026#34;Width\u0026#34;:\u0026#34;1280\u0026#34;,\u0026#34;Height\u0026#34;:\u0026#34;635\u0026#34;} ] } } „Åù„Åó„Å¶„ÄÅAzure Media OCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ„ÅØ„Éì„Éá„Ç™„ÅßÊ§úÂá∫„Åï„Çå„ÅüÊñáÂ≠ó„Çí‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å™Ë°®Á§∫ÊôÇÈñì„Å´Âü∫„Å•„ÅÑ„Å¶„Çª„Ç∞„É°„É≥„ÉàÂåñ„Åï„Çå„ÅüÂΩ¢„ÅßÁµêÊûúÂá∫Âäõ„Åô„Çã„ÄÇÁµêÊûú„Éï„Ç°„Ç§„É´„ÅÆÂÆåÂÖ®Áâà„ÅØ„Åì„Å°„ÇâÔºàazuresubs.jsonÔºâ„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ„ÄÇ\n{ \u0026#34;fragments\u0026#34;: [ { \u0026#34;start\u0026#34;: 0 \u0026#34;interval\u0026#34;: 319319, \u0026#34;duration\u0026#34;: 319319, \u0026#34;events\u0026#34;: [ [ { \u0026#34;language\u0026#34;: \u0026#34;Japanese\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Azure „ÅÆ Â•ë Á¥Ñ ÂÜÖ ÂÆπ „Çí Â§â Êõ¥ „Åô „Çã Microsoft Azure\u0026#34; } ] ] }, { /* fragment1 */ }, { /* fragment2 */ }, ... { /* fragmentN */ } ], \u0026#34;version\u0026#34;: 1, \u0026#34;framerate\u0026#34;: 29.97, \u0026#34;height\u0026#34;: 720, \u0026#34;width\u0026#34;: 1280, \u0026#34;offset\u0026#34;: 0, \u0026#34;timescale\u0026#34;: 30000 } ÂÖ•Âäõ„Éë„É©„É°„Éº„Çø„Å®Âá∫ÂäõÂΩ¢ÂºèÂÖ±„Å´Ë©≥Á¥∞„ÅØ„Åì„Å°„Çâ„ÅÆ„Éâ„Ç≠„É•„É°„É≥„Éà„ÇíÂèÇÁÖß„ÅÑ„Åü„Å†„Åè„Å®„Åó„Å¶Azure Media OCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„ÇµÂà©Áî®„ÅÆÊ≥®ÊÑèÁÇπ„Å®„Åó„Å¶Ê¨°„ÅÆ2„Å§„Åå„ÅÇ„ÇãÔºö\n„ÄåAzure Media OCR Simplified Output„Äç„ÅÆË®ò‰∫ã„Åß„Ç¢„Éä„Ç¶„É≥„Çπ„Åï„Çå„Å¶„ÅÑ„ÇãÈÄö„Çä2016Âπ¥9Êúà„Åî„Çç„Åã„Çâ„Éá„Éï„Ç©„É´„Éà„ÅÆÂá∫ÂäõÂΩ¢Âºè„Åå‰∏äË®ò„Éâ„Ç≠„É•„É°„É≥„Éà„Éö„Éº„Ç∏„Å´„ÅÇ„ÇãË©≥Á¥∞ÂΩ¢Âºè„Åã„Çâ„Ç∑„É≥„Éó„É´ÂΩ¢Âºè„Å´Â§â„Çè„Å£„Å¶„ÅÑ„Çã Azure Media OCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ„Éº(MP)„ÅØÁèæÊôÇÁÇπÔºà2016Âπ¥11Êúà7Êó•Ôºâ„Åß„ÅØÊ≠£Âºè„É™„É™„Éº„Çπ„Åß„ÅØ„Å™„Åè„Éó„É¨„Éì„É•„Éº„É™„É™„Éº„Çπ Â≠óÂπï(Closed Caption)„Éá„Éº„Çø„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Å∏„ÅÆÂ§âÊèõ „Åæ„Åö‰∏äË®òAzure Media OCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ„Éº(MP)„Åã„ÇâÂá∫Âäõ„Åï„Çå„ÅüJSON„Éï„Ç°„Ç§„É´„ÅÆÂÜÖÂÆπ„ÇíÂÖÉ„Å´Â≠óÂπïÁî®„ÅÆ„Éá„Éº„Çø„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Åß„ÅÇ„ÇãWebVTT„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Éï„Ç°„Ç§„É´„ÇíÁîüÊàê„Åó„Å¶„ÅÑ„Çã„ÄÇ„Åù„Åó„Å¶„ÄåAzure Media \u0026amp; Cognitive„Éá„É¢:Speech-To-Text„Äç„Åß„ÇÇÁ¥π‰ªã„Åó„Åü„Çà„ÅÜ„Å´HTML5„ÅÆtrack„Çø„Ç∞„Ç®„É¨„É°„É≥„Éà„Å´„Çà„Çã„Éì„Éá„Ç™„Éï„Ç°„Ç§„É´„ÅÆÂ≠óÂπïË°®Á§∫Ê©üËÉΩ‰Ωø„Å£„Å¶OCR„ÅÆÂÜÖÂÆπ„ÅÆÂ≠óÂπïË°®Á§∫„ÇíÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÄÇÊú¨„Éá„É¢„Åß„ÅØHTML5„Å´‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´ÂãïÁîªÔºàTransferanAzuresubscriptionJP.mp4Ôºâ„ÇíVideo„ÇΩ„Éº„Çπ„Å®„Åó„Å¶track„Ç®„É¨„É°„É≥„Éà„Å´WebVTT„Éï„Ç°„Ç§„É´Ôºàazuresubs.vttÔºâ„ÇíÊåáÂÆö„Åó„Å¶„ÅÑ„Çã„ÄÇ\n\u0026lt;video id=\u0026#34;Video1\u0026#34; controls autoplay width=\u0026#34;600\u0026#34;\u0026gt; \u0026lt;source src=\u0026#34;TransferanAzuresubscriptionJP.mp4\u0026#34; srclang=\u0026#34;en\u0026#34; type=\u0026#34;video/mp4\u0026#34;\u0026gt; \u0026lt;track id=\u0026#34;trackJA\u0026#34; src=\u0026#34;azuresubs.vtt\u0026#34; kind=\u0026#34;captions\u0026#34; srclang=\u0026#34;ja\u0026#34; label=\u0026#34;OCR Subtitle\u0026#34; default\u0026gt; \u0026lt;/video\u0026gt; Azure Search„Å´„Çà„ÇãÂÖ®ÊñáÊ§úÁ¥¢ „Éá„É¢„Éö„Éº„Ç∏‰∏äÈÉ®„Å´„ÅÇ„ÇãÊ§úÁ¥¢Á™ì„Å´„Ç≠„Éº„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶Go„Éú„Çø„É≥„ÇíÊäº„Åô„Å®„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åã„ÇâOCRÊäΩÂá∫„Åï„Çå„Åü„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖÉ„Å´ÁîüÊàê„Åï„Çå„ÅüÂ≠óÂπï„Éá„Éº„Çø„ÇíÂÖ®ÊñáÊ§úÁ¥¢„Åó„Å¶„Ç≠„Éº„ÉØ„Éº„Éâ„Å´„Éû„ÉÉ„ÉÅ„Åó„Åü„ÉÜ„Ç≠„Çπ„Éà„Å®„Åù„ÅÆË°®Á§∫ÊôÇÈñì„Å´Áµû„ÇäËæº„ÇÄ„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ‰ªïÁµÑ„Åø„ÅØ„ÄåAzure Media \u0026amp; Cognitive„Éá„É¢:Speech-To-Text„Äç„Å®ÂÖ®„ÅèÂêå„Åò„Åß„ÄÅAzure Search„Çí‰ΩøÁî®„Åó„Å¶Â≠óÂπï„Éá„Éº„Çø„ÇíËß£Êûê„Åó„Å¶Â≠óÂπïË°®Á§∫ÊôÇÈñì„Å®„Åù„ÅÆÂØæÂøú„ÉÜ„Ç≠„Çπ„Éà„Çí1„Éâ„Ç≠„É•„É°„É≥„Éà„É¨„Ç≥„Éº„Éâ„Å®„Åó„Å¶Azure Search„Å´„Ç§„É≥„Ç∏„Çß„Çπ„Éà„Åó„Å¶„Åù„ÅÆÁîüÊàê„Åï„Çå„Åü„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´ÂØæ„Åó„Å¶„Ç≠„Éº„ÉØ„Éº„Éâ„ÇíÂÖÉ„Å´ÂÖ®ÊñáÊ§úÁ¥¢„Åô„Çã„Åì„Å®„ÅßÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÄÇÊ§úÁ¥¢Áî®„ÅÆ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Çπ„Ç≠„Éº„Éû„ÇÇ„Åæ„Å£„Åü„Åè„Åä„Å™„Åò„ÅßÊ¨°„ÅÆ„Çà„ÅÜ„Å´Â≠óÂπïË°®Á§∫ÊôÇÈñì„Å®„Åù„ÅÆÂØæÂøú„ÉÜ„Ç≠„Çπ„Éà„Çí„É¨„Ç≥„Éº„ÉâÂçò‰Ωç„Å®„Å™„Çã„Çà„ÅÜ„Å´ÂÆöÁæ©„Åó„Å¶„ÅÑ„Çã„ÄÇ\n{ \u0026#34;name\u0026#34;: \u0026#34;ocr\u0026#34;, \u0026#34;fields\u0026#34;: [ { \u0026#34;name\u0026#34;:\u0026#34;id\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;key\u0026#34;: true, \u0026#34;searchable\u0026#34;: false, \u0026#34;filterable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;contentid\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;,\u0026#34;searchable\u0026#34;: false, \u0026#34;filterable\u0026#34;:true, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;beginsec\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.Int32\u0026#34;, \u0026#34;searchable\u0026#34;: false, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:true, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;begin\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;searchable\u0026#34;: false, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;end\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;searchable\u0026#34;: false, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;caption\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;searchable\u0026#34;: true, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false, \u0026#34;analyzer\u0026#34;:\u0026#34;ja.microsoft\u0026#34; } ] } „Éá„É¢„Éá„Éº„Çø‰ΩúÊàêÊâãÈ†Ü Github„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éö„Éº„Ç∏Video-OCR-Search-Python„ÅÆ1. Preparation„Å®2. Batch execution„ÇíÂÆüÊñΩ„ÅÑ„Åü„Å†„Åë„Çå„Å∞OCRÊäΩÂá∫„Åï„Çå„Åü„ÉÜ„Ç≠„Çπ„Éà„ÇíÂÖÉ„Å´Â≠óÂπï„Éá„Éº„Çø*.vtt„Éï„Ç°„Ç§„É´„ÅåÁîüÊàê„Åï„Çå„ÄÅ„Åù„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÅåAzure Search„Å´Ê†ºÁ¥ç„Åï„Çå„Å¶„Éá„É¢„Éö„Éº„Ç∏Ë°®Á§∫„ÅÆ„Åü„ÇÅ„ÅÆÊ∫ñÂÇô„ÅØÂÆå‰∫Ü„Åô„Çã„ÄÇÊúÄÂæå„Å´Ë°®Á§∫Áî®„ÅÆ„Éö„Éº„Ç∏„ÇíÁîüÊàê„Åô„Çå„Å∞ÂÆå‰∫Ü„ÄÇÊú¨„Éá„É¢„ÅÆË°®Á§∫Áî®„Éö„Éº„Ç∏„Éá„Éº„Çø„ÅØ„Åì„Å°„Çâ„Åß„ÄÅÂü∫Êú¨ÁöÑ„Å´index.html„Å®search.js„ÅÆÂ§âÊõ¥„ÅÆ„Åø„Åß„ÅÑ„Åë„Çã„ÅØ„Åö„ÄÇ\nÊú¨„Éá„É¢„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å´„Å§„ÅÑ„Å¶‰Ωï„ÅãÂïèÈ°å„ÇíÁô∫Ë¶ã„Åó„ÅüÂ†¥Âêà„ÅØ„Åì„Å°„Çâ„ÅÆGithub Issue„Éö„Éº„Ç∏„Å´Issue„Å®„Åó„Å¶ÁôªÈå≤„ÅÑ„Åü„Å†„Åë„Çã„Å®Âπ∏„ÅÑ„Åß„ÅÇ„Çã„ÄÇ\nEnjoy Video OCR demo!\n","permalink":"https://unofficialism.info/posts/azure-media-cognitive-demos-video-ocr/","summary":"OCR„Å®„ÅØOptical Character Recognition„ÅÆÁï•„ÅßÊó•Êú¨Ë™û„Å´„Åô„Çã„Å®ÂÖâÂ≠¶ÊñáÂ≠óË™çË≠ò„Å®Ë®≥„Åï„Çå„Å¶„Åä„Çä„ÄÅ„Åñ„Å£„Åè„Çä„Å®ÁîªÂÉè„ÅÆ‰∏≠„ÅÆÊñáÂ≠ó„Çí„ÉÜ„Ç≠„Çπ„Éà„Å´Â§âÊèõ„Åô„ÇãÊäÄË°ì„ÅÆ„Åì„Å®„ÇíÊåá„Åô„ÄÇ„ÉÜ„Ç≠„Çπ„Éà„Å´Â§âÊèõ„Åï„Çå„Çã„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅØÂãò„ÅåÈã≠„ÅÑÁöÜ„Åï„Çì„ÅØ„ÅäÊ∞ó„Å•„Åç„Å†„Å®ÊÄù„ÅÜ„Åå„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„ÅÆÂÖ®ÊñáÊ§úÁ¥¢„Åß„ÅÇ„Å£„Åü„Çä„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„Åã„ÇâÈü≥Â£∞„Å∏„ÅÆÂ§âÊèõ„ÄÅ„Åï„Çâ„Å´„ÅØÊ©üÊ¢∞ÁøªË®≥„Çí‰Ωø„Å£„Å¶Â§öË®ÄË™û„Å∏„ÅÆÂ§âÊèõ„Å®„ÅÑ„Å£„ÅüÂ±ïÈñã„ÅåËÄÉ„Åà„Çâ„Çå„Çã„ÄÇ„Åù„Çì„Å™ÂèØËÉΩÊÄß„ÇíÁßò„ÇÅ„ÅüOCR„Åß„ÅÇ„Çã„Åå„ÄÅ„Åì„Åì„Åß„ÅØ„Åù„ÅÆOCR„ÅÆÊäÄË°ì„Çí‰Ωø„Å£„Å¶„Éì„Éá„Ç™„Éï„Ç°„Ç§„É´„Åã„ÇâÊäΩÂá∫„Åó„Åü„ÉÜ„Ç≠„Çπ„Éà„Éá„Éº„Çø„ÇíÂÖÉ„Å´„Éì„Éá„Ç™„Å´Â≠óÂπïË°®Á§∫„Åó„Åü„Çä„ÄÅÂãïÁîª‰∏≠„Å´Ë°®Á§∫„Åï„Çå„ÇãÊñáÂ≠ó„ÇíÂÖ®ÊñáÊ§úÁ¥¢„Çí„Åô„Çã„Éá„É¢„ÇíÁ¥π‰ªã„Åó„Åü„ÅÑ„ÄÇÂÜÖÂÆπÁöÑ„Å´„ÅØ„ÄåAzure Media \u0026amp; Cognitive„Éá„É¢:Speech-To-Text„Äç„ÅßÁ¥π‰ªã„Åó„Åü„Éá„É¢„ÅÆOCRÁâà„Å®„ÅÑ„Å£„Åü„Å®„Åì„Çç„ÄÇ\ndemo site source code ‰∏ªË¶Å„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„Å®Ê©üËÉΩ Azure Media OCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ„Å´„Çà„Çã„ÉÜ„Ç≠„Çπ„ÉàÊäΩÂá∫ „Åì„ÅÆ„Éá„É¢„Åß„ÅØAzure Media OCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ„Éº(MP)„Çí‰ΩøÁî®„Åó„Å¶„Éì„Éá„Ç™„Éï„Ç°„Ç§„É´ÂÜÖ„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÊ§úÂá∫„Åó„Å¶„ÉÜ„Ç≠„Çπ„Éà„Éï„Ç°„Ç§„É´„ÇíÁîüÊàê„Åó„Å¶„ÅÑ„Çã„ÄÇOCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ„Éº„ÅØÂÖ•Âäõ„Éë„É©„É°„Éº„Çø„Å´„Çà„Çä„Éì„Éá„Ç™Ëß£Êûê„ÅÆÊåôÂãï„ÇíË™øÊï¥„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ‰∏ª„Å™„Éë„É©„É°„Éº„Çø„Å®„Åó„Å¶„ÅØÊ§úÁ¥¢ÂØæË±°„ÉÜ„Ç≠„Çπ„Éà„ÅÆË®ÄË™ûÔºàÊó•Êú¨Ë™û„ÇÇ„Çµ„Éù„Éº„ÉàÔºâ„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„ÅÆÂêë„Åç„ÄÅ„Çµ„É≥„Éó„É™„É≥„Ç∞„É¨„Éº„Éà„ÄÅ„Éì„Éá„Ç™„Éï„É¨„Éº„É†ÂÜÖ„ÅÆ„ÉÜ„Ç≠„Çπ„ÉàÊ§úÂá∫ÂØæË±°„ÅÆ„É™„Éº„Ç∏„Éß„É≥„Åå„ÅÇ„Çã„Åå„ÄÅÊú¨„Éá„É¢„Åß„ÅÆÂÖ•Âäõ„Éë„É©„É°„Éº„ÇøÔºàVideo-OCR-Search-Python/src/ocr-detectregion.jsonÔºâ„ÅØ‰ª•‰∏ã„ÅÆÈÄö„ÇäÊ§úÁ¥¢ÂØæË±°Ë®ÄË™û„ÅØÊó•Êú¨Ë™û„ÄÅ1Áßí„Åä„Åç„ÅÆ„Çµ„É≥„Éó„É™„É≥„Ç∞„É¨„Éº„Éà„ÄÅ„ÉÜ„Ç≠„Çπ„ÉàÊ§úÂá∫ÂØæË±°„ÅÆ„É™„Éº„Ç∏„Éß„É≥„Åã„Çâ„Éì„Éá„Ç™„Éï„É¨„Éº„É†ÂÜÖ„ÅÆ‰∏äÈÉ®1/4„ÇíÁúÅ„ÅèË®≠ÂÆöÔºàÊ§úÂá∫ÂØæË±°„Çí„Éï„É¨„Éº„É†„Éà„ÉÉ„Éó„Åã„Çâ85 pixel‰ª•‰∏ã„ÇíÂØæË±°Ôºâ„Å´„Åó„Å¶„ÅÑ„Çã„ÄÇ\n{ \u0026#34;Version\u0026#34;:\u0026#34;1.0\u0026#34;, \u0026#34;Options\u0026#34;: { \u0026#34;Language\u0026#34;:\u0026#34;Japanese\u0026#34;, \u0026#34;TimeInterval\u0026#34;:\u0026#34;00:00:01.000\u0026#34;, \u0026#34;DetectRegions\u0026#34;: [ {\u0026#34;Left\u0026#34;:\u0026#34;0\u0026#34;,\u0026#34;Top\u0026#34;:\u0026#34;85\u0026#34;,\u0026#34;Width\u0026#34;:\u0026#34;1280\u0026#34;,\u0026#34;Height\u0026#34;:\u0026#34;635\u0026#34;} ] } } „Åù„Åó„Å¶„ÄÅAzure Media OCR„É°„Éá„Ç£„Ç¢„Éó„É≠„Çª„ÉÉ„Çµ„ÅØ„Éì„Éá„Ç™„ÅßÊ§úÂá∫„Åï„Çå„ÅüÊñáÂ≠ó„Çí‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å™Ë°®Á§∫ÊôÇÈñì„Å´Âü∫„Å•„ÅÑ„Å¶„Çª„Ç∞„É°„É≥„ÉàÂåñ„Åï„Çå„ÅüÂΩ¢„ÅßÁµêÊûúÂá∫Âäõ„Åô„Çã„ÄÇÁµêÊûú„Éï„Ç°„Ç§„É´„ÅÆÂÆåÂÖ®Áâà„ÅØ„Åì„Å°„ÇâÔºàazuresubs.jsonÔºâ„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ„ÄÇ\n{ \u0026#34;fragments\u0026#34;: [ { \u0026#34;start\u0026#34;: 0 \u0026#34;interval\u0026#34;: 319319, \u0026#34;duration\u0026#34;: 319319, \u0026#34;events\u0026#34;: [ [ { \u0026#34;language\u0026#34;: \u0026#34;Japanese\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Azure „ÅÆ Â•ë Á¥Ñ ÂÜÖ ÂÆπ „Çí Â§â Êõ¥ „Åô „Çã Microsoft Azure\u0026#34; } ] ] }, { /* fragment1 */ }, { /* fragment2 */ }, .","title":"Video OCR using Azure Media \u0026 Cognitive"},{"content":"„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÈü≥Â£∞Ë™çË≠ò„Ç®„É≥„Ç∏„É≥„Åß„ÉÜ„Ç≠„Çπ„ÉàÂåñ„Åó„Å¶„Åù„Çå„ÇíÂÖÉ„Å´„Çπ„Éî„Éº„ÉÅÊ§úÁ¥¢„Åô„Çã„Éá„É¢„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÁ¥π‰ªã„Åó„Åü„ÅÑ„ÄÇ„Åì„Çå„ÅØÈÅéÂéª„Å´de:code2016„Å®„ÅÑ„ÅÜ„Éû„Ç§„ÇØ„É≠„ÇΩ„Éï„Éà„ÅÆÈñãÁô∫ËÄÖÂêë„Åë„Ç§„Éô„É≥„Éà„ÅßË°å„Å£„Åü„Éñ„É¨„Ç§„ÇØ„Ç¢„Ç¶„Éà„Çª„ÉÉ„Ç∑„Éß„É≥„ÄåDEV-18: Azure Search Deep Dive„Äç„Å´„Å¶Á¥π‰ªã„Åó„Åü„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆ„Çπ„Éî„Éº„ÉÅÊ§úÁ¥¢„Éá„É¢„ÇíÁ∞°Áï•Âåñ„Åó„Å¶ÂÜçÂà©Áî®„Åó„ÇÑ„Åô„ÅÑ„ÇÇ„ÅÆ„Å´„Åó„Åü„ÇÇ„ÅÆ„Åß„ÅÇ„Çã„ÄÇ\ndemo site source code ‰∏ªË¶Å„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„Å®Ê©üËÉΩ Azure Media Indexer 2 Preview„Å´„Çà„ÇãÈü≥Â£∞„Åã„Çâ„ÉÜ„Ç≠„Çπ„ÉàÊäΩÂá∫ „Åì„ÅÆ„Éá„É¢„Åß„ÅØAzure Media Indexer 2 Preview „É°„Éá„Ç£„Ç¢ „Éó„É≠„Çª„ÉÉ„Çµ„Éº (MP)„Çí‰ΩøÁî®„Åó„Å¶„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åã„Çâ„ÉÜ„Ç≠„Çπ„Éà„ÇíÊäΩÂá∫„Åó„Å¶„ÅÑ„Çã„ÄÇ„Åì„ÅÆAzure Media Indexer 2 Preview„ÅØËá™ÁÑ∂Ë®ÄË™ûÂá¶ÁêÜ(NLP)„ÇÑÈü≥Â£∞Ë™çË≠ò„Ç®„É≥„Ç∏„É≥„ÇíÈßÜ‰Ωø„Åó„Å¶„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Çà„ÇäÂ≠óÂπïÁî®„Éá„Éº„ÇøÔºàÊôÇÈñì„ÇÑ„ÉÜ„Ç≠„Çπ„ÉàÔºâ„ÇÑÊ§úÁ¥¢ÂèØËÉΩ„Å´„Åô„Çã„Åü„ÇÅ„ÅÆ„É°„Çø„Éá„Éº„Çø„ÇíÊäΩÂá∫„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇIndexer 2„Å®„ÅÑ„ÅÜÂêçÂâç„ÅÆÈÄö„ÇäÂâç„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„Åß„ÅÇ„ÇãAzure Media Indexer„ÅåÂ≠òÂú®„Åô„Çã„Åå„ÄÅ„Åì„Çå„Å®ÊØîËºÉ„Åô„Çã„Å®„ÄÅAzure Media Indexer 2 Preview„ÅØ„ÄÅ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ‰ΩúÊàê„ÅåÈ´òÈÄüÂåñ„Åï„Çå„ÄÅ„Çà„ÇäÂ§ö„Åè„ÅÆË®ÄË™û„Çí„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„Çã„Åì„Å®„ÅåÁâπÂæ¥„Åß„ÅÇ„Çã„ÄÇ2016Âπ¥11Êúà6Êó•ÊôÇÁÇπ„ÅßËã±Ë™û„ÄÅ„Çπ„Éö„Ç§„É≥Ë™û„ÄÅ„Éï„É©„É≥„ÇπË™û„ÄÅ„Éâ„Ç§„ÉÑË™û„ÄÅ„Ç§„Çø„É™„Ç¢Ë™û„ÄÅ‰∏≠ÂõΩË™û„ÄÅ„Éù„É´„Éà„Ç¨„É´Ë™û„ÄÅ„Ç¢„É©„Éì„Ç¢Ë™û„Å™„Å©„Åå„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„ÇãÔºàÊÆãÂøµ„Å™„Åå„ÇâÊó•Êú¨Ë™û„ÅØ„Åæ„Å†Êú™„Çµ„Éù„Éº„ÉàÔºâ„ÄÇ\n‰∏ã„Ç§„É°„Éº„Ç∏„ÅØAzure Media Indexer 2 (Preview)„ÅßÁîüÊàê„Åï„Çå„ÇãTTML„Å®WebVTT„Å®„ÅÑ„ÅÜ‰ª£Ë°®ÁöÑ„Å™Â≠óÂπï„Éá„Éº„Çø„Éï„Ç©„Éº„Éû„ÉÉ„Éà„ÄÇ\nHTML5„Å®Â≠óÂπï(Closed Caption) HTML5„Å´„ÅØtrack„Çø„Ç∞„Ç®„É¨„É°„É≥„Éà„Çí‰Ωø„Å£„Å¶„Éì„Éá„Ç™„Éï„Ç°„Ç§„É´„Å´Â≠óÂπï„ÇíË°®Á§∫„Åô„ÇãÊ©üËÉΩ„ÅåÊ®ôÊ∫ñÁöÑ„Å´ÂÆüË£Ö„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇÊú¨„Éá„É¢„Åß„ÅØHTML5„Å´‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´ÂãïÁîªÔºàPython_and_node.js_on_Visual_Studio.mp4Ôºâ„ÇíVideo„ÇΩ„Éº„Çπ„Å®„Åó„Å¶track„Ç®„É¨„É°„É≥„Éà„Å´Â≠óÂπïWebVtt„Éï„Ç°„Ç§„É´Ôºàbuild2016breakout.vttÔºâ„ÇíÊåáÂÆö„Åó„Å¶„ÅÑ„Çã„ÄÇ\n\u0026lt;video id=\u0026#34;Video1\u0026#34; controls autoplay width=\u0026#34;600\u0026#34;\u0026gt; \u0026lt;source src=\u0026#34;Python_and_node.js_on_Visual_Studio.mp4\u0026#34; srclang=\u0026#34;en\u0026#34; type=\u0026#34;video/mp4\u0026#34;\u0026gt; \u0026lt;track id=\u0026#34;trackJA\u0026#34; src=\u0026#34;build2016breakout.vtt\u0026#34; kind=\u0026#34;captions\u0026#34; srclang=\u0026#34;ja\u0026#34; label=\u0026#34;Closed Captions\u0026#34; default\u0026gt; \u0026lt;/video\u0026gt; Azure Search„Å´„Çà„ÇãÂÖ®ÊñáÊ§úÁ¥¢ „Éá„É¢„Éö„Éº„Ç∏‰∏äÈÉ®„Å´„ÅÇ„ÇãÊ§úÁ¥¢Á™ì„Å´„Ç≠„Éº„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶Go„Éú„Çø„É≥„ÇíÊäº„Åô„Å®„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÂ≠óÂπï„Éá„Éº„Çø„ÇíÂÖ®ÊñáÊ§úÁ¥¢„Åó„Å¶„Ç≠„Éº„ÉØ„Éº„Éâ„Å´„Éû„ÉÉ„ÉÅ„Åó„Åü„ÉÜ„Ç≠„Çπ„Éà„Å®„Åù„ÅÆË°®Á§∫ÊôÇÈñì„Å´Áµû„ÇäËæº„ÇÄ„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ„Åì„Åì„Åß„ÅØÂÖ®ÊñáÊ§úÁ¥¢„Ç®„É≥„Ç∏„É≥„Å´Azure Search„Çí‰ΩøÁî®„Åó„ÄÅAzure Media Indexer 2 (Preview)„Çà„ÇäÊäΩÂá∫„Åï„Çå„ÅüÂ≠óÂπï„Éá„Éº„Çø„ÇíËß£Êûê„Åó„Å¶Â≠óÂπïË°®Á§∫ÊôÇÈñì„Å®„Åù„ÅÆÂØæÂøú„ÉÜ„Ç≠„Çπ„Éà„Çí1„Éâ„Ç≠„É•„É°„É≥„Éà„É¨„Ç≥„Éº„Éâ„Å®„Åó„Å¶Azure Search„Å´„Ç§„É≥„Ç∏„Çß„Çπ„Éà„Åó„Å¶„Åù„ÅÆÁîüÊàê„Åï„Çå„Åü„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´ÂØæ„Åó„Å¶„Ç≠„Éº„ÉØ„Éº„Éâ„ÇíÂÖÉ„Å´ÂÖ®ÊñáÊ§úÁ¥¢„Åô„Çã„Åì„Å®„ÅßÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÄÇÂ≠óÂπï„Éá„Éº„ÇøÊ§úÁ¥¢Áî®„ÅÆ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Çπ„Ç≠„Éº„Éû„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å´Â≠óÂπïË°®Á§∫ÊôÇÈñì„Å®„Åù„ÅÆÂØæÂøú„ÉÜ„Ç≠„Çπ„Éà„Çí„É¨„Ç≥„Éº„ÉâÂçò‰Ωç„Å®„Å™„Çã„Çà„ÅÜ„Å´ÂÆöÁæ©„Åó„Å¶„ÅÑ„Çã„ÄÇ\n{ \u0026#34;name\u0026#34;: \u0026#34;stt\u0026#34;, \u0026#34;fields\u0026#34;: [ { \u0026#34;name\u0026#34;:\u0026#34;id\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;key\u0026#34;: true, \u0026#34;searchable\u0026#34;: false, \u0026#34;filterable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;contentid\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;,\u0026#34;searchable\u0026#34;: false, \u0026#34;filterable\u0026#34;:true, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;beginsec\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.Int32\u0026#34;, \u0026#34;searchable\u0026#34;: false, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:true, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;begin\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;searchable\u0026#34;: false, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;end\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;searchable\u0026#34;: false, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;caption\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;searchable\u0026#34;: true, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false, \u0026#34;analyzer\u0026#34;:\u0026#34;en.microsoft\u0026#34; } ] } „Éá„É¢„Éá„Éº„Çø‰ΩúÊàêÊâãÈ†Ü Github„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éö„Éº„Ç∏Video-STT-Search-Python„ÅÆ1. Preparation„Å®2. Batch execution„ÇíÂÆüÊñΩ„ÅÑ„Åü„Å†„Åë„Çå„Å∞Â≠óÂπï„Éá„Éº„Çø*.vtt„Éï„Ç°„Ç§„É´„ÅåÁîüÊàê„Åï„Çå„ÄÅ„Åù„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÅåAzure Search„Å´Ê†ºÁ¥ç„Åï„Çå„Å¶„Éá„É¢„Éö„Éº„Ç∏Ë°®Á§∫„ÅÆ„Åü„ÇÅ„ÅÆÊ∫ñÂÇô„ÅØÂÆå‰∫Ü„Åô„Çã„ÄÇÊúÄÂæå„Å´Ë°®Á§∫Áî®„ÅÆ„Éö„Éº„Ç∏„ÇíÁîüÊàê„Åô„Çå„Å∞ÂÆå‰∫Ü„ÄÇÊú¨„Éá„É¢„ÅÆË°®Á§∫Áî®„Éö„Éº„Ç∏„Éá„Éº„Çø„ÅØ„Åì„Å°„Çâ„Åß„ÄÅÂü∫Êú¨ÁöÑ„Å´index.html„Å®search.js„ÅÆÂ§âÊõ¥„ÅÆ„Åø„Åß„ÅÑ„Åë„Çã„ÅØ„Åö„ÄÇ\nÊú¨„Éá„É¢„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å´„Å§„ÅÑ„Å¶‰Ωï„ÅãÂïèÈ°å„ÇíÁô∫Ë¶ã„Åó„ÅüÂ†¥Âêà„ÅØ„Åì„Å°„Çâ„ÅÆGithub Issue„Éö„Éº„Ç∏„Å´Issue„Å®„Åó„Å¶ÁôªÈå≤„ÅÑ„Åü„Å†„Åë„Çã„Å®Âπ∏„ÅÑ„Åß„ÅÇ„Çã„ÄÇ\nEnjoy Video Speech-to-text demo!\n","permalink":"https://unofficialism.info/posts/azure-media-cognitive-demos-video-ocr-speech-to-text/","summary":"„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÈü≥Â£∞Ë™çË≠ò„Ç®„É≥„Ç∏„É≥„Åß„ÉÜ„Ç≠„Çπ„ÉàÂåñ„Åó„Å¶„Åù„Çå„ÇíÂÖÉ„Å´„Çπ„Éî„Éº„ÉÅÊ§úÁ¥¢„Åô„Çã„Éá„É¢„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÁ¥π‰ªã„Åó„Åü„ÅÑ„ÄÇ„Åì„Çå„ÅØÈÅéÂéª„Å´de:code2016„Å®„ÅÑ„ÅÜ„Éû„Ç§„ÇØ„É≠„ÇΩ„Éï„Éà„ÅÆÈñãÁô∫ËÄÖÂêë„Åë„Ç§„Éô„É≥„Éà„ÅßË°å„Å£„Åü„Éñ„É¨„Ç§„ÇØ„Ç¢„Ç¶„Éà„Çª„ÉÉ„Ç∑„Éß„É≥„ÄåDEV-18: Azure Search Deep Dive„Äç„Å´„Å¶Á¥π‰ªã„Åó„Åü„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆ„Çπ„Éî„Éº„ÉÅÊ§úÁ¥¢„Éá„É¢„ÇíÁ∞°Áï•Âåñ„Åó„Å¶ÂÜçÂà©Áî®„Åó„ÇÑ„Åô„ÅÑ„ÇÇ„ÅÆ„Å´„Åó„Åü„ÇÇ„ÅÆ„Åß„ÅÇ„Çã„ÄÇ\ndemo site source code ‰∏ªË¶Å„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº„Å®Ê©üËÉΩ Azure Media Indexer 2 Preview„Å´„Çà„ÇãÈü≥Â£∞„Åã„Çâ„ÉÜ„Ç≠„Çπ„ÉàÊäΩÂá∫ „Åì„ÅÆ„Éá„É¢„Åß„ÅØAzure Media Indexer 2 Preview „É°„Éá„Ç£„Ç¢ „Éó„É≠„Çª„ÉÉ„Çµ„Éº (MP)„Çí‰ΩøÁî®„Åó„Å¶„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åã„Çâ„ÉÜ„Ç≠„Çπ„Éà„ÇíÊäΩÂá∫„Åó„Å¶„ÅÑ„Çã„ÄÇ„Åì„ÅÆAzure Media Indexer 2 Preview„ÅØËá™ÁÑ∂Ë®ÄË™ûÂá¶ÁêÜ(NLP)„ÇÑÈü≥Â£∞Ë™çË≠ò„Ç®„É≥„Ç∏„É≥„ÇíÈßÜ‰Ωø„Åó„Å¶„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Çà„ÇäÂ≠óÂπïÁî®„Éá„Éº„ÇøÔºàÊôÇÈñì„ÇÑ„ÉÜ„Ç≠„Çπ„ÉàÔºâ„ÇÑÊ§úÁ¥¢ÂèØËÉΩ„Å´„Åô„Çã„Åü„ÇÅ„ÅÆ„É°„Çø„Éá„Éº„Çø„ÇíÊäΩÂá∫„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇIndexer 2„Å®„ÅÑ„ÅÜÂêçÂâç„ÅÆÈÄö„ÇäÂâç„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„Åß„ÅÇ„ÇãAzure Media Indexer„ÅåÂ≠òÂú®„Åô„Çã„Åå„ÄÅ„Åì„Çå„Å®ÊØîËºÉ„Åô„Çã„Å®„ÄÅAzure Media Indexer 2 Preview„ÅØ„ÄÅ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ‰ΩúÊàê„ÅåÈ´òÈÄüÂåñ„Åï„Çå„ÄÅ„Çà„ÇäÂ§ö„Åè„ÅÆË®ÄË™û„Çí„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„Çã„Åì„Å®„ÅåÁâπÂæ¥„Åß„ÅÇ„Çã„ÄÇ2016Âπ¥11Êúà6Êó•ÊôÇÁÇπ„ÅßËã±Ë™û„ÄÅ„Çπ„Éö„Ç§„É≥Ë™û„ÄÅ„Éï„É©„É≥„ÇπË™û„ÄÅ„Éâ„Ç§„ÉÑË™û„ÄÅ„Ç§„Çø„É™„Ç¢Ë™û„ÄÅ‰∏≠ÂõΩË™û„ÄÅ„Éù„É´„Éà„Ç¨„É´Ë™û„ÄÅ„Ç¢„É©„Éì„Ç¢Ë™û„Å™„Å©„Åå„Çµ„Éù„Éº„Éà„Åï„Çå„Å¶„ÅÑ„ÇãÔºàÊÆãÂøµ„Å™„Åå„ÇâÊó•Êú¨Ë™û„ÅØ„Åæ„Å†Êú™„Çµ„Éù„Éº„ÉàÔºâ„ÄÇ\n‰∏ã„Ç§„É°„Éº„Ç∏„ÅØAzure Media Indexer 2 (Preview)„ÅßÁîüÊàê„Åï„Çå„ÇãTTML„Å®WebVTT„Å®„ÅÑ„ÅÜ‰ª£Ë°®ÁöÑ„Å™Â≠óÂπï„Éá„Éº„Çø„Éï„Ç©„Éº„Éû„ÉÉ„Éà„ÄÇ\nHTML5„Å®Â≠óÂπï(Closed Caption) HTML5„Å´„ÅØtrack„Çø„Ç∞„Ç®„É¨„É°„É≥„Éà„Çí‰Ωø„Å£„Å¶„Éì„Éá„Ç™„Éï„Ç°„Ç§„É´„Å´Â≠óÂπï„ÇíË°®Á§∫„Åô„ÇãÊ©üËÉΩ„ÅåÊ®ôÊ∫ñÁöÑ„Å´ÂÆüË£Ö„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇÊú¨„Éá„É¢„Åß„ÅØHTML5„Å´‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´ÂãïÁîªÔºàPython_and_node.js_on_Visual_Studio.mp4Ôºâ„ÇíVideo„ÇΩ„Éº„Çπ„Å®„Åó„Å¶track„Ç®„É¨„É°„É≥„Éà„Å´Â≠óÂπïWebVtt„Éï„Ç°„Ç§„É´Ôºàbuild2016breakout.vttÔºâ„ÇíÊåáÂÆö„Åó„Å¶„ÅÑ„Çã„ÄÇ\n\u0026lt;video id=\u0026#34;Video1\u0026#34; controls autoplay width=\u0026#34;600\u0026#34;\u0026gt; \u0026lt;source src=\u0026#34;Python_and_node.js_on_Visual_Studio.mp4\u0026#34; srclang=\u0026#34;en\u0026#34; type=\u0026#34;video/mp4\u0026#34;\u0026gt; \u0026lt;track id=\u0026#34;trackJA\u0026#34; src=\u0026#34;build2016breakout.vtt\u0026#34; kind=\u0026#34;captions\u0026#34; srclang=\u0026#34;ja\u0026#34; label=\u0026#34;Closed Captions\u0026#34; default\u0026gt; \u0026lt;/video\u0026gt; Azure Search„Å´„Çà„ÇãÂÖ®ÊñáÊ§úÁ¥¢ „Éá„É¢„Éö„Éº„Ç∏‰∏äÈÉ®„Å´„ÅÇ„ÇãÊ§úÁ¥¢Á™ì„Å´„Ç≠„Éº„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶Go„Éú„Çø„É≥„ÇíÊäº„Åô„Å®„Éì„Éá„Ç™„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÂ≠óÂπï„Éá„Éº„Çø„ÇíÂÖ®ÊñáÊ§úÁ¥¢„Åó„Å¶„Ç≠„Éº„ÉØ„Éº„Éâ„Å´„Éû„ÉÉ„ÉÅ„Åó„Åü„ÉÜ„Ç≠„Çπ„Éà„Å®„Åù„ÅÆË°®Á§∫ÊôÇÈñì„Å´Áµû„ÇäËæº„ÇÄ„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ„Åì„Åì„Åß„ÅØÂÖ®ÊñáÊ§úÁ¥¢„Ç®„É≥„Ç∏„É≥„Å´Azure Search„Çí‰ΩøÁî®„Åó„ÄÅAzure Media Indexer 2 (Preview)„Çà„ÇäÊäΩÂá∫„Åï„Çå„ÅüÂ≠óÂπï„Éá„Éº„Çø„ÇíËß£Êûê„Åó„Å¶Â≠óÂπïË°®Á§∫ÊôÇÈñì„Å®„Åù„ÅÆÂØæÂøú„ÉÜ„Ç≠„Çπ„Éà„Çí1„Éâ„Ç≠„É•„É°„É≥„Éà„É¨„Ç≥„Éº„Éâ„Å®„Åó„Å¶Azure Search„Å´„Ç§„É≥„Ç∏„Çß„Çπ„Éà„Åó„Å¶„Åù„ÅÆÁîüÊàê„Åï„Çå„Åü„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´ÂØæ„Åó„Å¶„Ç≠„Éº„ÉØ„Éº„Éâ„ÇíÂÖÉ„Å´ÂÖ®ÊñáÊ§úÁ¥¢„Åô„Çã„Åì„Å®„ÅßÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÄÇÂ≠óÂπï„Éá„Éº„ÇøÊ§úÁ¥¢Áî®„ÅÆ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Çπ„Ç≠„Éº„Éû„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å´Â≠óÂπïË°®Á§∫ÊôÇÈñì„Å®„Åù„ÅÆÂØæÂøú„ÉÜ„Ç≠„Çπ„Éà„Çí„É¨„Ç≥„Éº„ÉâÂçò‰Ωç„Å®„Å™„Çã„Çà„ÅÜ„Å´ÂÆöÁæ©„Åó„Å¶„ÅÑ„Çã„ÄÇ\n{ \u0026#34;name\u0026#34;: \u0026#34;stt\u0026#34;, \u0026#34;fields\u0026#34;: [ { \u0026#34;name\u0026#34;:\u0026#34;id\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.","title":"Speech-To-Text with Azure Media \u0026 Cognitive Services"},{"content":"UPDATED 2016-10-31: params„Ç™„Éó„Ç∑„Éß„É≥ + Bash CompletionËøΩÂä†\n„Åø„Çì„Å™Â§ßÂ•Ω„ÅçSSH„Å®Azure„ÅÆ„ÅäË©±„Åó„ÄÇÁâ©ÁêÜ„Çµ„Éº„Éê„ÄÅEC2/‰ªÆÊÉ≥„Éû„Ç∑„É≥„ÄÅ„Ç≥„É≥„ÉÜ„Éä„Å™„Å©„Å™„Çì„Åß„ÇÇ„Çà„ÅÑ„Åå„Åù„ÅÆ‰∏ä„Å´Linux„Çµ„Éº„Éê„Çí„Åü„Å¶„Åü„Çâ„Åæ„Åö„ÇÑ„Çã„Åì„Å®„ÅÆ1„Å§„Å´SSH„É≠„Ç∞„Ç§„É≥„ÅÆ„Åü„ÇÅ„Å´„Åù„ÅÆIP„Ç¢„Éâ„É¨„ÇπË™ø„Åπ„Å¶~/.ssh/config„Å´„Åù„ÅÆ„Ç®„É≥„Éà„É™„Éº„ÇíËøΩÂä†„Åó„Å¶„ÇÑ„Çã„Åì„Å®„Åå„ÅÇ„Çã„Çì„Åò„ÇÉ„Å™„ÅÑ„Åã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ„Åì„ÅÆ‰ΩúÊ•≠„ÄÅ„Ç®„É≥„Éà„É™„ÉºÊï∞„ÅåÂ∞ë„Å™„Åë„Çå„Å∞Â§ß„Åó„Åü„Åì„Å®„ÅØ„Å™„ÅÑ„ÇÇ„ÅÆ„ÅÆ„ÄÅËøΩÂä†ÂØæË±°„ÅÆ„Éõ„Çπ„Éà„ÅåÂ§ßÈáè„Å´„ÅÇ„ÇãÂ†¥Âêà„ÅØ„Åã„Å™„ÇäÈù¢ÂÄí„Å™‰ΩúÊ•≠„Å´„Å™„Å£„Å¶„Åç„Åæ„Åô„ÄÇ„Åï„Çâ„Å´DHCP„Å™„Å©„Åß„Ç¢„Éâ„É¨„Çπ„ÇíÂãïÁöÑ„Å´ÂèñÂæó„Åô„Çã„Çà„ÅÜ„Å™Ë®≠ÂÆö„Åß„ÅÇ„Çå„Å∞„Çµ„Éº„Éê„ÅÆ‰∏ä„Åí‰∏ã„Åí„ÅÆ„Åü„Å≥„Å´IP„Ç¢„Éâ„É¨„Çπ„ÅåÂ§â„Çè„Å£„Å¶„Åè„Çã„ÅÆ„Åß~/.ssh/config„ÅÆÊõ¥Êñ∞„ÅåÂøÖË¶Å„Å´„Å™„Å£„Å¶„Åç„Å¶„ÄÅ„Å©„ÅÜ„Åó„Çà„ÅÜ„ÇÇ„Å™„ÅèÈù¢ÂÄí„Å´„Å™„Å£„Å¶„Åç„Åæ„Åô„ÄÇ„Åì„ÅÜ„ÅÑ„Å£„ÅüÂçòÁ¥î„Åß„Å©„ÅÜ„Åó„Çà„ÅÜ„ÇÇ„Å™„Åè„Å§„Åæ„Çâ„Å™„ÅÑ‰ΩúÊ•≠„ÅØËá™ÂãïÂåñ„Åó„Åü„ÅÑ„Åß„Åô„Çà„Å≠Ôºü „Åì„Åì„Åß„ÅØ„Åù„Çì„Å™ÁöÜ„Åï„Çì„ÅÆ„Åü„ÇÅ„Å´azuresshconfig„Å®„ÅÑ„ÅÜ„ÉÑ„Éº„É´„ÇíÁ¥π‰ªã„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åç„Åæ„Åô„ÄÇ\n„Åì„Çå„ÅØÁöÜ„Åï„Çì„ÅÆAzure„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥‰∏ã„Å´‰Ωú„Çâ„Çå„Åü‰ªÆÊÉ≥„Éû„Ç∑„É≥‰∏ÄË¶ßÔºàARM„Å´Èôê„ÇãÔºâ„ÅÆÊÉÖÂ†±„ÇíÂèñÂæó„Åó„Å¶ÂêÑ‰ªÆÊÉ≥„Éû„Ç∑„É≥„Åî„Å®„ÅÆ„Ç®„É≥„Éà„É™„ÉºÊÉÖÂ†±Ôºà„Éû„Ç∑„É≥Âêç„Å®IP„Ç¢„Éâ„É¨„ÇπÔºâ„Çí~/.ssh/config„Å´ËøΩÂä†„ÉªÊõ¥Êñ∞„Åó„Å¶„Åè„Çå„Çã„ÉÑ„Éº„É´„ÄÇÊñ∞Ë¶è„Å´‰ªÆÊÉ≥„Éû„Ç∑„É≥„ÇíËøΩÂä†„Åó„ÅüÈöõ„ÇÑ„ÄÅ‰ªÆÊÉ≥„Éû„Ç∑„É≥„ÅÆIP„Ç¢„Éâ„É¨„Çπ„ÅåËøΩÂä†„Åó„ÅüÈöõ„Å´„ÅØazuresshconfig„ÇíÂÆüË°å„Åó„Å¶„ÅÇ„Åí„Çã„Åì„Å®„Åß~/.ssh/config„ÅåÊúÄÊñ∞„ÅÆ„Ç®„É≥„Éà„É™„ÉºÊÉÖÂ†±„Åß„Ç¢„ÉÉ„Éó„Éá„Éº„Éà„Åï„Çå„ÄÅÂêÑ„Éû„Ç∑„É≥„Å´„Éû„Ç∑„É≥Âêç„ÅßSSH„É≠„Ç∞„Ç§„É≥„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô„ÄÇ\n„Å°„Å™„Åø„Å´„ÄÅ~/.ssh/config„Å®„ÅØ‰Ωï„Åß„Åô„ÅãÔºü„Å®„ÅÑ„ÅÜ‰∫∫„ÅØQiita„ÅÆË®ò‰∫ã„Äå~/.ssh/config„Å´„Å§„ÅÑ„Å¶„Äç„Åå„Å®„Å¶„ÇÇÂàÜ„Åã„Çä„ÇÑ„Åô„ÅèÊõ∏„Åã„Çå„Å¶„ÅÑ„Çã„ÅÆ„ÅßÂèÇËÄÉ„Å´„Å™„Çã„Åã„Å®„ÄÇ\n„Ç§„É≥„Çπ„Éà„Éº„É´ Python„Éë„ÉÉ„Ç±„Éº„Ç∏ÁÆ°ÁêÜ„ÉÑ„Éº„É´pip„Çí‰Ωø„Å£„Å¶azuresshconfig„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ„Ç§„É≥„Çπ„Éà„Éº„É´ÊôÇ„Å´‰Ωï„Åã„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„ÅüÂ†¥Âêà„ÅØ„ÄÅ„Åì„Å°„Çâ„ÅÆ„Éö„Éº„Ç∏„ÇíÂèÇÁÖß„ÅÑ„Åü„Å†„ÅçÁâπ„Å´Ë©≤ÂΩì„Åô„Çã‰∫ãË±°„Åå„Å™„ÅÑ„ÅãÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ\n$ pip install azuresshconfig Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆÁ∑®ÈõÜÔºà„Çµ„Éº„Éì„Çπ„Éó„É™„É≥„Ç∑„Éë„É´Ôºâ $ vi $HOME/.azure/azuresshconfig.json { \u0026#34;subscription_id\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;client_id\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;client_scret\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;tenant_id\u0026#34;: \u0026#34;\u0026#34; } „Çµ„Éº„Éì„Çπ„Éó„É™„É≥„Ç∑„Éë„É´„Çí‰Ωú„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Çµ„Éº„Éì„Çπ„Éó„É™„É≥„Ç∑„Éë„É´„ÅÆ‰Ωú„ÇäÊñπ„ÅåÂàÜ„Åã„Çâ„Å™„ÅÑ‰∫∫„ÄÅ„Å®„Å£„Å¶„ÇÇ„Çà„ÅÑ„Éâ„Ç≠„É•„É°„É≥„Éà„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Åì„Å°„Çâ„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑÔºö„ÄåUse Azure CLI to create a service principal to access resources„Äç\n‰Ωø„ÅÑÊñπ azuresshconfig --help usage: azuresshconfig.py [-h] [--version] [--init] [--profile PROFILE] [--user USER] [--identityfile IDENTITYFILE] [--private] [--resourcegroups RESOURCEGROUPS] [--params PARAMS] This program generates SSH config from Azure ARM VM inventry in subscription optional arguments: -h, --help show this help message and exit --version show program\u0026#39;s version number and exit --init Create template client profile at $HOME/.azure/azuresshconfig.json only if there is no existing one --profile PROFILE Specify azure client profile file to use ($HOME/.azure/azuresshconfig.json by default) --user USER SSH username to use for all hosts --identityfile IDENTITYFILE SSH identity file to use for all hosts --private Use private IP addresses (Public IP is used by default) --resourcegroups RESOURCEGROUPS A comma-separated list of resource group to be considered for ssh-config generation (all resource groups by default) --params PARAMS Any ssh-config params you want to add with query- string format: key1=value1\u0026amp;key2=value2\u0026amp;... ÂÆüË°å„Åô„Çã 1. „Éë„É©„É°„Éº„ÇøÊåáÂÆö„Å™„Åó„ÅßÂÆüË°å $ azuresshconfig ~/.ssh/config„Å´„ÅØ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´### AZURE-SSH-CONFIG BEGIN ### ÔΩû ### AZURE-SSH-CONFIG END ###„ÅÆ„Éñ„É≠„ÉÉ„ÇØÂÜÖ„Å´„Éû„Ç∑„É≥Âêç„Å®„Åù„ÅÆIP„Ç¢„Éâ„É¨„ÇπÔºà„Éá„Éï„Ç©„É´„ÉàÔºö„Éë„Éñ„É™„ÉÉ„ÇØÔºâ„ÅÆ„Ç®„É≥„Éà„É™„Éº‰∏ÄË¶ß„ÅåËøΩÂä†„ÉªÊõ¥Êñ∞„Åï„Çå„Åæ„Åô„ÄÇ\n$ cat ~/.ssh/config ### AZURE-SSH-CONFIG BEGIN ### Host myvm1 HostName 40.74.124.30 Host myvm2 HostName 40.74.116.134 .... ### AZURE-SSH-CONFIG END ### 2. SSH„É¶„Éº„Ç∂„Å®ÈçµÊåáÂÆö $ azuresshconfig --user yoichika --identityfile ~/.ssh/id_rsa ~/.ssh/config„Å´„ÅØÂêÑ„Ç®„É≥„Éà„É™„Éº„Å´IP„Ç¢„Éâ„É¨„Çπ„Å´Âä†„Åà„Å¶„É¶„Éº„Ç∂Âêç„Å®Èçµ„ÅÆ„Éë„ÇπÊÉÖÂ†±„ÅåËøΩÂä†„Åï„Çå„Åæ„Åô„ÄÇ\n$ cat ~/.ssh/config ### AZURE-SSH-CONFIG BEGIN ### Host myvm1 HostName 40.74.124.30 IdentityFile /home/yoichika/.ssh/id_rsa User yoichika Host myvm2 HostName 40.74.116.134 IdentityFile /home/yoichika/.ssh/id_rsa User yoichika .... ### AZURE-SSH-CONFIG END ### 3. „Éó„É©„Ç§„Éô„Éº„ÉàIP„ÇíÊåáÂÆö $ azuresshconfig --user yoichika --identityfile ~/.ssh/id_rsa --private private„Ç™„Éó„Ç∑„Éß„É≥„Çí‰ªò„Åë„Å¶ÂÆüË°å„Åô„Çã„Åì„Å®„Åß~/.ssh/config„ÅÆÂêÑ„Ç®„É≥„Éà„É™„Éº„Å´„ÅØ„Éá„Éï„Ç©„É´„Éà„ÅÆ„Éë„Éñ„É™„ÉÉ„ÇØIP„Ç¢„Éâ„É¨„Çπ„Åß„ÅØ„Å™„Åè„Å¶„Éó„É©„Ç§„Éô„Éº„ÉàIP„Ç¢„Éâ„É¨„Çπ„ÅåËøΩÂä†„Åï„Çå„Åæ„Åô„ÄÇ\n4. „É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„ÅßÁµû„Çã $ azuresshconfig --user yoichika --identityfile ~/.ssh/id_rsa --resourcegroups mygroup1,mygroup2 resourcegroups„Ç™„Éó„Ç∑„Éß„É≥„ÇíÊåáÂÆö„Åô„Çã„Åì„Å®„ÅßÊåáÂÆö„Åï„Çå„Åü„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„Å´ÊâÄÂ±û„Åô„Çã‰ªÆÊÉ≥„Éû„Ç∑„É≥„ÅÆ„Ç®„É≥„Éà„É™„Éº„ÅÆ„Åø„Åå~/.ssh/config„Å´ËøΩÂä†„Åï„Çå„Åæ„Åô„ÄÇ\n5. ËøΩÂä†ssh-config„Éë„É©„É°„Éº„Çø„ÅÆÊåáÂÆö $ azuresshconfig.py --user yoichika \\ --identityfile ~/.ssh/id_rsa \\ --params \u0026#34;Port=2222\u0026amp;Protocol=2\u0026amp;UserKnownHostsFile=~/.ssh/known_hosts\u0026amp;ForwardAgent=yes\u0026#34; params„Ç™„Éó„Ç∑„Éß„É≥„ÇíÊåáÂÆö„Åô„Çã„Åì„Å®„Åß„Åù„ÅÆ‰ªñÊåáÂÆöÂèØËÉΩ„Å™ssh-config„Éë„É©„É°„Éº„Çø„ÇíËøΩÂä†„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ‰∏äË®ò„ÅÆ„Çà„ÅÜ„Å´params„Å´ssh-config„ÅÆPort„ÄÅProtocol„ÄÅUserKnownHostsFile„ÄÅForwardAgent„Ç≠„Éº„Å®ÂÄ§„Çí„Çª„ÉÉ„Éà„Åô„Çã„Åì„Å®„ÅßÊ¨°„ÅÆ„Çà„ÅÜ„Å´Âá∫Âäõ„Åï„Çå„Çãssh-config„Å´ÊåáÂÆö„Åó„Åü„Ç≠„Éº„Å®ÂÄ§„Åå„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åô„ÄÇ\n$ cat ~/.ssh/config ### AZURE-SSH-CONFIG BEGIN ### Host myvm1 HostName 40.74.124.30 IdentityFile ~/.ssh/id_rsa User yoichika Port 2222 Protocol 2 UserKnownHostsFile ~/.ssh/known_hosts ForwardAgent yes Host myvm2 HostName 40.74.116.134 IdentityFile /home/yoichika/.ssh/id_rsa User yoichika Port 2222 Protocol 2 UserKnownHostsFile ~/.ssh/known_hosts ForwardAgent yes .... ### AZURE-SSH-CONFIG END ### Shell Completion Bash„Åß„ÅÆË£úÂÆå Ê¨°„ÅÆ„Çà„ÅÜ„Å´bash/azuresshconfig_completion.bash„ÇíbashËµ∑ÂãïÊôÇ„Å´Ë™≠„ÅøËæº„Åæ„Åõ„Å¶„ÅÇ„Åí„Çã„Åì„Å®„Åßazuresshconfig„ÅÆ„Éë„É©„É°„Éº„ÇøË£úÂÆå„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô.\n# copy this under either of following directories $ cp azuresshconfig_completion.bash (/etc/bash_completion.d | /usr/local/etc/bash_completion.d | ~/bash_completion.d)` # or append \u0026#39;source /path/to/azuresshconfig_completion.bash\u0026#39; to .bashrc like this $ echo \u0026#39;source /path/to/azuresshconfig_completion.bash\u0026#39; \u0026gt;\u0026gt; .bashrc Ê¨°„ÅÆ„Çà„ÅÜ„Å´tab„Åßazuresshconfig„ÅÆ„Éë„É©„É°„Éº„ÇøË£úÂÆå„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ\n$ azuresshconfig -[tab] -h --identityfile --params --profile --user --help --init --private --resourcegroups $ azuresshconfig --i[tab] --identityfile --init $ azuresshconfig --p[tab] --params --private --profile $ azuresshconfig --user [tab] $ azuresshconfig --user \u0026lt;ssh_user\u0026gt; $ azuresshconfig --user \u0026lt;ssh_user\u0026gt; --identityfile [tab] $ azuresshconfig --user \u0026lt;ssh_user\u0026gt; --identityfile \u0026lt;ssh_identity_file\u0026gt; „Åù„ÅÆ‰ªñ „Ç§„É≥„Çπ„Éà„Éº„É´ÊôÇ„ÅÆ„Ç®„É©„Éº„ÇÑÂÆüË°åÊôÇ„ÅÆ„Ç®„É©„Éº„Å´„Å§„ÅÑ„Å¶„ÅØ„Åì„Å°„Çâ„Å´Ë¶ã„Å§„ÅëÊ¨°Á¨¨‰∫ãË±°„Å®„Åù„ÅÆÂØæÂøúÊñπÊ≥ï„ÇíËøΩÂä†„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ https://github.com/yokawasa/azure-ssh-config/blob/master/Issues.md\n„ÇÇ„Åó„Éê„Ç∞„ÇíË¶ã„Å§„Åë„Åü„Çä„ÄÅËøΩÂä†Ê©üËÉΩ„ÅÆ„É™„ÇØ„Ç®„Çπ„Éà„Åå„ÅÇ„ÇãÂ†¥Âêà„Å´„Åì„Å°„Çâ„Å´IssueËøΩÂä†„Åè„Å†„Åï„ÅÑ„ÄÇÈ†ëÂºµ„Å£„Å¶ÊôÇÈñì„Çí„Åø„Å§„Åë„Å¶ÂØæÂøú„Åó„Åæ„Åô„ÄÇ https://github.com/yokawasa/azure-ssh-config/issues\nLINKS https://github.com/yokawasa/azure-ssh-config https://pypi.python.org/pypi/azuresshconfig/ Use Azure CLI to create a service principal to access resources azuresshconfig makes your SSH life on Azure easy!\n","permalink":"https://unofficialism.info/posts/azuresshconfig/","summary":"UPDATED 2016-10-31: params„Ç™„Éó„Ç∑„Éß„É≥ + Bash CompletionËøΩÂä†\n„Åø„Çì„Å™Â§ßÂ•Ω„ÅçSSH„Å®Azure„ÅÆ„ÅäË©±„Åó„ÄÇÁâ©ÁêÜ„Çµ„Éº„Éê„ÄÅEC2/‰ªÆÊÉ≥„Éû„Ç∑„É≥„ÄÅ„Ç≥„É≥„ÉÜ„Éä„Å™„Å©„Å™„Çì„Åß„ÇÇ„Çà„ÅÑ„Åå„Åù„ÅÆ‰∏ä„Å´Linux„Çµ„Éº„Éê„Çí„Åü„Å¶„Åü„Çâ„Åæ„Åö„ÇÑ„Çã„Åì„Å®„ÅÆ1„Å§„Å´SSH„É≠„Ç∞„Ç§„É≥„ÅÆ„Åü„ÇÅ„Å´„Åù„ÅÆIP„Ç¢„Éâ„É¨„ÇπË™ø„Åπ„Å¶~/.ssh/config„Å´„Åù„ÅÆ„Ç®„É≥„Éà„É™„Éº„ÇíËøΩÂä†„Åó„Å¶„ÇÑ„Çã„Åì„Å®„Åå„ÅÇ„Çã„Çì„Åò„ÇÉ„Å™„ÅÑ„Åã„Å®ÊÄù„ÅÑ„Åæ„Åô„ÄÇ„Åì„ÅÆ‰ΩúÊ•≠„ÄÅ„Ç®„É≥„Éà„É™„ÉºÊï∞„ÅåÂ∞ë„Å™„Åë„Çå„Å∞Â§ß„Åó„Åü„Åì„Å®„ÅØ„Å™„ÅÑ„ÇÇ„ÅÆ„ÅÆ„ÄÅËøΩÂä†ÂØæË±°„ÅÆ„Éõ„Çπ„Éà„ÅåÂ§ßÈáè„Å´„ÅÇ„ÇãÂ†¥Âêà„ÅØ„Åã„Å™„ÇäÈù¢ÂÄí„Å™‰ΩúÊ•≠„Å´„Å™„Å£„Å¶„Åç„Åæ„Åô„ÄÇ„Åï„Çâ„Å´DHCP„Å™„Å©„Åß„Ç¢„Éâ„É¨„Çπ„ÇíÂãïÁöÑ„Å´ÂèñÂæó„Åô„Çã„Çà„ÅÜ„Å™Ë®≠ÂÆö„Åß„ÅÇ„Çå„Å∞„Çµ„Éº„Éê„ÅÆ‰∏ä„Åí‰∏ã„Åí„ÅÆ„Åü„Å≥„Å´IP„Ç¢„Éâ„É¨„Çπ„ÅåÂ§â„Çè„Å£„Å¶„Åè„Çã„ÅÆ„Åß~/.ssh/config„ÅÆÊõ¥Êñ∞„ÅåÂøÖË¶Å„Å´„Å™„Å£„Å¶„Åç„Å¶„ÄÅ„Å©„ÅÜ„Åó„Çà„ÅÜ„ÇÇ„Å™„ÅèÈù¢ÂÄí„Å´„Å™„Å£„Å¶„Åç„Åæ„Åô„ÄÇ„Åì„ÅÜ„ÅÑ„Å£„ÅüÂçòÁ¥î„Åß„Å©„ÅÜ„Åó„Çà„ÅÜ„ÇÇ„Å™„Åè„Å§„Åæ„Çâ„Å™„ÅÑ‰ΩúÊ•≠„ÅØËá™ÂãïÂåñ„Åó„Åü„ÅÑ„Åß„Åô„Çà„Å≠Ôºü „Åì„Åì„Åß„ÅØ„Åù„Çì„Å™ÁöÜ„Åï„Çì„ÅÆ„Åü„ÇÅ„Å´azuresshconfig„Å®„ÅÑ„ÅÜ„ÉÑ„Éº„É´„ÇíÁ¥π‰ªã„Åï„Åõ„Å¶„ÅÑ„Åü„Å†„Åç„Åæ„Åô„ÄÇ\n„Åì„Çå„ÅØÁöÜ„Åï„Çì„ÅÆAzure„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥‰∏ã„Å´‰Ωú„Çâ„Çå„Åü‰ªÆÊÉ≥„Éû„Ç∑„É≥‰∏ÄË¶ßÔºàARM„Å´Èôê„ÇãÔºâ„ÅÆÊÉÖÂ†±„ÇíÂèñÂæó„Åó„Å¶ÂêÑ‰ªÆÊÉ≥„Éû„Ç∑„É≥„Åî„Å®„ÅÆ„Ç®„É≥„Éà„É™„ÉºÊÉÖÂ†±Ôºà„Éû„Ç∑„É≥Âêç„Å®IP„Ç¢„Éâ„É¨„ÇπÔºâ„Çí~/.ssh/config„Å´ËøΩÂä†„ÉªÊõ¥Êñ∞„Åó„Å¶„Åè„Çå„Çã„ÉÑ„Éº„É´„ÄÇÊñ∞Ë¶è„Å´‰ªÆÊÉ≥„Éû„Ç∑„É≥„ÇíËøΩÂä†„Åó„ÅüÈöõ„ÇÑ„ÄÅ‰ªÆÊÉ≥„Éû„Ç∑„É≥„ÅÆIP„Ç¢„Éâ„É¨„Çπ„ÅåËøΩÂä†„Åó„ÅüÈöõ„Å´„ÅØazuresshconfig„ÇíÂÆüË°å„Åó„Å¶„ÅÇ„Åí„Çã„Åì„Å®„Åß~/.ssh/config„ÅåÊúÄÊñ∞„ÅÆ„Ç®„É≥„Éà„É™„ÉºÊÉÖÂ†±„Åß„Ç¢„ÉÉ„Éó„Éá„Éº„Éà„Åï„Çå„ÄÅÂêÑ„Éû„Ç∑„É≥„Å´„Éû„Ç∑„É≥Âêç„ÅßSSH„É≠„Ç∞„Ç§„É≥„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô„ÄÇ\n„Å°„Å™„Åø„Å´„ÄÅ~/.ssh/config„Å®„ÅØ‰Ωï„Åß„Åô„ÅãÔºü„Å®„ÅÑ„ÅÜ‰∫∫„ÅØQiita„ÅÆË®ò‰∫ã„Äå~/.ssh/config„Å´„Å§„ÅÑ„Å¶„Äç„Åå„Å®„Å¶„ÇÇÂàÜ„Åã„Çä„ÇÑ„Åô„ÅèÊõ∏„Åã„Çå„Å¶„ÅÑ„Çã„ÅÆ„ÅßÂèÇËÄÉ„Å´„Å™„Çã„Åã„Å®„ÄÇ\n„Ç§„É≥„Çπ„Éà„Éº„É´ Python„Éë„ÉÉ„Ç±„Éº„Ç∏ÁÆ°ÁêÜ„ÉÑ„Éº„É´pip„Çí‰Ωø„Å£„Å¶azuresshconfig„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ„Ç§„É≥„Çπ„Éà„Éº„É´ÊôÇ„Å´‰Ωï„Åã„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„ÅüÂ†¥Âêà„ÅØ„ÄÅ„Åì„Å°„Çâ„ÅÆ„Éö„Éº„Ç∏„ÇíÂèÇÁÖß„ÅÑ„Åü„Å†„ÅçÁâπ„Å´Ë©≤ÂΩì„Åô„Çã‰∫ãË±°„Åå„Å™„ÅÑ„ÅãÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ\n$ pip install azuresshconfig Ë®≠ÂÆö„Éï„Ç°„Ç§„É´„ÅÆÁ∑®ÈõÜÔºà„Çµ„Éº„Éì„Çπ„Éó„É™„É≥„Ç∑„Éë„É´Ôºâ $ vi $HOME/.azure/azuresshconfig.json { \u0026#34;subscription_id\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;client_id\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;client_scret\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;tenant_id\u0026#34;: \u0026#34;\u0026#34; } „Çµ„Éº„Éì„Çπ„Éó„É™„É≥„Ç∑„Éë„É´„Çí‰Ωú„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Çµ„Éº„Éì„Çπ„Éó„É™„É≥„Ç∑„Éë„É´„ÅÆ‰Ωú„ÇäÊñπ„ÅåÂàÜ„Åã„Çâ„Å™„ÅÑ‰∫∫„ÄÅ„Å®„Å£„Å¶„ÇÇ„Çà„ÅÑ„Éâ„Ç≠„É•„É°„É≥„Éà„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Åì„Å°„Çâ„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑÔºö„ÄåUse Azure CLI to create a service principal to access resources„Äç\n‰Ωø„ÅÑÊñπ azuresshconfig --help usage: azuresshconfig.py [-h] [--version] [--init] [--profile PROFILE] [--user USER] [--identityfile IDENTITYFILE] [--private] [--resourcegroups RESOURCEGROUPS] [--params PARAMS] This program generates SSH config from Azure ARM VM inventry in subscription optional arguments: -h, --help show this help message and exit --version show program\u0026#39;s version number and exit --init Create template client profile at $HOME/.","title":"Making SSH lives in Azure easier with azuresshconfig"},{"content":"Here is a list of embulk plugins that you can leverage to transfer your data between Microsoft Azure Services and various other databases/storages/cloud services.\nPlugin Name Target Azure Services Note embulk-output-azure_blob_storage Blob Storage Embulk output plugin that stores files onto Microsoft Azure Blob Storage embulk-input-azure_blob_storage Blob Storage Embulk input plugin that reads files stored on Microsoft Azure Blob Storage embulk-output-sqlserver SQL Databases, SQL DWH Embulk output plugin that Inserts or updates records to SQL server type of services like SQL DB/SQL DWH embulk-input-sqlserver SQL Databases, SQL DWH Embulk input plugin that selects records from SQL type of services like SQL DB/SQL DWH embulk-output-documentdb Comos DB Embulk output plugin that dumps records to Azure Cosmos DB embulk-output-azuresearch Azure Search Embulk output plugin that dumps records to Azure Search (as of Aug 30, 2016)\nFor embulk, check this site: https://github.com/embulk/embulk\n","permalink":"https://unofficialism.info/posts/embulk-plugins-for-microsoft-azure-services/","summary":"Here is a list of embulk plugins that you can leverage to transfer your data between Microsoft Azure Services and various other databases/storages/cloud services.\nPlugin Name Target Azure Services Note embulk-output-azure_blob_storage Blob Storage Embulk output plugin that stores files onto Microsoft Azure Blob Storage embulk-input-azure_blob_storage Blob Storage Embulk input plugin that reads files stored on Microsoft Azure Blob Storage embulk-output-sqlserver SQL Databases, SQL DWH Embulk output plugin that Inserts or updates records to SQL server type of services like SQL DB/SQL DWH embulk-input-sqlserver SQL Databases, SQL DWH Embulk input plugin that selects records from SQL type of services like SQL DB/SQL DWH embulk-output-documentdb Comos DB Embulk output plugin that dumps records to Azure Cosmos DB embulk-output-azuresearch Azure Search Embulk output plugin that dumps records to Azure Search (as of Aug 30, 2016)","title":"embulk plugins for Microsoft Azure Services"},{"content":"I‚Äôd like to announce fluent-plugin-documentdb finally supports Azure DocumentDB Partitioned collections for higher storage and throughput. If you\u0026rsquo;re not familiar with fluent-plugin-documentdb, read my previous article before move on.\nPartitioned collections is kick-ass feature that I had wanted to support in fluent-plugin-documentdb since the feature came out public (see the announcement). For big fan of fluent-plugin-documentdb, sorry for keeping you waiting for such a long time :-) If I may make excuses, I would say I haven\u0026rsquo;t had as much time on the project, and I had to do ruby client implementation of Partitioned collections by myself as there is no official DocumentDB Ruby SDK that supports it (As a result I\u0026rsquo;ve created tiny Ruby DocumentDB client libraries that support the feature. Check this out if you\u0026rsquo;re interested).\nWhat are Partitioned collections? According to official documentation, Partitioned collections can span multiple partitions and support very large amounts of storage and throughput. You must specify a partition key for the collection. Partitioned collections can support larger data volumes and process more requests compared to Single-partitioned collection. Partitioned collections support up to 250 GB of storage and 250,000 request units per second of provisioned throughput[Updated Aug 21, 2016] (@arkramac pointed that out for me) Partitioned collections support unlimited storage and throughput. 250GB storage and 250k req/sec are soft cap. You can increase these limits by contacting and asking Azure support.\nOn the other hand, Single-partition collections have lower price options and the ability to query and perform transactions across all collection data. They have the scalability and storage limits of a single partition. You do not have to specify a partition key for these collections.\nCreation of Partitioned collections You can create Partitioned collections via the Azure portal, REST API ( \u0026gt;= version 2015-12-16), and client SDKs in .NET, Node.js, Java, and Python. In addition, you let fluent-plugin-documentdb create Partitioned collections automatically by adding the following configuration options upon the ones for single-partitioned collection in fluentd.conf:\nauto_create_collection true partitioned_collection true partition_key [partition key for the collection] offer_throughput [Offer throughtput value: must be more than and equals to 10100. See this for more info on offer throughtput in creating collection] It creates a partitioned collection as you configure in starting the plugin if not exist at that time.\nConfiguration Example Suppose that you want to read Apache access log as source for fluentd, and that you pick \u0026ldquo;host\u0026rdquo; as a partition Key for the collection, you can configure the plugin like this following:\n\u0026lt;source\u0026gt; @type tail # input plugin path /var/log/apache2/access.log # monitoring file pos_file /tmp/fluentd_pos_file # position file format apache # format tag documentdb.access # tag \u0026lt;/source\u0026gt; \u0026lt;match documentdb.*\u0026gt; @type documentdb docdb_endpoint https://yoichikademo.documents.azure.com:443/ docdb_account_key Tl1xykQxnExUisJ+BXwbbaC8NtUqYVE9kUDXCNust5aYBduhui29Xtxz3DLP88PayjtgtnARc1PW+2wlA6jCJw== docdb_database mydb docdb_collection my-partitioned-collection auto_create_database true auto_create_collection true partitioned_collection true partition_key host offer_throughput 10100 localtime true time_format %Y%m%d-%H:%M:%S add_time_field true time_field_name time add_tag_field true tag_field_name tag \u0026lt;/match\u0026gt; Basically that\u0026rsquo;s all additional configuration for Partitioned collections. Please refer to my previous article for the rest of setup and running work for the plugin.\nHappy log collections with fluent-plugin-documentdb!!\nLINKS https://github.com/yokawasa/fluent-plugin-documentdb https://rubygems.org/gems/fluent-plugin-documentdb Partitioning and scaling in Azure DocumentDB Performance levels in DocumentDB ","permalink":"https://unofficialism.info/posts/fluent-plugin-documentdb-supports-partitioned-collections/","summary":"I‚Äôd like to announce fluent-plugin-documentdb finally supports Azure DocumentDB Partitioned collections for higher storage and throughput. If you\u0026rsquo;re not familiar with fluent-plugin-documentdb, read my previous article before move on.\nPartitioned collections is kick-ass feature that I had wanted to support in fluent-plugin-documentdb since the feature came out public (see the announcement). For big fan of fluent-plugin-documentdb, sorry for keeping you waiting for such a long time :-) If I may make excuses, I would say I haven\u0026rsquo;t had as much time on the project, and I had to do ruby client implementation of Partitioned collections by myself as there is no official DocumentDB Ruby SDK that supports it (As a result I\u0026rsquo;ve created tiny Ruby DocumentDB client libraries that support the feature.","title":"fluent-plugin-documentdb supports Partitioned collections"},{"content":"In this article, I\u0026rsquo;d like to introduces a solution to collect logs and store them into Azure DocumentDB using fluentd and its plugin, fluent-plugin-documentdb.\nAzure DocumentDB is a managed NoSQL database service provided by Microsoft Azure. It\u0026rsquo;s schemaless, natively support JSON, very easy-to-use, very fast, highly reliable, and enables rapid deployment, you name it. Fluentd is an open source data collector, which lets you unify the data collection and consumption for a better use and understanding of data. fluent-plugin-documentdb is fluentd output plugin that enables to store event collections into Azure DocumentDB.\nThis article shows how to\nCollect Apache httpd logs across web servers Ship the collected logs into the aggregator Fluentd in near real-time Store the collected logs into DocumentDB Utilize the collected log data stored on Document DB for advanced scenarios - like archiving the data to Azure Storage, doing Big data analysis, visualizing the data with PowerBI, and so forth Pre-requisites A basic understanding of fluentd - if you\u0026rsquo;re not familiar with fluentd, fluentd quickstart guide is good starting point Azure subscription - you need to have Azure subscription that grants you access to Microsoft Azure services, and under which you can create DocumentDB cluster. If you don\u0026rsquo;t have yet click here to create it Setup: Azure DocumentDB To use Azure DocumentDB, you must create a DocumentDB database account using either the Azure portal, Azure Resource Manager templates, or Azure command-line interface (CLI). In addition, you must have a database and a collection to which fluent-plugin-documentdb writes event-stream out. Here are instructions:\nCreate a DocumentDB database account using the Azure portal, or Azure Resource Manager templates and Azure CLI How to create a database for DocumentDB Create a DocumentDB collection Setup: Fluentd Aggregator First of all, install Fluentd. The following shows how to install Fluentd using Ruby gem packger but if you are not using Ruby Gem for the installation, please refer to this installation guide where you can find many other ways to install Fluentd on many platforms.\n# install fluentd $ sudo gem install fluentd --no-ri --no-rdoc # create fluent.conf $ fluentd --setup Also, install fluent-plugin-documentdb for fluentd aggregator to store collected logs data into Azure DocumentDB.\n$ sudo gem install fluent-plugin-documentdb Next, configure fluent.conf, a fluentd configuration file as follows. Please see this for fluent-plugin-documentdb configuration.\n# Receive events from 24224/tcp # This is used by log forwarding and the fluent-cat command \u0026lt;source\u0026gt; @type forward port 24224 \u0026lt;/source\u0026gt; # Store Data in DocumentDB \u0026lt;match apache.access\u0026gt; @type documentdb docdb_endpoint https://yoichikademo.documents.azure.com:443/ docdb_account_key Tl1+ikQtnExxxUisJ+BXwbbaC8NtUqYVE9kUDXCNust5aYBduhui29Xtxz3DLP88PayjtgtnARc1PW+2wlA6jCJw== (dummy) docdb_database LogDB docdb_collection Collection1 auto_create_database true auto_create_collection true time_format %Y%m%d-%H:%M:%S localtime true add_time_field true time_field_name time add_tag_field true tag_field_name tag \u0026lt;/match\u0026gt; Regarding he port number of the aggregator host above, the default is 24224. Note that both TCP packets (event stream) and UDP packets (heartbeat message) are sent to this port, which mean you need to open both TCP and UDP for this port if you have access controls between forwarders and aggregator. Please see the forward Output plugin article to understand more about forward plugin.\nFinally, run fluentd with specifiying fluent.conf that you configurea above.\n$ fluentd -c ./fluent.conf -vv \u0026amp; Setup: Fluentd Forwarders First, to set up Fluentd, run the following command to setup Fluentd. Again If you are not using Ruby Gem for the installation, please refer to the installation document.\n# install fluentd $ sudo gem install fluentd --no-ri --no-rdoc` # create fluent.conf $ fluentd --setup Then, give Fluentd a read access to servers\u0026rsquo;log files.\n$ sudo chmod og+rx /var/log/apache2 $ sudo chmod og+r /var/log/apache2/* Next, configure fluent.conf, a fluentd configuration file as follows to tail apache access logs and forard event to aggregator\n# Apache Access Logs \u0026lt;source\u0026gt; @type tail path /var/log/apache2/access.log # monitoring file pos_file /tmp/fluentd_pos_file # position file format apache # format tag apache.access # tag \u0026lt;/source\u0026gt; # Forward data to the aggregator \u0026lt;match apache.access\u0026gt; @type forward buffer_type memory buffer_chunk_limit 8m buffer_queue_limit 64 flush_interval 1s \u0026lt;server\u0026gt; host \u0026lt;Aggregator\u0026#39;s hostname or IP\u0026gt; port 24224 \u0026lt;/server\u0026gt; \u0026lt;secondary\u0026gt; @type file path /var/log/fluentd/forward-failed \u0026lt;/secondary\u0026gt; \u0026lt;/match\u0026gt; Finally, start Fluentd with the configuration above to start log collections\n$ fluentd -c ./fluent.conf -vv \u0026amp; TEST Let\u0026rsquo;s check if logs will be forwarded from apache nodes to aggegator and ultimately stored in documentdb. First, create log events by sending test requests to web servers somehow (here using apache bench for example)\n$ ab -n 5 -c 2 http://\u0026lt;targetserver\u0026gt;/foo/bar/test.html If logs are collected successfully, you can see the logs stored in DocumentDB easily by using Document DB\u0026rsquo;s query explorer. Go to Azure Portal \u0026gt; Display your DocumentDB dashboard \u0026gt; Query Explorer.\nMore log collections from external sources Fluentd\u0026rsquo;s Input plugins extend Fluentd to retrieve and pull event logs from external sources. An input plugin typically creates a thread socket and a listen socket. It can also periodically pull data from data sources. For examples, listening syslog events, tailing apache/nginx logs, and pulling data from well-known RDBMS/NoSQLs on-premices or on public cloud. See http://www.fluentd.org/plugins\nSetup for Advanced senarios Using Secure-forward instead of simple forward plugin in order to have communication over SSL between forward servers and aggregator: https://github.com/tagomoris/fluent-plugin-secure-forward Configuring DocumentDB\u0026rsquo;s Hadoop connector that allows DocumentDB to act as both a source and sink for Hive, Pig and MapReduce jobs: https://azure.microsoft.com/en-us/documentation/articles/documentdb-run-hadoop-with-hdinsight/ Setup Azure Data factory to from DocumentDB to Azure Blob Storage for Archiving the data: https://azure.microsoft.com/en-us/documentation/articles/data-factory-azure-documentdb-connector/ Configuring DocumentDB\u0026rsquo;s PowerBI connector that allows DocumentDB to act as a source for PowerBI to create insightful visualizations for DocumentDB data: https://azure.microsoft.com/en-us/blog/unleashing-insights-from-data-in-documentdb-with-power-bi/ Happy log collections with Azure DocumentDB and fluentd!!\nEND\n","permalink":"https://unofficialism.info/posts/collecting-logs-into-azure-documentdb-using-fluent-plugin-documentdb/","summary":"In this article, I\u0026rsquo;d like to introduces a solution to collect logs and store them into Azure DocumentDB using fluentd and its plugin, fluent-plugin-documentdb.\nAzure DocumentDB is a managed NoSQL database service provided by Microsoft Azure. It\u0026rsquo;s schemaless, natively support JSON, very easy-to-use, very fast, highly reliable, and enables rapid deployment, you name it. Fluentd is an open source data collector, which lets you unify the data collection and consumption for a better use and understanding of data.","title":"Collecting logs into Azure DocumentDB using fluent-plugin-documentdb"},{"content":"UPDATED:\n2016-12-10: Added fluent-plugin-azure-loganalytics to the list 2016-11-23: Added fluent-plugin-azurefunctions to the list Here is a list of fluentd plugins for Microsoft Azure Services.\nPlugin Name Target Azure Services Note fluent-plugin-azurestorage Blob Storage Azure Storate output plugin buffers logs in local file and upload them to Azure Storage periodicall fluent-plugin-azureeventhubs Event Hubs Azure Event Hubs buffered output plugin for Fluentd. Currently it supports only HTTPS (not AMQP) fluent-plugin-azuretables Azure Tables Fluent plugin to add event record into Azure Tables Storage fluent-plugin-azuresearch Azure Search Fluent plugin to add event record into Azure Search fluent-plugin-documentdb Cosmos DB Fluent plugin to add event record into Azure Cosmos DB fluent-plugin-azurefunctions Azure Functions Azure Functions (HTTP Trigger) output plugin for Fluentd. The plugin aggregates semi-structured data in real-time and writes the buffered data via HTTPS request to HTTP Trigger Function fluent-plugin-azure-loganalytics Log Analytics Azure Log Analytics output plugin for Fluentd. The plugin aggregates semi-structured data in real-time and writes the buffered data via HTTPS request to Azure Log Analytics (as of Nov 23, 2016)\n","permalink":"https://unofficialism.info/posts/fluentd-plugins-for-microsoft-azure-services/","summary":"UPDATED:\n2016-12-10: Added fluent-plugin-azure-loganalytics to the list 2016-11-23: Added fluent-plugin-azurefunctions to the list Here is a list of fluentd plugins for Microsoft Azure Services.\nPlugin Name Target Azure Services Note fluent-plugin-azurestorage Blob Storage Azure Storate output plugin buffers logs in local file and upload them to Azure Storage periodicall fluent-plugin-azureeventhubs Event Hubs Azure Event Hubs buffered output plugin for Fluentd. Currently it supports only HTTPS (not AMQP) fluent-plugin-azuretables Azure Tables Fluent plugin to add event record into Azure Tables Storage fluent-plugin-azuresearch Azure Search Fluent plugin to add event record into Azure Search fluent-plugin-documentdb Cosmos DB Fluent plugin to add event record into Azure Cosmos DB fluent-plugin-azurefunctions Azure Functions Azure Functions (HTTP Trigger) output plugin for Fluentd.","title":"fluentd plugins for Microsoft Azure Services"},{"content":"I\u0026rsquo;ve just noticed that some of patents, which I was involved in for its publishing process, have been granted. Good news!\nÁâπÈñã2011-065245 ÁâπÈñã2011-065244 ÁâπÈñã2011-065243 ÁâπÈñã2011-060094 ÁâπÈñã2011-060093 ÁâπÈñã2008-287407 ","permalink":"https://unofficialism.info/posts/patents/","summary":"I\u0026rsquo;ve just noticed that some of patents, which I was involved in for its publishing process, have been granted. Good news!\nÁâπÈñã2011-065245 ÁâπÈñã2011-065244 ÁâπÈñã2011-065243 ÁâπÈñã2011-060094 ÁâπÈñã2011-060093 ÁâπÈñã2008-287407 ","title":"My patents"},{"content":"„Åì„Çå„ÅØElasticsearch Advent Calendar 2015„ÅÆ17Êó•ÁõÆ„ÅÆ„Ç®„É≥„Éà„É™„Éº\nARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å®Âëº„Å∞„Çå„Çã„Éá„Éó„É≠„Ç§ÊâãÊ≥ï„Çí‰Ωø„Å£„Å¶Azure‰∏ä„Å´Elasticsearch„ÇØ„É©„Çπ„Çø„Çí„Åï„Åè„Å£„Å®ÊßãÁØâ„Åô„ÇãÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶„ÅÆ„ÅäË©±„Åß„ÄÅ‰∏ª„Å´AzureÁïåÈöà„ÅÆElasticsearch„É¶„Éº„Ç∂Âêë„Åë„ÅÆÂÜÖÂÆπ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ„Çø„Ç§„Éà„É´„Å´„ÅÇ„Çã3ÂàÜ„Åß„Å®„ÅÑ„ÅÜ„ÅÆ„ÅØÂÆüÈöõ„Å´Ë®à„Å£„Åü„Çè„Åë„Åß„ÅØ„Å™„ÅÑ„Åå„Åù„Çå„Åè„Çâ„ÅÑÁ∞°Âçò‰∏î„Å§Áü≠ÊôÇÈñì„Åß„Åß„Åç„Çã„Åì„Å®„ÇíÂº∑Ë™ø„Åó„Åü„Åè‰Ωø„Çè„Åõ„Å¶„ÅÑ„Åü„Å†„ÅÑ„Å¶„ÅÑ„Çã„Éª„Éª„Éª„Å®„ÅÑ„ÅÜ„Åì„Å®„ÇíÂâç„ÇÇ„Å£„Å¶Ë£úË∂≥„Åó„Å¶„Åä„ÅèÔºàÊ±óÔºâ„ÄÇ\nARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å®„ÅØÔºü ARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅÆÂâç„Å´ARM„Å´„Å§„ÅÑ„Å¶Â∞ë„ÅóËß£Ë™¨„Åô„Çã„ÄÇARM„ÅØAzure Resource Manager„ÅÆÁï•„Åß„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÊßãÁØâ„Å´ÂøÖË¶Å„Å™\n„É™„ÇΩ„Éº„ÇπÔºà„Çπ„Éà„É¨„Éº„Ç∏„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÄÅ„Ç≥„É≥„Éî„É•„Éº„Éà/‰ªÆÊÉ≥„Éû„Ç∑„É≥„Å™„Å©Ôºâ„Çí„Éá„Éó„É≠„Ç§„ÅóÁÆ°ÁêÜ„Åô„Çã„Åü„ÇÅ„ÅÆ‰ªïÁµÑ„Åø„Åß„ÅÇ„Çã„ÄÇ„Å©„Çì„Å™„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„ÅÆ„Éá„Éó„É≠„Ç§„Å´„Åä„ÅÑ„Å¶„ÇÇÂ∞ë„Å™„Åã„Çâ„Åö‰ªÆÊÉ≥„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÄÅ‰ªÆÊÉ≥„Éû„Ç∑„É≥„ÄÅ„Çπ„Éà„É¨„Éº„Ç∏„ÄÅLB„Å™„Å©„ÅÆ„Ç§„É≥„Éï„É©„ÅÆÊßãÁØâ„ÅåÂøÖË¶Å„ÅßÊóßÊù•„ÅÆ„ÇÑ„ÇäÊñπ„Åß„ÅØ„Åì„Çå„Çâ„ÇíÔºë„Å§Ôºë„Å§„Éá„Éó„É≠„Ç§„Åó„Å¶„ÅÑ„Åü„Åã„Å®ÊÄù„ÅÜ„ÄÇ‰∏ÄÊñπARM„ÅÆ‰∏ñÁïå„Åß„ÅØÂøÖË¶Å„Å™ÊßãÁØâË¶ÅÁ¥†„Çí„É™„ÇΩ„Éº„Çπ„Å®„ÅÑ„ÅÜÂçò‰Ωç„Å´„Åó„Å¶„ÄÅ„Åì„Çå„Çâ„É™„ÇΩ„Éº„Çπ„ÇíÂÄãÂà•„Å´„Éá„Éó„É≠„Ç§„Åô„Çã„ÅÆ„Åß„ÅØ„Å™„ÅèÂÖ®„Å¶„ÅÆ„É™„ÇΩ„Éº„Çπ„Çí„Ç∞„É´„Éº„ÉóÂåñ„Åó„Å¶„Åæ„Å®„ÇÅ„Å¶„Éá„Éó„É≠„Ç§„Åó„ÄÅ„Åù„Çå„Çâ„ÇíÁÆ°ÁêÜ„ÉªÁõ£Ë¶ñ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ„Åù„Åó„Å¶„ÄÅ„Åù„Çå„ÇâË§áÊï∞„ÅÆ„É™„ÇΩ„Éº„Çπ„ÅØJSONÂΩ¢Âºè„ÅÆ„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅßË°®Áèæ„ÉªÂ±ïÈñã„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Å£„Å¶„ÅÑ„Å¶„ÄÅ„Åì„ÅÆ„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅÆ„Åì„Å®„ÇíARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å®Âëº„Å∂„ÄÇInfrastructure as Code„Å™„Çì„Å¶Ë®ÄËëâ„Åå„ÅØ„ÇÑ„Å£„Å¶„ÅÑ„Åü„Çä„Åô„Çã„Åå„ÄÅ„Åæ„Åï„Å´„Åù„Çå„ÇíAzure„ÅßÂÆüÁèæ„Åô„Çã„Åü„ÇÅ„ÅÆÂÖ¨Âºè„Å™‰ªïÁµÑ„Åø„ÅåARM„Åß„ÅÇ„Çä„ÄÅARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å™„ÅÆ„Åß„ÅÇ„Çã„ÄÇ\n„Å°„Å™„Åø„Å´„Åì„ÅÆARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÄÅÊâã„Åß„ÅÑ„Å°„Åã„Çâ‰Ωú„ÇãÂøÖË¶Å„ÅØ„Å™„Åè„ÄÅAzure„ÇØ„Ç§„ÉÉ„ÇØ„Çπ„Çø„Éº„Éà„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å´„Åï„Åæ„Åñ„Åæ„Å™„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅåÂÖ¨Èñã„Åï„Çå„Å¶„ÅÑ„Çã„ÅÆ„Åß„Åæ„Åö„ÅØËá™ÂàÜ„ÅÆÁõÆÁöÑ„Å´‰ºº„Åü„Çà„ÅÜ„Å™„Åì„Å®„ÇíÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÈÅ∏„Çì„Åß„Éá„Éó„É≠„Ç§„Åó„Å¶„Åø„Çã„Åì„Å®„Çí„ÅäÂãß„ÇÅ„Åô„Çã„ÄÇÂÆåÊàê„Åï„Çå„Åü„ÇÇ„ÅÆ„ÇíË¶ã„Çã„Åì„Å®„Åß„Åä‰ΩúÊ≥ï„ÅåÂ≠¶„Åπ„Çã„Åó„ÄÅ„Åù„Çå„Çí„Éô„Éº„Çπ„Å´„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åó„Å¶„ÅÑ„Åè„ÅÆ„ÅåÂäπÁéáÁöÑ„Åß„ÅÇ„Çã„ÄÇ\nhttps://azure.microsoft.com/ja-jp/documentation/templates/ https://github.com/Azure/azure-quickstart-templates Elasticsearch„ÇØ„É©„Çπ„Çø„ÅÆ„Éá„Éó„É≠„Ç§ ‰∏äË®ò„ÅßË™¨Êòé„Åó„ÅüARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÂà©Áî®„Åó„Å¶Elasticsearch„ÇØ„É©„Çπ„Çø„ÅÆ„Éá„Éó„É≠„Ç§„ÇíË°å„ÅÜ„ÄÇ„Åì„Åì„Åß‰Ωø„ÅÜARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅØAzure„ÇØ„Ç§„ÉÉ„ÇØ„Éª„Çπ„Çø„Éº„Éà„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇÆ„É£„É©„É™„Éº„Å´„ÅÇ„ÇãElasticsearch„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÂà©Áî®„Åô„Çã„ÄÇARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Çí‰Ωø„Å£„Åü„Éá„Éó„É≠„Ç§„Å´„ÅØË§áÊï∞„ÅÆÊñπÊ≥ï„Åå„ÅÇ„Çã„Åå„Åì„Åì„Åß„ÅØLinux‰∏ä„ÅßAzure CLI„Çí‰Ωø„Å£„ÅüÊñπÊ≥ï„ÅßË°å„ÅÜ„ÄÇ„Åì„Åì„Åß„ÅÆÂÆüË°åOS„ÅØUbuntu 14.10„ÄÇ\nÊúÄÊñ∞Áâà„ÅÆAzure CLI„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„Åã„ÇâAzure„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥„Å´Êé•Á∂ö„Åô„Çã\n$ sudo npm install -g azure-cli $ azure --version $ azure login „ÄåAzure „Ç≥„Éû„É≥„Éâ „É©„Ç§„É≥ „Ç§„É≥„Çø„Éº„Éï„Çß„Ç§„Çπ (Azure CLI) „Åã„Çâ„ÅÆ Azure „Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥„Å∏„ÅÆÊé•Á∂ö„Äç„Å´Êõ∏„Åã„Çå„Å¶„ÅÑ„Çã„Çà„ÅÜ„Å´„ÄÅAzure CLI „Éê„Éº„Ç∏„Éß„É≥ 0.9.10 ‰ª•Èôç„Åß„ÅØ„ÄÅÂØæË©±Âûã„ÅÆ azure login „Ç≥„Éû„É≥„Éâ„Çí‰ΩøÁî®„Åó„Å¶„ÄÅ‰ªªÊÑè„ÅÆ ID „Åß„Ç¢„Ç´„Ç¶„É≥„Éà„Å´„É≠„Ç∞„Ç§„É≥„Åß„Åç„Çã„ÄÇÂ∞ö„ÄÅ„Éê„Éº„Ç∏„Éß„É≥ 0.9.9 ‰ª•Èôç„ÅØ„ÄÅÂ§öË¶ÅÁ¥†Ë™çË®º„Çí„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„Çã„ÄÇ\n„Éá„Éó„É≠„Ç§Áî®„ÅÆ„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„Çí‰ΩúÊàê„Åô„Çã\n„Åì„Åì„Åß„ÅØË•øÊó•Êú¨ÔºàJapan WestÔºâ„É™„Éº„Ç∏„Éß„É≥„Å´Resource-ES-JapanWest„Å®„ÅÑ„ÅÜÂêçÂâç„ÅÆ„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„Çí‰ΩúÊàê„Åô„Çã„ÄÇ\n# azure group create -n \u0026#34;\u0026lt;„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„ÉóÂêç\u0026gt;\u0026#34; -l \u0026#34;\u0026lt;„É™„Éº„Ç∏„Éß„É≥Âêç\u0026gt;\u0026#34; $ azure group create -n \u0026#34;Resource-ES-JapanWest\u0026#34; -l \u0026#34;Japan West\u0026#34; ARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅÆ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Å®„Éë„É©„É°„Éº„Çø„ÅÆÁ∑®ÈõÜ\nGithub„Çà„Çäazure-quickstart-templates„Çí„Ç≥„Éî„Éº„Åó„Å¶„ÄÅElasticsearchÁî®„ÉÜ„É≥„Éó„É¨„Éº„Éà„Éá„Ç£„É¨„ÇØ„Éà„É™„Å´ÁßªÂãï„Åô„Çã\n$ git clone https://github.com/Azure/azure-quickstart-templates.git $ cd azure-quickstart-template/elasticsearch azuredeploy.parameters.json„ÇíÁ∑®ÈõÜ„Åó„Å¶„Éá„Éó„É≠„Ç§Áî®„Éë„É©„É°„Éº„Çø„ÇíÂÖ•Âäõ„Åô„Çã„ÄÇ„Åì„Åì„Åß„ÅÆÂÖ•ÂäõÂÜÖÂÆπ„ÅØ‰∏ãË®ò„ÅÆ„Å®„Åä„Çä\n{ \u0026#34;$schema\u0026#34;: \u0026#34;http://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#\u0026#34;, \u0026#34;contentVersion\u0026#34;: \u0026#34;1.0.0.0\u0026#34;, \u0026#34;parameters\u0026#34;: { \u0026#34;adminUsername\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;yoichika\u0026#34; # ÁÆ°ÁêÜÁî®„É¶„Éº„Ç∂Âêç }, \u0026#34;adminPassword\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;*********\u0026#34; # ‰∏äË®òÁÆ°ÁêÜ„É¶„Éº„Ç∂„Éë„Çπ„ÉØ„Éº„Éâ }, \u0026#34;vmDataNodeCount\u0026#34;: { \u0026#34;value\u0026#34;: 3 # „Éá„Éº„Çø„Éé„Éº„ÉâÊï∞ }, \u0026#34;virtualNetworkName\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;esvnet\u0026#34; # ‰ªÆÊÉ≥„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÂêç }, \u0026#34;esClusterName\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;elasticsearch\u0026#34; # ES„ÇØ„É©„Çπ„ÇøÂêç }, \u0026#34;loadBalancerType\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;internal\u0026#34; # LB„Çø„Ç§„Éó external or internal }, \u0026#34;vmSizeDataNodes\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;Standard_D1\u0026#34; # „Éá„Éº„Çø„Éé„Éº„ÉâÁî®„ÅÆVM„Ç§„É≥„Çπ„Çø„É≥„Çπ„Çµ„Ç§„Ç∫ }, \u0026#34;vmClientNodeCount\u0026#34;: { \u0026#34;value\u0026#34;: 0 #„ÇØ„É©„Ç§„Ç¢„É≥„Éà„Éé„Éº„ÉâÊï∞ }, \u0026#34;marvel\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;no\u0026#34; # MarvelÊúâÂäπÂåñ: yes or no }, \u0026#34;kibana\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;yes\u0026#34; # KibanaÊúâÂäπÂåñ: yes or no }, \u0026#34;OS\u0026#34;: { \u0026#34;value\u0026#34;: \u0026#34;ubuntu\u0026#34; } } } ARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÂÖÉ„Å´„ÇØ„É©„Çπ„Çø„ÅÆ„Éá„Éó„É≠„Ç§\n‰∏ÄÈÄö„ÇäÊ∫ñÂÇô„ÅåÊï¥„Å£„Åü„ÅÆ„ÅßARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÂÖÉ„Å´‰∏äË®ò„Åß‰ΩúÊàê„Åó„Åü„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„Å´ES„ÇØ„É©„Çπ„Çø„Çí„Éá„Éó„É≠„Ç§„Åô„Çã„ÄÇ\n# azure group create \u0026#34;\u0026lt;resource groupÂêç\u0026gt;\u0026#34; \u0026#34;\u0026lt;„É™„Éº„Ç∏„Éß„É≥\u0026gt;\u0026#34; \\ # -f \u0026lt;azuredeploy.json„Éï„Ç°„Ç§„É´\u0026gt; # -d \u0026#34;\u0026lt;deployÂêç\u0026gt;\u0026#34; # -e \u0026lt;azuredeploy.parameters.json„Éï„Ç°„Ç§„É´\u0026gt; $ azure group create \u0026#34;Resource-ES-JapanWest\u0026#34; \u0026#34;JapanWest\u0026#34; \\ -f azuredeploy.json \\ -d \u0026#34;Deploy-ES-JapanWest\u0026#34; \\ -e azuredeploy.parameters.json ÈÄî‰∏≠„ÅÆ„Éá„Éó„É≠„Ç§„É°„É≥„ÉàÁä∂Ê≥Å„ÅØÊ¨°„ÅÆ„Ç≥„Éû„É≥„Éâ„ÅßÁ¢∫Ë™ç„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ\n# azure group deployment show \u0026#34;\u0026lt;Resource groupÂêç\u0026gt;\u0026#34; \u0026#34;\u0026lt;deploymentÂêç\u0026gt;\u0026#34; $ azure group deployment show \u0026#34;Resource-ES-JapanWest\u0026#34; \u0026#34;Deploy-ES-JapanWest\u0026#34; ‰∏äË®ò„Ç≥„Éû„É≥„Éâ„ÅÆÂá¶ÁêÜ„ÅåÂÆå‰∫Ü„Åô„Çå„Å∞„Éá„Éó„É≠„Ç§ÂÆå‰∫Ü„ÄÇ„Åü„Å£„Åü„Åì„Çå„Å†„Åë„ÄÇÂá∫Êù•‰∏ä„Åå„Å£„ÅüÊßãÊàê„Å†„Åå„ÄÅÊâã„Å£Âèñ„ÇäÊó©„Åè„ÅØAzure„Éù„Éº„Çø„É´„ÅßÁ¢∫Ë™ç„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ„Éá„Éó„É≠„Ç§Áî®„Å´‰ΩúÊàê„Åó„Åü„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„ÉóÔºà„Åì„Åì„Åß„ÅØResource-ES-JapanWestÔºâ„ÅÆ‰∏≠Ë∫´„ÇíË¶ã„Å¶„ÅÑ„Åü„Å†„Åè„Å®„Éá„Éó„É≠„Ç§„Åï„Çå„ÅüÊßò„ÄÖ„Å™„É™„ÇΩ„Éº„Çπ‰∏ÄË¶ßÔºà„Çπ„Éà„É¨„Éº„Ç∏„ÄÅ‰ªÆÊÉ≥„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÄÅ„É≠„Éº„Éâ„Éê„É©„É≥„Çµ„Éº„ÄÅ‰ªÆÊÉ≥„Éû„Ç∑„É≥„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç∞„É´„Éº„Éó„ÄÅ„Éë„Éñ„É™„ÉÉ„ÇØÁî®IP„Éª„Éª„Éª„Å™„Å©Ôºâ„ÅåÂá∫Êù•‰∏ä„Åå„Å£„Å¶„ÅÑ„Çã„Åì„Å®„ÅåÂàÜ„Åã„Çã„ÄÇÂ∞ö„ÄÅÂá∫Êù•‰∏ä„Åå„Å£„ÅüES„ÇØ„É©„Çπ„Çø„ÅØÂêàË®à8VM„ÅßÊßãÊàê„Åï„Çå„Å¶„Åä„Çä„ÄÅES„Éû„Çπ„Çø„Éº„Éé„Éº„ÉâÁî®„Å´3„Å§„ÄÅES„Éá„Éº„Çø„Éé„Éº„ÉâÁî®„Å´3„Å§„ÄÅKibanaÁî®„Å´Ôºë„Å§„ÄÅË∏è„ÅøÂè∞„Çµ„Éº„ÉêÁî®„Å´Ôºë„Å§„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ‰ªÆÊÉ≥„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÂÜÖ„ÅÆVM„ÅÆÈÖçÁΩÆÁä∂Ê≥Å„ÇíÂõ≥„Å´„Åô„Çã„Å®Ê¨°„ÅÆ„Çà„ÅÜ„Å´„Å™„Çã„ÄÇ\n„ÉÜ„Çπ„ÉàÂÆüË°å „ÉÜ„Çπ„ÉàÁî®„ÅÆ„Éá„Éº„Çø„Çª„ÉÉ„Éà„ÇíÊäïÂÖ•„Åó„Å¶„ÄÅÂïèÈ°å„Å™„Åè„ÇØ„É©„Çπ„Çø„ÅåÂãï‰Ωú„Åô„Çã„ÅÆ„Åã„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åø„Çã„ÄÇ„Éá„Éº„Çø„ÅØ„Åì„Å°„Çâ„Åß„ÉÜ„Çπ„Éà„Å´Êèê‰æõ„Åï„Çå„Å¶„ÅÑ„Çã shakespeare.json„ÇíÂà©Áî®„Åô„Çã„ÄÇshakespeare.json„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„ÉâÊ∏à„Åø„Åß„ÅÇ„Çã„Åì„Å®ÂâçÊèê„Å´‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´ES„ÇØ„É©„Çπ„Çø„Å´„Éá„Éº„Çø„ÇíÊäïÂÖ•„Åô„Çã„ÄÇ\n„Åæ„Åö„ÅØshakespeare„Éá„Éº„Çø„Çª„ÉÉ„Éà„ÅÆ„Åü„ÇÅ„Å´„Éï„Ç£„Éº„É´„Éâ„ÅÆMapping„ÇíÂÆüË°å\ncurl -XPUT http://\u0026lt;ES„Éé„Éº„Éâ„ÅÆ„Ç¢„Éâ„É¨„Çπ\u0026gt;:9200/shakespeare -d \u0026#39; { \u0026#34;mappings\u0026#34; : { \u0026#34;_default_\u0026#34; : { \u0026#34;properties\u0026#34; : { \u0026#34;speaker\u0026#34; : {\u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;index\u0026#34; : \u0026#34;not_analyzed\u0026#34; }, \u0026#34;play_name\u0026#34; : {\u0026#34;type\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;index\u0026#34; : \u0026#34;not_analyzed\u0026#34; }, \u0026#34;line_id\u0026#34; : { \u0026#34;type\u0026#34; : \u0026#34;integer\u0026#34; }, \u0026#34;speech_number\u0026#34; : { \u0026#34;type\u0026#34; : \u0026#34;integer\u0026#34; } } } } } \u0026#39;; Ê¨°„Å´shakespeare„Éá„Éº„Çø„Çª„ÉÉ„Éà„ÇíES„ÇØ„É©„Çπ„Çø„Å´„É≠„Éº„Éâ„ÄÇ\n$ curl -XPOST \u0026#34;\u0026lt;ES„Éé„Éº„Éâ„ÅÆ„Ç¢„Éâ„É¨„Çπ\u0026gt;:9200/shakespeare/_bulk?pretty\u0026#34; --data-binary @shakespeare.json ‰∏äË®òÂá¶ÁêÜÂÆå‰∫ÜÂæåÁÑ°‰∫ã„É≠„Éº„Éâ„ÅåÂÆå‰∫Ü„Åó„Åü„Åã„Å©„ÅÜ„Åã„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆ„Çπ„ÉÜ„Éº„Çø„Çπ„ÇíÁ¢∫Ë™ç„Åô„Çã„ÄÇ\n$ curl \u0026#39;\u0026lt;ES„Éé„Éº„Éâ„ÅÆ„Ç¢„Éâ„É¨„Çπ\u0026gt;:9200/_cat/indices?v\u0026#39; (ÁµêÊûú) health status index pri rep docs.count docs.deleted store.size pri.store.size green open shakespeare 5 1 111396 0 36.2mb 18mb green open .kibana 1 1 2 0 35.6kb 17.8kb Âøµ„ÅÆ„Åü„ÇÅ„Å´Ê§úÁ¥¢„ÇØ„Ç®„É™„Éº„ÇíÊäï„Åí„Å¶„Åø„Çã„ÄÇ\n$ curl -s \u0026#39;\u0026lt;ES„Éé„Éº„Éâ„ÅÆ„Ç¢„Éâ„É¨„Çπ\u0026gt;:9200/shakespeare/_search?q=*\u0026amp;size=1\u0026#39; | \\ python -mjson.tool| perl -Xpne \u0026#39;s/\\\\u([0-9a-fA-F]{4})/chr(hex($1))/eg\u0026#39; (ÁµêÊûú) { \u0026#34;_shards\u0026#34;: { \u0026#34;failed\u0026#34;: 0, \u0026#34;successful\u0026#34;: 5, \u0026#34;total\u0026#34;: 5 }, \u0026#34;hits\u0026#34;: { \u0026#34;hits\u0026#34;: [ { \u0026#34;_id\u0026#34;: \u0026#34;4904\u0026#34;, \u0026#34;_index\u0026#34;: \u0026#34;shakespeare\u0026#34;, \u0026#34;_score\u0026#34;: 1.0, \u0026#34;_source\u0026#34;: { \u0026#34;line_id\u0026#34;: 4905, \u0026#34;line_number\u0026#34;: \u0026#34;3.3.74\u0026#34;, \u0026#34;play_name\u0026#34;: \u0026#34;Henry VI Part 1\u0026#34;, \u0026#34;speaker\u0026#34;: \u0026#34;JOAN LA PUCELLE\u0026#34;, \u0026#34;speech_number\u0026#34;: 18, \u0026#34;text_entry\u0026#34;: \u0026#34;See, then, thou fightst against thy countrymen\u0026#34; }, \u0026#34;_type\u0026#34;: \u0026#34;line\u0026#34; } ], \u0026#34;max_score\u0026#34;: 1.0, \u0026#34;total\u0026#34;: 111396 }, \u0026#34;timed_out\u0026#34;: false, \u0026#34;took\u0026#34;: 9 } „Åï„Çâ„Å´Kibana„Å´„Ç¢„ÇØ„Çª„Çπ„Åó„Å¶ES„ÇØ„É©„Çπ„Çø„Å®„ÅÆÈÄ£Êê∫„Å´ÂïèÈ°å„Åå„Å™„ÅÑ„ÅãÁ¢∫Ë™ç„Åô„Çã„ÄÇÂøµ„ÅÆ„Åü„ÇÅ„Å´Kibana„ÅÆ„Ç®„É≥„Éà„É™„Éù„Ç§„É≥„Éà„ÅØhttp://Kibana„Ç¢„Éâ„É¨„Çπ:5601„ÄÇÁâπ„Å´ÂïèÈ°å„Å™„Åë„Çå„Å∞Kibana‰∏ä„ÅßÊ§úÁ¥¢„Åô„Çã„Å®Ê¨°„ÅÆ„Çà„ÅÜ„Å´„ÉÜ„Çπ„Éà„É≠„Éº„Éâ„Åó„Åü„Éá„Éº„Çø„Çª„ÉÉ„Éà„ÅåÈñ≤Ë¶ß„Åß„Åç„Çã„ÅØ„Åö„ÄÇ\nelasticsearch-head„Åß„ÇØ„É©„Çπ„Çø„Éé„Éº„Éâ„ÅÆÁä∂ÊÖã„ÇíÁ¢∫Ë™ç\nelasticsearch-head„ÅØ„ÇØ„É©„Çπ„Çø„ÅÆÊßãÊàê„ÇÑ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆ‰∏≠Ë∫´Ë°®Á§∫„ÄÅÊ§úÁ¥¢„ÇØ„Ç®„É™„ÅÆ‰ΩúÊàê„ÄÅÁµêÊûúÂèñÂæó„Å™„Å©ÊâãËªΩ„Å´Á¢∫Ë™ç„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã‰æøÂà©„Å™GUI„ÉÑ„Éº„É´„ÄÇ„Åì„ÅÆelasticsearch-head„Çí‰Ωø„Å£„Å¶„ÇØ„É©„Çπ„Çø„Éé„Éº„Éâ„ÅÆÁä∂ÊÖã„ÇíÁ¢∫Ë™ç„Åô„Çã„ÄÇ„Ç§„É≥„Çπ„Éà„Éº„É´„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å´„Éó„É©„Ç∞„Ç§„É≥„Ç≥„Éû„É≥„Éâ„ÅßË°å„ÅÜ„ÄÇ\n$ sudo /usr/share/elasticsearch/bin/plugin install mobz/elasticsearch-head elasticsearch-head„ÅÆ„Ç®„É≥„Éà„É™„Éº„Éù„Ç§„É≥„Éà„ÅØhttp://:9200/_plugin/head„ÅßÁµêÊûú„ÅØÊ¨°„ÅÆ„Å®„Åä„Çä„ÄÇ\n„Åì„Çå„ÇíÂàÜ„Åã„Çä„ÇÑ„Åô„Åè„Éà„Éù„É≠„Ç∏„Éº„Å´„Åó„Å¶„Åø„Åü„ÅÆ„Åå‰∏ãÂõ≥„ÄÇÁ∑ë„ÅÆÂ§™Êû†„ÅÆ„Å®„Åì„Çç„Åå„Éó„É©„Ç§„Éû„É™„Éº„Ç∑„É£„Éº„Éâ„ÅßÁ¥∞Êû†„Åå„É¨„Éó„É™„Ç´„Ç∑„É£„Éº„Éâ„ÇíË°®„Åô„ÄÇ\n„Éé„Éº„Éâdiscovery„Å´„Å§„ÅÑ„Å¶ Elasticsearch„ÅØ„Éé„Éº„ÉâdiscoveryÊñπÂºè„Å®„Åó„Å¶„Éá„Éï„Ç©„É´„Éà„Åßmulticast„É¢„Éº„Éâ„Çí‰Ωø„ÅÜ„Çà„ÅÜ„Å´„Å™„Å£„Å¶„Åä„Çä„ÄÅ„Éé„Éº„ÉâÈñì„Åß„ÇØ„É©„Çπ„ÇøÂêçÔºà„Åì„Åì„Åß„ÅØelasticsearchÔºâ„ÇíÂêà„Çè„Åõ„Çã„Åì„Å®„ÅßÂÜÖÈÉ®ÁöÑ„Å´ÂãùÊâã„Å´„ÇØ„É©„Çπ„ÇøÊßãÊàê„ÇíÁµÑ„Çì„Åß„Åè„Çå„Çã„Çà„ÅÜ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ„Åì„ÅÆ„ÇØ„É©„Çπ„ÇøÂÜÖ„Éé„Éº„ÉâÊé¢Á¥¢„ÅØzen discovery„Å®„ÅÑ„ÅÜÊé¢Á¥¢„É¢„Ç∏„É•„Éº„É´„Åå‰Ωø„Çè„Çå„Å¶„ÅÑ„Çã„ÄÇ„Åü„Å†„Åó„ÄÅAzure„ÅÆÂ†¥Âêà„ÅØ‰ªïÁµÑ„Åø‰∏ä„Éû„É´„ÉÅ„Ç≠„É£„Çπ„Éà„ÅåÂà©Áî®„Åß„Åç„Å™„ÅÑÔºà„Åì„Çå„ÅØAWS„Åß„ÇÇÂêå„ÅòÔºâ„Åü„ÇÅunicast„É¢„Éº„Éâ„Çí‰Ωø„Å£„Å¶Ë¶ã„Å§„Åë„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ\n„Éé„Éº„ÉâdiscoveryÊñπÂºè„ÅØelasticsearch„ÅÆË®≠ÂÆö„Éï„Ç°„Ç§„É´elasticsearch.yml„Å´ÊåáÂÆö„Åó„ÄÅunicast„É¢„Éº„Éâ„ÅÆÂ†¥Âêà„ÅØdiscovery.zen.ping.unicast.hosts„Éë„É©„É°„Çø„Éº„Å´„Éé„Éº„ÉâÁæ§„ÅÆIP„Çí„Ç´„É≥„ÉûÂå∫Âàá„Çä„ÅßÊåáÂÆö„Åô„Çã„ÄÇÂèÇËÄÉ„Åæ„Åß„Å´‰ªäÂõû„ÅÆ„Éá„Éº„Çø„Éé„Éº„Éâ„ÅÆelasticsearch.yml„Åß„ÅØ‰∏ãË®ò„ÅÆ„Çà„ÅÜ„Å´3„Å§„ÅÆ„Éá„Éº„Çø„Éé„Éº„Éâ„ÅÆIP„Çídiscovery.zen.ping.unicast.hosts„Å´ÊåáÂÆö„Åó„Å¶„ÅÑ„Çã„ÄÇ\n/etc/elasticsearch/elasticsearch.yml cluster.name: elasticsearch node.name: esdatavm0 path.data: /datadisks/disk2/elasticsearch/data,/datadisks/disk1/elasticsearch/data discovery.zen.ping.multicast.enabled: false discovery.zen.ping.unicast.hosts: [\u0026#34;10.0.0.10\u0026#34;,\u0026#34;10.0.0.11\u0026#34;,\u0026#34;10.0.0.12\u0026#34;] node.master: false node.data: true discovery.zen.minimum_master_nodes: 2 network.host: _non_loopback_ Azure Cloud plugin„ÅÆÁ¥π‰ªã ÊúÄÂæå„Å´Azure Cloud plugin„ÅÆÁ¥π‰ªã„Çí„Åó„Åü„ÅÑ„ÄÇ„Åì„Çå„ÅØAzure API„Çí‰Ωø„Å£„Å¶Ëá™Âãï„ÅßAzure„Å´Â±ïÈñã„Åï„Çå„Åü„Éé„Éº„Éâ„ÅÆÊé¢Á¥¢„ÇíË°å„ÅÜ„Åì„Å®„Åå„Åß„Åç„Çã„Éé„Éº„Éâdiscovery„Éó„É©„Ç∞„Ç§„É≥„Åß„ÄÅunicast„É¢„Éº„Éâ„ÅÆ„Çà„ÅÜ„Å´„Éé„Éº„ÉâIP„Çí„ÅÑ„Å°„ÅÑ„Å°ÊåáÂÆö„Åô„ÇãÂøÖË¶Å„Åå„Å™„ÅÑÁÇπ„Åßmulticast„É¢„Éº„Éâ„Å´‰ºº„Å¶„ÅÑ„Çã„ÄÇ„Åü„Å†„ÅóÊ≥®ÊÑèÁÇπ„Å®„Åó„Å¶„Åì„ÅÆ„Éó„É©„Ç∞„Ç§„É≥„ÅØ„ÇØ„É©„Ç∑„ÉÉ„ÇØ„Éá„Éó„É≠„Ç§„É¢„Éá„É´ÁÆ°ÁêÜ‰∏ã„ÅÆ„É™„ÇΩ„Éº„ÇπÔºàV1Ôºâ„ÅÆ„Åø„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ„Çà„Å£„Å¶„ÄÅ‰ªäÂõû„ÅÆ„Çà„ÅÜ„Å´ARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Åß„Éá„Éó„É≠„Ç§„Åó„ÅüES„ÇØ„É©„Çπ„Çø„ÅØÂØæË±°Â§ñ„Åß„ÅÇ„Çã„Åå„ÄÅ„ÇÇ„Åó„ÇØ„É©„Ç∑„ÉÉ„ÇØ„É¢„Éá„É´„Åß„Éá„Éó„É≠„Ç§„Åó„ÅüES„ÇØ„É©„Çπ„Çø„Åß„ÅÇ„Çå„Å∞„Éé„Éº„ÉâdiscoveryÊñπÂºè„ÅÆÔºë„Å§„Å®„Åó„Å¶ÊòØÈùû„ÅäË©¶„Åó„ÅÑ„Åü„Å†„Åë„Çå„Å∞„Å®ÊÄù„ÅÜ„ÄÇ\nEnjoy Elasticsearch on Azure!!\n„Åä„Çè„Çä\nLINKS Azure„ÇØ„Ç§„ÉÉ„ÇØ„Çπ„Çø„Éº„Éà„ÉÜ„É≥„Éó„É¨„Éº„Éà Elasticsearch ARM„ÉÜ„É≥„Éó„É¨„Éº„Éà ARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíAzure CLI „Åß„Éá„Éó„É≠„Ç§„Åô„Çã Azure „É™„ÇΩ„Éº„Çπ „Éû„Éç„Éº„Ç∏„É£„Éº„Åß„ÅÆAzure CLI „ÅÆ‰ΩøÁî® Getting Started with Kibana Elasticsearch from the Top Down elasticsearch-head zen discovery Azure Cloud Plugin ","permalink":"https://unofficialism.info/posts/deploy-elasticsearch-cluster-in-azure-using-arm-template/","summary":"„Åì„Çå„ÅØElasticsearch Advent Calendar 2015„ÅÆ17Êó•ÁõÆ„ÅÆ„Ç®„É≥„Éà„É™„Éº\nARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å®Âëº„Å∞„Çå„Çã„Éá„Éó„É≠„Ç§ÊâãÊ≥ï„Çí‰Ωø„Å£„Å¶Azure‰∏ä„Å´Elasticsearch„ÇØ„É©„Çπ„Çø„Çí„Åï„Åè„Å£„Å®ÊßãÁØâ„Åô„ÇãÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶„ÅÆ„ÅäË©±„Åß„ÄÅ‰∏ª„Å´AzureÁïåÈöà„ÅÆElasticsearch„É¶„Éº„Ç∂Âêë„Åë„ÅÆÂÜÖÂÆπ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ„Çø„Ç§„Éà„É´„Å´„ÅÇ„Çã3ÂàÜ„Åß„Å®„ÅÑ„ÅÜ„ÅÆ„ÅØÂÆüÈöõ„Å´Ë®à„Å£„Åü„Çè„Åë„Åß„ÅØ„Å™„ÅÑ„Åå„Åù„Çå„Åè„Çâ„ÅÑÁ∞°Âçò‰∏î„Å§Áü≠ÊôÇÈñì„Åß„Åß„Åç„Çã„Åì„Å®„ÇíÂº∑Ë™ø„Åó„Åü„Åè‰Ωø„Çè„Åõ„Å¶„ÅÑ„Åü„Å†„ÅÑ„Å¶„ÅÑ„Çã„Éª„Éª„Éª„Å®„ÅÑ„ÅÜ„Åì„Å®„ÇíÂâç„ÇÇ„Å£„Å¶Ë£úË∂≥„Åó„Å¶„Åä„ÅèÔºàÊ±óÔºâ„ÄÇ\nARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å®„ÅØÔºü ARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅÆÂâç„Å´ARM„Å´„Å§„ÅÑ„Å¶Â∞ë„ÅóËß£Ë™¨„Åô„Çã„ÄÇARM„ÅØAzure Resource Manager„ÅÆÁï•„Åß„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÊßãÁØâ„Å´ÂøÖË¶Å„Å™\n„É™„ÇΩ„Éº„ÇπÔºà„Çπ„Éà„É¨„Éº„Ç∏„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÄÅ„Ç≥„É≥„Éî„É•„Éº„Éà/‰ªÆÊÉ≥„Éû„Ç∑„É≥„Å™„Å©Ôºâ„Çí„Éá„Éó„É≠„Ç§„ÅóÁÆ°ÁêÜ„Åô„Çã„Åü„ÇÅ„ÅÆ‰ªïÁµÑ„Åø„Åß„ÅÇ„Çã„ÄÇ„Å©„Çì„Å™„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„ÅÆ„Éá„Éó„É≠„Ç§„Å´„Åä„ÅÑ„Å¶„ÇÇÂ∞ë„Å™„Åã„Çâ„Åö‰ªÆÊÉ≥„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÄÅ‰ªÆÊÉ≥„Éû„Ç∑„É≥„ÄÅ„Çπ„Éà„É¨„Éº„Ç∏„ÄÅLB„Å™„Å©„ÅÆ„Ç§„É≥„Éï„É©„ÅÆÊßãÁØâ„ÅåÂøÖË¶Å„ÅßÊóßÊù•„ÅÆ„ÇÑ„ÇäÊñπ„Åß„ÅØ„Åì„Çå„Çâ„ÇíÔºë„Å§Ôºë„Å§„Éá„Éó„É≠„Ç§„Åó„Å¶„ÅÑ„Åü„Åã„Å®ÊÄù„ÅÜ„ÄÇ‰∏ÄÊñπARM„ÅÆ‰∏ñÁïå„Åß„ÅØÂøÖË¶Å„Å™ÊßãÁØâË¶ÅÁ¥†„Çí„É™„ÇΩ„Éº„Çπ„Å®„ÅÑ„ÅÜÂçò‰Ωç„Å´„Åó„Å¶„ÄÅ„Åì„Çå„Çâ„É™„ÇΩ„Éº„Çπ„ÇíÂÄãÂà•„Å´„Éá„Éó„É≠„Ç§„Åô„Çã„ÅÆ„Åß„ÅØ„Å™„ÅèÂÖ®„Å¶„ÅÆ„É™„ÇΩ„Éº„Çπ„Çí„Ç∞„É´„Éº„ÉóÂåñ„Åó„Å¶„Åæ„Å®„ÇÅ„Å¶„Éá„Éó„É≠„Ç§„Åó„ÄÅ„Åù„Çå„Çâ„ÇíÁÆ°ÁêÜ„ÉªÁõ£Ë¶ñ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ„Åù„Åó„Å¶„ÄÅ„Åù„Çå„ÇâË§áÊï∞„ÅÆ„É™„ÇΩ„Éº„Çπ„ÅØJSONÂΩ¢Âºè„ÅÆ„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅßË°®Áèæ„ÉªÂ±ïÈñã„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Å£„Å¶„ÅÑ„Å¶„ÄÅ„Åì„ÅÆ„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅÆ„Åì„Å®„ÇíARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å®Âëº„Å∂„ÄÇInfrastructure as Code„Å™„Çì„Å¶Ë®ÄËëâ„Åå„ÅØ„ÇÑ„Å£„Å¶„ÅÑ„Åü„Çä„Åô„Çã„Åå„ÄÅ„Åæ„Åï„Å´„Åù„Çå„ÇíAzure„ÅßÂÆüÁèæ„Åô„Çã„Åü„ÇÅ„ÅÆÂÖ¨Âºè„Å™‰ªïÁµÑ„Åø„ÅåARM„Åß„ÅÇ„Çä„ÄÅARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å™„ÅÆ„Åß„ÅÇ„Çã„ÄÇ\n„Å°„Å™„Åø„Å´„Åì„ÅÆARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÄÅÊâã„Åß„ÅÑ„Å°„Åã„Çâ‰Ωú„ÇãÂøÖË¶Å„ÅØ„Å™„Åè„ÄÅAzure„ÇØ„Ç§„ÉÉ„ÇØ„Çπ„Çø„Éº„Éà„ÉÜ„É≥„Éó„É¨„Éº„Éà„Å´„Åï„Åæ„Åñ„Åæ„Å™„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅåÂÖ¨Èñã„Åï„Çå„Å¶„ÅÑ„Çã„ÅÆ„Åß„Åæ„Åö„ÅØËá™ÂàÜ„ÅÆÁõÆÁöÑ„Å´‰ºº„Åü„Çà„ÅÜ„Å™„Åì„Å®„ÇíÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÈÅ∏„Çì„Åß„Éá„Éó„É≠„Ç§„Åó„Å¶„Åø„Çã„Åì„Å®„Çí„ÅäÂãß„ÇÅ„Åô„Çã„ÄÇÂÆåÊàê„Åï„Çå„Åü„ÇÇ„ÅÆ„ÇíË¶ã„Çã„Åì„Å®„Åß„Åä‰ΩúÊ≥ï„ÅåÂ≠¶„Åπ„Çã„Åó„ÄÅ„Åù„Çå„Çí„Éô„Éº„Çπ„Å´„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åó„Å¶„ÅÑ„Åè„ÅÆ„ÅåÂäπÁéáÁöÑ„Åß„ÅÇ„Çã„ÄÇ\nhttps://azure.microsoft.com/ja-jp/documentation/templates/ https://github.com/Azure/azure-quickstart-templates Elasticsearch„ÇØ„É©„Çπ„Çø„ÅÆ„Éá„Éó„É≠„Ç§ ‰∏äË®ò„ÅßË™¨Êòé„Åó„ÅüARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÂà©Áî®„Åó„Å¶Elasticsearch„ÇØ„É©„Çπ„Çø„ÅÆ„Éá„Éó„É≠„Ç§„ÇíË°å„ÅÜ„ÄÇ„Åì„Åì„Åß‰Ωø„ÅÜARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅØAzure„ÇØ„Ç§„ÉÉ„ÇØ„Éª„Çπ„Çø„Éº„Éà„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇÆ„É£„É©„É™„Éº„Å´„ÅÇ„ÇãElasticsearch„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÇíÂà©Áî®„Åô„Çã„ÄÇARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Çí‰Ωø„Å£„Åü„Éá„Éó„É≠„Ç§„Å´„ÅØË§áÊï∞„ÅÆÊñπÊ≥ï„Åå„ÅÇ„Çã„Åå„Åì„Åì„Åß„ÅØLinux‰∏ä„ÅßAzure CLI„Çí‰Ωø„Å£„ÅüÊñπÊ≥ï„ÅßË°å„ÅÜ„ÄÇ„Åì„Åì„Åß„ÅÆÂÆüË°åOS„ÅØUbuntu 14.10„ÄÇ\nÊúÄÊñ∞Áâà„ÅÆAzure CLI„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„Åã„ÇâAzure„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥„Å´Êé•Á∂ö„Åô„Çã\n$ sudo npm install -g azure-cli $ azure --version $ azure login „ÄåAzure „Ç≥„Éû„É≥„Éâ „É©„Ç§„É≥ „Ç§„É≥„Çø„Éº„Éï„Çß„Ç§„Çπ (Azure CLI) „Åã„Çâ„ÅÆ Azure „Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥„Å∏„ÅÆÊé•Á∂ö„Äç„Å´Êõ∏„Åã„Çå„Å¶„ÅÑ„Çã„Çà„ÅÜ„Å´„ÄÅAzure CLI „Éê„Éº„Ç∏„Éß„É≥ 0.9.10 ‰ª•Èôç„Åß„ÅØ„ÄÅÂØæË©±Âûã„ÅÆ azure login „Ç≥„Éû„É≥„Éâ„Çí‰ΩøÁî®„Åó„Å¶„ÄÅ‰ªªÊÑè„ÅÆ ID „Åß„Ç¢„Ç´„Ç¶„É≥„Éà„Å´„É≠„Ç∞„Ç§„É≥„Åß„Åç„Çã„ÄÇÂ∞ö„ÄÅ„Éê„Éº„Ç∏„Éß„É≥ 0.9.9 ‰ª•Èôç„ÅØ„ÄÅÂ§öË¶ÅÁ¥†Ë™çË®º„Çí„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„Çã„ÄÇ\n„Éá„Éó„É≠„Ç§Áî®„ÅÆ„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„Çí‰ΩúÊàê„Åô„Çã\n„Åì„Åì„Åß„ÅØË•øÊó•Êú¨ÔºàJapan WestÔºâ„É™„Éº„Ç∏„Éß„É≥„Å´Resource-ES-JapanWest„Å®„ÅÑ„ÅÜÂêçÂâç„ÅÆ„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„Çí‰ΩúÊàê„Åô„Çã„ÄÇ\n# azure group create -n \u0026#34;\u0026lt;„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„ÉóÂêç\u0026gt;\u0026#34; -l \u0026#34;\u0026lt;„É™„Éº„Ç∏„Éß„É≥Âêç\u0026gt;\u0026#34; $ azure group create -n \u0026#34;Resource-ES-JapanWest\u0026#34; -l \u0026#34;Japan West\u0026#34; ARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅÆ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Å®„Éë„É©„É°„Éº„Çø„ÅÆÁ∑®ÈõÜ","title":"ARM„ÉÜ„É≥„Éó„É¨„Éº„Éà„Çí‰Ωø„Å£„Å¶3ÂàÜ„ÅßAzure‰∏ä„Å´Elasticsearch„ÇØ„É©„Çπ„Çø„ÇíÊßãÁØâ„Åô„Çã"},{"content":"Azure„ÅåÊèê‰æõ„Åô„ÇãDNS„Å´„Çà„Çã„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„Çµ„Éº„Éì„Çπ„Åß„ÅÇ„ÇãTraffic Manager„Å´„Å§„ÅÑ„Å¶„ÄÅÊó¢„Å´AzureÂà©Áî®„É¶„Éº„Ç∂„Å´‰Ωø„ÅÑÂ∞Ω„Åè„Åï„Çå„Å¶Êñ∞ÈÆÆÂë≥„Å´Ê¨†„Åë„Çã„Çµ„Éº„Éì„Çπ„Åß„ÅØ„ÅÇ„Çã„ÇÇ„ÅÆ„ÅÆ„ÄÅ„Åù„ÅÆ„Ç®„É≥„Éâ„Éù„Ç§„É≥„ÉàÁõ£Ë¶ñ„ÅØTraffic Manager„ÇíÊâ±„ÅÜ‰∏ä„Åß„Å®„Å¶„ÇÇÈáçË¶Å„Å™„Åì„Å®„Å™„ÅÆ„Åß‰ªä‰∏ÄÂ∫¶„Åù„ÅÆ„É´„Éº„É´„Å´„Å§„ÅÑ„Å¶Êï¥ÁêÜ„Åó„Åü„ÅÑ„ÄÇ\nTraffic manager„ÅÆÂÆüÊÖã„ÅØ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÅÆÁõ£Ë¶ñÔºã„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„ÇíË°å„ÅÜDNS„Çµ„Éº„Éì„Çπ„Åß„ÅÇ„Çã„ÄÇ‰ª•‰∏ãdig„ÅÆÁµêÊûú„ÇíË¶ã„Å¶„ÅÑ„Åü„Å†„ÅÑ„Å¶„Çè„Åã„ÇãÈÄö„Çäyoichika-demo1.trafficmanager.net„Å®„ÅÑ„ÅÜÂ§ñÂêë„Åç„ÅÆÂêçÂâç„Å´ÂØæ„Åó„Å¶„Åì„ÅÆÊôÇÁÇπ„Åß„ÅØwebappdemo3.cloudapp.net„ÅåCNAME„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇTraffic Manager„ÅØÂà©Áî®„É¶„Éº„Ç∂„ÅåË®≠ÂÆö„Åó„Åü„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÇíÁõ£Ë¶ñ„Åó„ÄÅ„Åù„ÅÆÁµêÊûú„Å´Âøú„Åò„Å¶ÈÅ©Âàá„Å™„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„ÇíË°å„ÅÜ„ÄÇ„É´„Éº„ÉÜ„Ç£„É≥„Ç∞ÊñπÊ≥ï„Å´„ÅØ„Éï„Çß„Éº„É´„Ç™„Éº„Éê„Éº„ÄÅ„É©„Ç¶„É≥„Éâ„É≠„Éì„É≥„ÄÅ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅÆ3ÈÄö„Çä„Åå„ÅÇ„Çã„ÄÇ„Åì„Çå„Å´„Å§„ÅÑ„Å¶Ë©≥„Åó„Åè„ÅØ„ÄåTraffic Manager„ÅÆ„É´„Éº„ÉÜ„Ç£„É≥„Ç∞ÊñπÊ≥ï„Äç„ÇíÂèÇÁÖß„ÅÑ„Åü„Å†„Åç„Åü„ÅÑ„ÄÇ\n; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.9.5-4.3ubuntu0.1-Ubuntu \u0026lt;\u0026lt;\u0026gt;\u0026gt; yoichika-demo1.trafficmanager.net +noall +answer ;; global options: +cmd yoichika-demo1.trafficmanager.net. 30 IN CNAME webappdemo3.cloudapp.net. webappdemo3.cloudapp.net. 60 IN A 70.37.93.167 Ê¨°„Å´ËÇùÂøÉ„ÅÆ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÅÆÁõ£Ë¶ñ„Å´„Å§„ÅÑ„Å¶„ÄåTraffic Manager „ÅÆÁõ£Ë¶ñ„Å´„Å§„ÅÑ„Å¶„Äç„ÅÆÁõ£Ë¶ñ„Ç∑„Éº„Ç±„É≥„Çπ„Çí‰Ωø„Å£„Å¶Ë¶ÅÁÇπ„ÇíÊï¥ÁêÜ„Åô„Çã„ÄÇ\n„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Å∏„ÅÆProbeÈÄÅ‰ø°(„Éè„Éº„Éà„Éì„Éº„Éà)„ÅØ30„Åî„Å®„Å´ÂÆüË°å Probe„ÅØHTTP 200 OK„Åã„Å©„ÅÜ„Åã„ÅßÂà§ÂÆö 4ÂõûÈÄ£Á∂ö„Åó„Å¶Â§±Êïó„ÅåÁ∂ö„ÅÑ„ÅüÂæå„ÄÅÁõ£Ë¶ñ„Ç∑„Çπ„ÉÜ„É†„ÅØ‰ΩøÁî®‰∏çÂèØ„ÅÆ„ÇØ„É©„Ç¶„Éâ„Çµ„Éº„Éì„Çπ„Çí‰ΩøÁî®‰∏çÂèØ„Å®„Åø„Å™„Åó„Åù„ÅÆ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Å´„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„ÅÆ„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„ÇíË°å„Çè„Å™„ÅÑ(‚ë£„Å´„ÅÇ„Åü„Çã„ÄÇ‚ë•„ÅØÂæåËø∞) DNS „ÅÆÊúâÂäπÊúüÈôê (TTL) „Å´„Çà„ÇäDNS„É™„Çæ„É´„Éê„Éº„ÅßËß£Ê±∫„Åï„Çå„ÅüÂêçÂâç„ÅåDNS „Çµ„Éº„Éê„Éº‰∏ä„Åß„Ç≠„É£„ÉÉ„Ç∑„É•„Åï„Çå„Å¶„ÅÑ„ÇãÊúüÈñì‰ΩøÁî®„Åß„Åç„Å™„ÅÑ„Çµ„Éº„Éì„Çπ„ÅÆ DNS ÊÉÖÂ†±„ÇíÂºï„ÅçÁ∂ö„ÅçÈÖç‰ø°„Åó„Å¶„Åó„Åæ„ÅÜ‚áí„Éà„É©„Éï„Ç£„ÉÉ„ÇØÊ∏õÂ∞ëÊúüÈñì (‚ë•„Å´„ÅÇ„Åü„Çã)„ÄÇDNS„ÅÆTTL„ÅÆÊó¢ÂÆöÂÄ§„ÅØ„ÄÅ300Áßí(5ÂàÜ) „Å§„Åæ„Çä„ÄÅ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Åå„ÉÄ„Ç¶„É≥„Åó„ÅüÂ†¥Âêà„ÄÅProbe„Å´„Çà„Çä‰ΩøÁî®‰∏çÂèØ„Å®„Åø„Å™„Åô„ÅÆ„Å´ÊúÄÂ§ß120Áßí(30Áßí x 4)„ÄÅ„Åï„Çâ„Å´DNS„ÅÆTTL„ÅÆÊúüÈñìÔºàÊó¢ÂÆöÂÄ§„ÅØ300ÁßíÔºâ„ÇíÂä†„Åà„Çã„Å®„ÄÅÂÆåÂÖ®„Å´ÂïèÈ°å„ÅÆ„ÅÇ„Å£„Åü„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Å∏„ÅÆ„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„ÅåÂÅúÊ≠¢„Åô„Çã„Åæ„Åß„Å´Ê®ôÊ∫ñÁöÑ„Å´420Áßí„ÄÅÁ¥Ñ7ÂàÜ„ÅØË¶ã„Å¶„Åä„ÅèÂøÖË¶Å„Åå„ÅÇ„Çã„Å®„ÅÑ„ÅÜ„Åì„Å®„Å´„Å™„Çã„ÄÇÂΩìÁÑ∂„Å™„Åå„Çâ„Åì„ÅÆ7ÂàÜÈñì„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„Åå„É≠„Çπ„Åô„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çã„Åü„ÇÅ„ÄÅ‰øäÊïè„Å™„Éï„Çß„Éº„É´„Ç™„Éº„Éê„Éº„ÇíÊúüÂæÖ„Åô„ÇãÂ†¥Âêà„ÅØÂà•„ÅÆ‰ªïÊéõ„Åë„ÇíÁî®ÊÑè„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ„ÅîÊ≥®ÊÑè„Åè„Å†„Åï„ÅÑ„ÄÇ\n","permalink":"https://unofficialism.info/posts/traffic-manager-endpoint-monitoring/","summary":"Azure„ÅåÊèê‰æõ„Åô„ÇãDNS„Å´„Çà„Çã„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„Çµ„Éº„Éì„Çπ„Åß„ÅÇ„ÇãTraffic Manager„Å´„Å§„ÅÑ„Å¶„ÄÅÊó¢„Å´AzureÂà©Áî®„É¶„Éº„Ç∂„Å´‰Ωø„ÅÑÂ∞Ω„Åè„Åï„Çå„Å¶Êñ∞ÈÆÆÂë≥„Å´Ê¨†„Åë„Çã„Çµ„Éº„Éì„Çπ„Åß„ÅØ„ÅÇ„Çã„ÇÇ„ÅÆ„ÅÆ„ÄÅ„Åù„ÅÆ„Ç®„É≥„Éâ„Éù„Ç§„É≥„ÉàÁõ£Ë¶ñ„ÅØTraffic Manager„ÇíÊâ±„ÅÜ‰∏ä„Åß„Å®„Å¶„ÇÇÈáçË¶Å„Å™„Åì„Å®„Å™„ÅÆ„Åß‰ªä‰∏ÄÂ∫¶„Åù„ÅÆ„É´„Éº„É´„Å´„Å§„ÅÑ„Å¶Êï¥ÁêÜ„Åó„Åü„ÅÑ„ÄÇ\nTraffic manager„ÅÆÂÆüÊÖã„ÅØ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÅÆÁõ£Ë¶ñÔºã„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„ÇíË°å„ÅÜDNS„Çµ„Éº„Éì„Çπ„Åß„ÅÇ„Çã„ÄÇ‰ª•‰∏ãdig„ÅÆÁµêÊûú„ÇíË¶ã„Å¶„ÅÑ„Åü„Å†„ÅÑ„Å¶„Çè„Åã„ÇãÈÄö„Çäyoichika-demo1.trafficmanager.net„Å®„ÅÑ„ÅÜÂ§ñÂêë„Åç„ÅÆÂêçÂâç„Å´ÂØæ„Åó„Å¶„Åì„ÅÆÊôÇÁÇπ„Åß„ÅØwebappdemo3.cloudapp.net„ÅåCNAME„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇTraffic Manager„ÅØÂà©Áî®„É¶„Éº„Ç∂„ÅåË®≠ÂÆö„Åó„Åü„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÇíÁõ£Ë¶ñ„Åó„ÄÅ„Åù„ÅÆÁµêÊûú„Å´Âøú„Åò„Å¶ÈÅ©Âàá„Å™„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„ÇíË°å„ÅÜ„ÄÇ„É´„Éº„ÉÜ„Ç£„É≥„Ç∞ÊñπÊ≥ï„Å´„ÅØ„Éï„Çß„Éº„É´„Ç™„Éº„Éê„Éº„ÄÅ„É©„Ç¶„É≥„Éâ„É≠„Éì„É≥„ÄÅ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅÆ3ÈÄö„Çä„Åå„ÅÇ„Çã„ÄÇ„Åì„Çå„Å´„Å§„ÅÑ„Å¶Ë©≥„Åó„Åè„ÅØ„ÄåTraffic Manager„ÅÆ„É´„Éº„ÉÜ„Ç£„É≥„Ç∞ÊñπÊ≥ï„Äç„ÇíÂèÇÁÖß„ÅÑ„Åü„Å†„Åç„Åü„ÅÑ„ÄÇ\n; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.9.5-4.3ubuntu0.1-Ubuntu \u0026lt;\u0026lt;\u0026gt;\u0026gt; yoichika-demo1.trafficmanager.net +noall +answer ;; global options: +cmd yoichika-demo1.trafficmanager.net. 30 IN CNAME webappdemo3.cloudapp.net. webappdemo3.cloudapp.net. 60 IN A 70.37.93.167 Ê¨°„Å´ËÇùÂøÉ„ÅÆ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÅÆÁõ£Ë¶ñ„Å´„Å§„ÅÑ„Å¶„ÄåTraffic Manager „ÅÆÁõ£Ë¶ñ„Å´„Å§„ÅÑ„Å¶„Äç„ÅÆÁõ£Ë¶ñ„Ç∑„Éº„Ç±„É≥„Çπ„Çí‰Ωø„Å£„Å¶Ë¶ÅÁÇπ„ÇíÊï¥ÁêÜ„Åô„Çã„ÄÇ\n„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Å∏„ÅÆProbeÈÄÅ‰ø°(„Éè„Éº„Éà„Éì„Éº„Éà)„ÅØ30„Åî„Å®„Å´ÂÆüË°å Probe„ÅØHTTP 200 OK„Åã„Å©„ÅÜ„Åã„ÅßÂà§ÂÆö 4ÂõûÈÄ£Á∂ö„Åó„Å¶Â§±Êïó„ÅåÁ∂ö„ÅÑ„ÅüÂæå„ÄÅÁõ£Ë¶ñ„Ç∑„Çπ„ÉÜ„É†„ÅØ‰ΩøÁî®‰∏çÂèØ„ÅÆ„ÇØ„É©„Ç¶„Éâ„Çµ„Éº„Éì„Çπ„Çí‰ΩøÁî®‰∏çÂèØ„Å®„Åø„Å™„Åó„Åù„ÅÆ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Å´„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„ÅÆ„É´„Éº„ÉÜ„Ç£„É≥„Ç∞„ÇíË°å„Çè„Å™„ÅÑ(‚ë£„Å´„ÅÇ„Åü„Çã„ÄÇ‚ë•„ÅØÂæåËø∞) DNS „ÅÆÊúâÂäπÊúüÈôê (TTL) „Å´„Çà„ÇäDNS„É™„Çæ„É´„Éê„Éº„ÅßËß£Ê±∫„Åï„Çå„ÅüÂêçÂâç„ÅåDNS „Çµ„Éº„Éê„Éº‰∏ä„Åß„Ç≠„É£„ÉÉ„Ç∑„É•„Åï„Çå„Å¶„ÅÑ„ÇãÊúüÈñì‰ΩøÁî®„Åß„Åç„Å™„ÅÑ„Çµ„Éº„Éì„Çπ„ÅÆ DNS ÊÉÖÂ†±„ÇíÂºï„ÅçÁ∂ö„ÅçÈÖç‰ø°„Åó„Å¶„Åó„Åæ„ÅÜ‚áí„Éà„É©„Éï„Ç£„ÉÉ„ÇØÊ∏õÂ∞ëÊúüÈñì (‚ë•„Å´„ÅÇ„Åü„Çã)„ÄÇDNS„ÅÆTTL„ÅÆÊó¢ÂÆöÂÄ§„ÅØ„ÄÅ300Áßí(5ÂàÜ) „Å§„Åæ„Çä„ÄÅ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Åå„ÉÄ„Ç¶„É≥„Åó„ÅüÂ†¥Âêà„ÄÅProbe„Å´„Çà„Çä‰ΩøÁî®‰∏çÂèØ„Å®„Åø„Å™„Åô„ÅÆ„Å´ÊúÄÂ§ß120Áßí(30Áßí x 4)„ÄÅ„Åï„Çâ„Å´DNS„ÅÆTTL„ÅÆÊúüÈñìÔºàÊó¢ÂÆöÂÄ§„ÅØ300ÁßíÔºâ„ÇíÂä†„Åà„Çã„Å®„ÄÅÂÆåÂÖ®„Å´ÂïèÈ°å„ÅÆ„ÅÇ„Å£„Åü„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„Å∏„ÅÆ„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„ÅåÂÅúÊ≠¢„Åô„Çã„Åæ„Åß„Å´Ê®ôÊ∫ñÁöÑ„Å´420Áßí„ÄÅÁ¥Ñ7ÂàÜ„ÅØË¶ã„Å¶„Åä„ÅèÂøÖË¶Å„Åå„ÅÇ„Çã„Å®„ÅÑ„ÅÜ„Åì„Å®„Å´„Å™„Çã„ÄÇÂΩìÁÑ∂„Å™„Åå„Çâ„Åì„ÅÆ7ÂàÜÈñì„Éà„É©„Éï„Ç£„ÉÉ„ÇØ„Åå„É≠„Çπ„Åô„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çã„Åü„ÇÅ„ÄÅ‰øäÊïè„Å™„Éï„Çß„Éº„É´„Ç™„Éº„Éê„Éº„ÇíÊúüÂæÖ„Åô„ÇãÂ†¥Âêà„ÅØÂà•„ÅÆ‰ªïÊéõ„Åë„ÇíÁî®ÊÑè„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ„ÅîÊ≥®ÊÑè„Åè„Å†„Åï„ÅÑ„ÄÇ","title":"‰ªä‰∏ÄÂ∫¶Traffic Manager„ÅÆ„Ç®„É≥„Éâ„Éù„Ç§„É≥„ÉàÁõ£Ë¶ñ„Å´„Å§„ÅÑ„Å¶"},{"content":"Q1. C Sharp„Åßexe„Å´Ë§áÊï∞DLL„Çí„Çπ„Çø„ÉÜ„Ç£„ÉÉ„ÇØ„É™„É≥„ÇØ„Åï„Åõ„Å¶Ôºë„Éï„Ç°„Ç§„É´„Å´„Åô„Çã„Åì„Å®„ÅØ„Åß„Åç„Åæ„Åô„ÅãÔºü\nC„ÄÅC++„Åß„ÅØ„Åä„Å™„Åò„Åø„ÅÆ„Çπ„Çø„ÉÜ„Ç£„ÉÉ„ÇØ„É™„É≥„ÇØ„Å†„Åå„ÄÅ„Åù„ÇÇ„Åù„ÇÇC Sharp„Åß„ÅØ„Çπ„Çø„ÉÜ„Ç£„ÉÉ„ÇØ„É™„É≥„ÇØ„Åå„Åß„Åç„Å™„ÅÑ„ÄÇ„Åü„Å†„Åó\nMS ResearchË¨πË£Ω„ÅÆILMerge„Çí‰Ωø„Åà„Å∞ÂÆüË°å„Éï„Ç°„Ç§„É´(exe)„Å´ÂØæ„Åó„Å¶Ë§áÊï∞„ÅÆ„ÇØ„É©„Çπ„Ç¢„Çª„É≥„Éñ„É™(DLL)„ÇíÔºë„Å§„ÅÆ„Ç¢„Çª„É≥„Éñ„É™„Å´„Éû„Éº„Ç∏„Åô„Çã„Åì„Å®„ÅØ„Åß„Åç„Çã„ÄÇ‰Ωø„ÅÑÊñπ„ÅØ„Åì„Å°„Çâ„ÅåÂèÇËÄÉ„Å´„Å™„Çã„ÄÇ„Åæ„Åü„ÄÅILMerge-GUI„Å®„ÅÑ„ÅÜGUI„ÉÑ„Éº„É´„ÇÇ„ÅÇ„Çã„ÄÇ\nQ2. Visual Studio„ÅÆ„Éì„É´„Éâ„Åß„ÇÇËá™ÂãïÁöÑ„Å´Ë§áÊï∞„Éï„Ç°„Ç§„É´„ÇíÔºë„Å§„Å´„Åæ„Å®„ÇÅ„Çã„Åì„Å®„ÅØ„Åß„Åç„Åæ„Åô„ÅãÔºü\n„Éë„ÉÉ„Ç±„Éº„Ç∏„Éû„Éç„Éº„Ç∏„É£„Éº„ÅßILMerge.MSBuild.Tasks„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶*.csproj„Éï„Ç°„Ç§„É´„Å´Ëá™Âãï„Ç¢„Çª„É≥„Éñ„É™ÁîüÊàê„Åô„Çã„Åü„ÇÅ„ÅÆË®≠ÂÆö„ÇíËøΩË®ò„Åô„Çã„Å®VS„ÅÆ„Éì„É´„Éâ„ÅßË§áÊï∞„Éï„Ç°„Ç§„É´„ÅåÔºë„Å§„ÅÆ„Ç¢„Çª„É≥„Éñ„É™„Å´„Éû„Éº„Ç∏„Åï„Çå„Åü„Éï„Ç°„Ç§„É´„ÅåËá™ÂãïÁöÑ„Å´„Åß„Åç„ÅÇ„Åå„Çã„ÄÇÂèÇËÄÉ: StackOverflow „ÄåHow to Integrate ILMerge into Visual Studio Build Process to Merge Assemblies?„Äç\nILMerge.MSBuild.Tasks„Çí„Ç§„É≥„Çπ„Éà„Éº„É´ Install-Package ILMerge.MSBuild.Tasks *.csproj„Éï„Ç°„Ç§„É´„Å´‰∏ãË®òË®≠ÂÆö„ÇíËøΩË®ò \u0026lt;!-- Code to merge the assemblies into one --\u0026gt; \u0026lt;UsingTask TaskName=\u0026#34;ILMerge.MSBuild.Tasks.ILMerge\u0026#34; AssemblyFile=\u0026#34;$(SolutionDir)\\packages\\ILMerge.MSBuild.Tasks.1.0.0.3\\tools\\ILMerge.MSBuild.Tasks.dll\u0026#34; /\u0026gt; \u0026lt;Target Name=\u0026#34;AfterBuild\u0026#34;\u0026gt; \u0026lt;ItemGroup\u0026gt; \u0026lt;MergeAsm Include=\u0026#34;$(OutputPath)$(TargetFileName)\u0026#34; /\u0026gt; \u0026lt;MergeAsm Include=\u0026#34;$(OutputPath)ËøΩÂä†„Åô„ÇãDLL„Éï„Ç°„Ç§„É´Âêç1\u0026#34; /\u0026gt; \u0026lt;MergeAsm Include=\u0026#34;$(OutputPath)ËøΩÂä†„Åô„ÇãDLL„Éï„Ç°„Ç§„É´Âêç2\u0026#34; /\u0026gt; ... \u0026lt;MergeAsm Include=\u0026#34;$(OutputPath)ËøΩÂä†„Åô„ÇãDLL„Éï„Ç°„Ç§„É´ÂêçN\u0026#34; /\u0026gt; \u0026lt;/ItemGroup\u0026gt; \u0026lt;PropertyGroup\u0026gt; \u0026lt;MergedAssembly\u0026gt;Âá∫Âäõ„Åô„ÇãÁµêÊûú„Ç¢„Çª„É≥„Éñ„É™„Éï„Ç°„Ç§„É´ÂêçÔºà„Éï„É´„Éë„ÇπÔºâ\u0026lt;/MergedAssembly\u0026gt; \u0026lt;/PropertyGroup\u0026gt; \u0026lt;Message Text=\u0026#34;ILMerge @(MergeAsm) -\u0026amp;gt; $(MergedAssembly)\u0026#34; Importance=\u0026#34;high\u0026#34; /\u0026gt; \u0026lt;ILMerge InputAssemblies=\u0026#34;@(MergeAsm)\u0026#34; OutputFile=\u0026#34;$(MergedAssembly)\u0026#34; TargetKind=\u0026#34;SameAsPrimaryAssembly\u0026#34; /\u0026gt; \u0026lt;/Target\u0026gt; \u0026lt;/Project\u0026gt; VS„Éì„É´„ÉâÂÆüË°å„Åß„ÄÅ„Éû„Éº„Ç∏„Åï„Çå„Åü„Éï„Ç°„Ç§„É´„ÅåÁîüÊàêÔºà*.csprof„ÅÆMergedAssembly„ÅßÊåáÂÆö„Åó„Åü„Éï„Ç°„Ç§„É´ÂêçÔºâ Â∞ö„ÄÅÂâçË®ò‰∫ã„ÅÆ„Ç≥„É≥„ÇΩ„Éº„É´„Ç¢„Éó„É™„ÅÆ„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ„Åß„ÅØ‚Äò*.csproj„Éï„Ç°„Ç§„É´„Å´„Åì„ÅÆË®≠ÂÆö„ÇíËøΩÂä†„Åó„Å¶„Åä„Çä„ÄÅVS„Éì„É´„Éâ„ÅßËá™ÂãïÁöÑ„Å´1„Ç¢„Çª„É≥„Éñ„É™„Å´„Éû„Éº„Ç∏„Åï„Çå„Åüexe„Éï„Ç°„Ç§„É´„ÅåÁîüÊàê„Åï„Çå„Çã„Çà„ÅÜ„Å´„Åó„Å¶„ÅÑ„Çã„ÄÇ\n","permalink":"https://unofficialism.info/posts/tips-visual-studio-csharp-merge-exe-and-dll/","summary":"Q1. C Sharp„Åßexe„Å´Ë§áÊï∞DLL„Çí„Çπ„Çø„ÉÜ„Ç£„ÉÉ„ÇØ„É™„É≥„ÇØ„Åï„Åõ„Å¶Ôºë„Éï„Ç°„Ç§„É´„Å´„Åô„Çã„Åì„Å®„ÅØ„Åß„Åç„Åæ„Åô„ÅãÔºü\nC„ÄÅC++„Åß„ÅØ„Åä„Å™„Åò„Åø„ÅÆ„Çπ„Çø„ÉÜ„Ç£„ÉÉ„ÇØ„É™„É≥„ÇØ„Å†„Åå„ÄÅ„Åù„ÇÇ„Åù„ÇÇC Sharp„Åß„ÅØ„Çπ„Çø„ÉÜ„Ç£„ÉÉ„ÇØ„É™„É≥„ÇØ„Åå„Åß„Åç„Å™„ÅÑ„ÄÇ„Åü„Å†„Åó\nMS ResearchË¨πË£Ω„ÅÆILMerge„Çí‰Ωø„Åà„Å∞ÂÆüË°å„Éï„Ç°„Ç§„É´(exe)„Å´ÂØæ„Åó„Å¶Ë§áÊï∞„ÅÆ„ÇØ„É©„Çπ„Ç¢„Çª„É≥„Éñ„É™(DLL)„ÇíÔºë„Å§„ÅÆ„Ç¢„Çª„É≥„Éñ„É™„Å´„Éû„Éº„Ç∏„Åô„Çã„Åì„Å®„ÅØ„Åß„Åç„Çã„ÄÇ‰Ωø„ÅÑÊñπ„ÅØ„Åì„Å°„Çâ„ÅåÂèÇËÄÉ„Å´„Å™„Çã„ÄÇ„Åæ„Åü„ÄÅILMerge-GUI„Å®„ÅÑ„ÅÜGUI„ÉÑ„Éº„É´„ÇÇ„ÅÇ„Çã„ÄÇ\nQ2. Visual Studio„ÅÆ„Éì„É´„Éâ„Åß„ÇÇËá™ÂãïÁöÑ„Å´Ë§áÊï∞„Éï„Ç°„Ç§„É´„ÇíÔºë„Å§„Å´„Åæ„Å®„ÇÅ„Çã„Åì„Å®„ÅØ„Åß„Åç„Åæ„Åô„ÅãÔºü\n„Éë„ÉÉ„Ç±„Éº„Ç∏„Éû„Éç„Éº„Ç∏„É£„Éº„ÅßILMerge.MSBuild.Tasks„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶*.csproj„Éï„Ç°„Ç§„É´„Å´Ëá™Âãï„Ç¢„Çª„É≥„Éñ„É™ÁîüÊàê„Åô„Çã„Åü„ÇÅ„ÅÆË®≠ÂÆö„ÇíËøΩË®ò„Åô„Çã„Å®VS„ÅÆ„Éì„É´„Éâ„ÅßË§áÊï∞„Éï„Ç°„Ç§„É´„ÅåÔºë„Å§„ÅÆ„Ç¢„Çª„É≥„Éñ„É™„Å´„Éû„Éº„Ç∏„Åï„Çå„Åü„Éï„Ç°„Ç§„É´„ÅåËá™ÂãïÁöÑ„Å´„Åß„Åç„ÅÇ„Åå„Çã„ÄÇÂèÇËÄÉ: StackOverflow „ÄåHow to Integrate ILMerge into Visual Studio Build Process to Merge Assemblies?„Äç\nILMerge.MSBuild.Tasks„Çí„Ç§„É≥„Çπ„Éà„Éº„É´ Install-Package ILMerge.MSBuild.Tasks *.csproj„Éï„Ç°„Ç§„É´„Å´‰∏ãË®òË®≠ÂÆö„ÇíËøΩË®ò \u0026lt;!-- Code to merge the assemblies into one --\u0026gt; \u0026lt;UsingTask TaskName=\u0026#34;ILMerge.MSBuild.Tasks.ILMerge\u0026#34; AssemblyFile=\u0026#34;$(SolutionDir)\\packages\\ILMerge.MSBuild.Tasks.1.0.0.3\\tools\\ILMerge.MSBuild.Tasks.dll\u0026#34; /\u0026gt; \u0026lt;Target Name=\u0026#34;AfterBuild\u0026#34;\u0026gt; \u0026lt;ItemGroup\u0026gt; \u0026lt;MergeAsm Include=\u0026#34;$(OutputPath)$(TargetFileName)\u0026#34; /\u0026gt; \u0026lt;MergeAsm Include=\u0026#34;$(OutputPath)ËøΩÂä†„Åô„ÇãDLL„Éï„Ç°„Ç§„É´Âêç1\u0026#34; /\u0026gt; \u0026lt;MergeAsm Include=\u0026#34;$(OutputPath)ËøΩÂä†„Åô„ÇãDLL„Éï„Ç°„Ç§„É´Âêç2\u0026#34; /\u0026gt; ... \u0026lt;MergeAsm Include=\u0026#34;$(OutputPath)ËøΩÂä†„Åô„ÇãDLL„Éï„Ç°„Ç§„É´ÂêçN\u0026#34; /\u0026gt; \u0026lt;/ItemGroup\u0026gt; \u0026lt;PropertyGroup\u0026gt; \u0026lt;MergedAssembly\u0026gt;Âá∫Âäõ„Åô„ÇãÁµêÊûú„Ç¢„Çª„É≥„Éñ„É™„Éï„Ç°„Ç§„É´ÂêçÔºà„Éï„É´„Éë„ÇπÔºâ\u0026lt;/MergedAssembly\u0026gt; \u0026lt;/PropertyGroup\u0026gt; \u0026lt;Message Text=\u0026#34;ILMerge @(MergeAsm) -\u0026amp;gt; $(MergedAssembly)\u0026#34; Importance=\u0026#34;high\u0026#34; /\u0026gt; \u0026lt;ILMerge InputAssemblies=\u0026#34;@(MergeAsm)\u0026#34; OutputFile=\u0026#34;$(MergedAssembly)\u0026#34; TargetKind=\u0026#34;SameAsPrimaryAssembly\u0026#34; /\u0026gt; \u0026lt;/Target\u0026gt; \u0026lt;/Project\u0026gt; VS„Éì„É´„ÉâÂÆüË°å„Åß„ÄÅ„Éû„Éº„Ç∏„Åï„Çå„Åü„Éï„Ç°„Ç§„É´„ÅåÁîüÊàêÔºà*.","title":"Static linking DLL to EXE in C Sharp"},{"content":"UPDATED 2017-03-22: Added SOCKS Proxy Configuration for Internet Explorer\nÂ§ñÈÉ®„Åã„Çâ„ÅÆÊé•Á∂öÔºàSSH„ÄÅHTTP„Å™„Å©Ôºâ„ÇíÂèó„Åë‰ªò„Åë„Å¶„ÅÑ„Å™„ÅÑAzure ‰ªÆÊÉ≥„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ(‰ª•‰∏ãVNET)ÂÜÖ„ÅÆ„É™„ÇΩ„Éº„Çπ„Å´SOCKS„Éó„É≠„Ç≠„Ç∑„ÇíÁµåÁî±„Åó„Å¶Â§ñÈÉ®„Åã„Çâ„Ç¢„ÇØ„Çª„Çπ„Åó„Åæ„Åó„Çá„ÅÜ„Å®„ÅÑ„ÅÜ„ÅäË©±„ÄÇÊú¨Ë®ò‰∫ã„Åß„ÅØAzure VNETÂÜÖ„ÅÆÂ§ñÈÉ®„Åã„Çâ„ÅÆ„Ç¢„ÇØ„Çª„ÇπË®±ÂèØ„Åó„Å¶„ÅÑ„Å™„ÅÑVM„Å∏„ÅÆSSH„É≠„Ç∞„Ç§„É≥„Å®HTTP„Çµ„Éº„Éê„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å∏„ÅÆ„Éñ„É©„Ç¶„Ç∏„É≥„Ç∞„ÅÆ2„Å§„ÅÆÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åô„Çã„ÄÇ\nSOCKS(RFC1928) „Å®„ÅØ„Åï„Åæ„Åñ„Åæ„Å™„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅåÈñì„Å´„Éï„Ç°„Ç§„Ç¢„Éº„Ç¶„Ç©„Éº„É´„ÇíÊåü„Çì„Åß„ÅÑ„Å¶„ÇÇÂÆâÂÖ®„Å´Âø´ÈÅ©„Å´„ÇÑ„ÇäÂèñ„Çä„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åô„Çã„Åì„Å®„ÇíÁõÆÁöÑ„Å®„Åó„Å¶‰Ωú„Çâ„Çå„Åü„Éó„É≠„Éà„Ç≥„É´„ÅÆ„Åì„Å®„Åß„ÄÅSOCKS„Éó„É≠„Ç≠„Ç∑„ÅØSOCKS„Éó„É≠„Éà„Ç≥„É´„ÇíÂèó„ÅëÂèñ„Çä„Éï„Ç°„Ç§„Ç¢„Ç¶„Ç©„Éº„É´ÂÜÖÂ§ñ„Å®„ÅÆÊé•Á∂ö„ÇíÂèØËÉΩ„Å´„Åô„Çã„ÇÇ„ÅÆ„Åß„ÅÇ„Çã„ÄÇ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÇÑNetwork Security Group (NSG)„Å´„Çà„Çä„Éç„ÉÉ„Éà„Éº„ÉØ„Éº„ÇØÂàÜÈõ¢Ë®≠ÂÆö„Åï„Çå„ÅüAzure VNETÂÜÖ„ÅÆ„É™„ÇΩ„Éº„Çπ„Å´ÂØæ„Åó„Å¶‰∏ÄÊôÇÁöÑ„Å´Êú¨Êù•Áõ¥Êé•„Ç¢„ÇØ„Çª„ÇπË®±ÂèØ„Åó„Å™„ÅÑ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Åã„Çâ„Ç¢„ÇØ„Çª„Çπ„ÅåÂøÖË¶Å„Å™Áä∂Ê≥Å„ÅØ„ÅÇ„Çã„Åã„Å®ÊÄù„ÅÜ„ÄÇ„Åù„ÅÆ„Çà„ÅÜ„Å™ÊôÇ„Å´ÊØéÂõûË®≠ÂÆöÂ§âÊõ¥„ÅßÂøÖË¶Å„Å™„Éó„É≠„Éà„Ç≥„É´„ÄÅ„Ç¢„ÇØ„Çª„ÇπÂÖà„Å´ÂØæ„Åó„Å¶Á©¥„Çí„ÅÇ„Åë„Çã„ÅÆ„ÅØÈùûÂ∏∏„Å´Èù¢ÂÄí„Åß„ÅÇ„Çä„ÄÅ„Åæ„Åü„Çµ„Ç§„ÉàÈñìVPN„ÄÅ„Éù„Ç§„É≥„ÉàÂØæ„Çµ„Ç§„ÉàVPN„Å®„Å™„Çã„Å®„Åï„Çâ„Å´ÊâãÈñì„Åå„Åã„Åã„Çã„ÄÇ„ÅäÊâãËªΩ„Å´„ÄÅ„ÇÇ„Åó„Åè„ÅØÂÆöÂ∏∏ÁöÑ„Åß„ÅØ„Å™„ÅÑ„Åå‰∏ÄÊôÇÁöÑ„Å´ÂÜÖÈÉ®„É™„ÇΩ„Éº„Çπ„Å´„Ç¢„ÇØ„Çª„Çπ„Åó„Åü„ÅÑÂ†¥Âêà„Å´SOCKS„Éó„É≠„Ç≠„Ç∑ÁµåÁî±„Åß„ÅÆ„Ç¢„ÇØ„Çª„Çπ„ÇíÊ§úË®é„Åó„Å¶„Åø„Å¶„ÅØ„ÅÑ„Åã„Åå„Å†„Çç„ÅÜ„Åã„ÄÇ‰ª•‰∏ã„ÅØSOCKS„Éó„É≠„Ç≠„Ç∑ÁµåÁî±„Å´„Çà„ÇãAzure VNETÂÜÖ„ÅÆ„Éó„É©„Ç§„Éô„Éº„Éà„É™„ÇΩ„Éº„Çπ„Å∏„ÅÆ„Ç¢„ÇØ„Çª„Çπ„Ç§„É°„Éº„Ç∏„Åß„ÅÇ„Çã„ÄÇ\nSOCKS„Éó„É≠„Ç≠„Ç∑„ÅÆ‰ΩúÊàê „Åæ„Åö„ÅØOpenSSH„ÅÆ„ÉÄ„Ç§„Éä„Éü„ÉÉ„ÇØ„Éù„Éº„Éà„Éï„Ç©„ÉØ„Éº„ÉâÊ©üËÉΩ„Çí‰Ωø„Å£„Å¶SOCKS„Éó„É≠„Ç≠„Ç∑„Çí‰ΩúÊàê„Åô„Çã„ÄÇ„ÉÄ„Ç§„Éä„Éü„ÉÉ„ÇØ„Éù„Éº„Éà„Éï„Ç©„ÉØ„Éº„Éâ„ÅØSSH„ÇíSOCKS„Éó„É≠„Ç≠„Ç∑„Å®„Åó„Å¶ÊåØËàû„ÅÜ„Åì„Å®„ÇíÂèØËÉΩ„Å´„Åô„Çã„ÄÇSSH„Åß„Ç¢„ÇØ„Çª„ÇπÂÖà„Éõ„Çπ„Éà„Å® DynamicFoward(-D)„Åß„Éù„Éº„Éà„ÇíÊåáÂÆö„Åô„Çã„Åì„Å®„Åßlocalhost„Å´SOCKS„Éó„É≠„Ç≠„Ç∑„ÅåÁ´ã„Å°‰∏ä„Åå„ÇäÊåáÂÆö„ÅÆTCP„Éù„Éº„Éà(SOCKS„Éó„É≠„Ç≠„Ç∑„Çµ„Éº„Éê„ÅØÂü∫Êú¨ÁöÑ„ÅØ1080„Å†„Åå„ÄÅÂâ≤„ÇäÂΩì„Å¶ÂèØËÉΩ„Å™„Éù„Éº„Éà„Åß„ÅÇ„Çå„Å∞„Å©„ÅÆ„Éù„Éº„Éà„Åß„ÇÇOK)„ÇílocalhostÂÅ¥„Åã„Çâ„É≠„Ç∞„Ç§„É≥ÂÖà„Éõ„Çπ„Éà„ÅÆSSH„Çµ„Éº„Éê„Å´Ëª¢ÈÄÅ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çã„ÄÇ„ÇÇ„Å°„Çç„ÇìÁµåË∑Ø„ÅØÊöóÂè∑Âåñ„Åï„Çå„Çã„ÄÇÁèæÁä∂„ÅÆ„Çµ„Éù„Éº„Éà„Éó„É≠„Éà„Ç≥„É´„ÅØSOCKS4„Å®SOCKS5„ÄÇ\n‰æã„Åà„Å∞‰∏äÂõ≥„Åß„ÅÑ„ÅÜ„Å®Jump Server(Ë∏è„ÅøÂè∞)„Å´DynamicFoward(-D)1080„Åß„É≠„Ç∞„Ç§„É≥„Åô„Çã„Å®„ÄÅJump Server„Å´„Éù„Éº„Éà1080„ÇíËª¢ÈÄÅ„Åô„ÇãSOCKS„Éó„É≠„Ç≠„Ç∑„Åå localhost„Å´Á´ã„Å°‰∏ä„Åå„Çä„ÄÅ„Åù„ÅÆlocalhost:1080„Å´ÂØæ„Åó„Å¶SOCKS4„Åæ„Åü„ÅØSOCKS5„Éó„É≠„Éà„Ç≥„É´„ÅßÊé•Á∂ö„Åô„Çã„Åì„Å®„ÅßJump Server„ÇíÁµåÁî±„Åó„Å¶ÈÄö‰ø°„ÇíË°å„ÅÜ„Åì„Å®„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çã„ÄÇ\nlocalhost„Éù„Éº„Éà1080„ÅÆJump Server„Å∏„ÅÆ„ÉÄ„Ç§„Éä„Éü„ÉÉ„ÇØ„Éï„Ç©„ÉØ„Éº„Éâ„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å´-D„Ç™„Éó„Ç∑„Éß„É≥„ÅßË°å„ÅÜ„ÄÇ\n$ ssh -2 -D 1080 -l [Account] [Jump Server] ÊØéÂõû-D„Ç™„Éó„Ç∑„Éß„É≥ÊåáÂÆö„ÅåÈù¢ÂÄí„Å™Â†¥Âêà„ÅØ„ÄÅÊ¨°„ÅÆ„Çà„ÅÜ„Å´confg(ssh_config)„Å´DynamicForward„ÅÆË®òËø∞„Åô„Çã„Åì„Å®„ÇÇÂèØËÉΩ„ÄÇ\n~/.ssh/config\nHost JumpServer User [AccountÂêç] HostName/IP [Jump Server„Éõ„Çπ„Éà/IP„Ç¢„Éâ„É¨„Çπ] Protocol 2 ForwardAgent yes DynamicForward 1080 ‰∏äË®òOpenSSH„ÅÆË®≠ÂÆö„ÅØ„ÄÅLinux/Mac„ÅÆÂ†¥Âêà„ÅØÊ®ôÊ∫ñTerminal„Çí‰Ωø„Åà„Å∞„Çà„ÅÑ„Åå„ÄÅWindows„ÅÆÂ†¥Âêà„ÅØCygwin„ÄÅXming„Å™„Å©XÁ´ØÊú´„Ç®„Éü„É•„É¨„Éº„Çø„ÇΩ„Éï„Éà„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„ÅÑ„Åü„Å†„ÅèÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ„Åæ„ÅüXÁ´ØÊú´„Ç®„Éü„É•„É¨„Éº„Çø„Éº„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å™„Åè„Å®„ÇÇWindows„Åß„ÅØÊúâÂêç„Å™SSH„ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÇΩ„Éï„ÉàPutty„Åå„ÉÄ„Ç§„Éä„Éü„ÉÉ„ÇØ„Éù„Éº„Éà„Éï„Ç©„ÉØ„Éº„Éâ„Å´ÂØæÂøú„Åó„Å¶„ÅÑ„Çã„Åü„ÇÅPutty„Çí‰Ωø„Å£„Å¶SOCKS„Éó„É≠„Ç≠„Ç∑‰ΩúÊàê„Åô„Çã„Åì„Å®„ÇÇÂèØËÉΩ„ÄÇË©≥„Åó„Åè„ÅØ„ÄåDynamic Port Forwarding with SOCKS over SSH„Äç„ÅåÂèÇËÄÉ„Å´„Å™„Çã„Åã„Å®„ÄÇ\nSOCKS„Éó„É≠„Ç≠„Ç∑„Çí‰Ωø„Å£„ÅüSSHÊé•Á∂ö Ê¨°„Å´‰∏äË®ò„Åß‰ΩúÊàê„Åó„ÅüSOCKS„Éó„É≠„Ç≠„Ç∑„ÇíÁµåÁî±„Åó„Å¶VNETÂÜÖ„ÅÆ„Çµ„Éº„Éê„Å´SSHÊé•Á∂ö„Çí„Åô„Çã„ÄÇ netcat„ÅßSOCKS„Éó„É≠„Ç≠„Ç∑„ÇíÁµåÁî±„Åó„Å¶localhost„Åã„ÇâÁõÆÁöÑ„ÅÆVNETÂÜÖ„Çµ„Éº„ÉêÔºàServerXÔºâÈñì„Å´netcat„Éà„É≥„Éç„É´„Çí‰ΩúÊàê„Åó„Å¶ServerX„Å´„ÅØ„Åù„ÅÆnetcat„Éà„É≥„Éç„É´„ÇíÈÄö„Åò„Å¶Êé•Á∂ö„Åô„Çã„ÄÇ\nlocal$ ssh -2 -l [Account] -o \u0026#39;ProxyCommand nc -x localhost:1080 %h %p\u0026#39; [ServerX] netcat „ÅÆ„Éó„É≠„Ç≠„Ç∑ÊåáÂÆö„ÅØ-x„Ç™„Éó„Ç∑„Éß„É≥„ÅßË°å„ÅÜ„ÄÇ „Åì„Åì„Åß„ÅØ‰∫ãÂâç„Å´‰ΩúÊàê„Åó„ÅüSOCKS„Éó„É≠„Ç≠„Ç∑(localhost:1080)„ÇíÊåáÂÆö„ÄÇ netcat„Éà„É≥„Éç„É´„ÅÆ‰ΩúÊàê„Ç≥„Éû„É≥„Éâ„ÅØProxyCommand„Å´Ë®òËø∞„Åô„Çã„ÄÇ„Åì„Å°„Çâ„ÇÇÊØéÂõûÈï∑„ÅÑ„Ç™„Éó„Ç∑„Éß„É≥ÂÖ•Âäõ„ÇíÈÅø„Åë„Çã„Åü„ÇÅ„Å´ configÔºàssh_configÔºâË®≠ÂÆö„Åô„Çã„Å®‰æøÂà©„Åß„ÅÇ„Çã„ÄÇ\n** ~/.ssh/config**\nHost ServerX User [Account] Protocol 2 ForwardAgent yes ProxyCommand nc -x localhost:1080 -w1 %h %p Ê≥®ÊÑèÁÇπ„Å®„Åó„Å¶„ÄÅnetcat„Å´„ÅØGNUÊú¨ÂÆ∂Áâà„Å®„Åù„Çå‰ª•Â§ñ„Å´„ÅÑ„Åè„Å§„ÅãÊ¥æÁîü„Åå„ÅÇ„Çã„Åå-x „Ç™„Éó„Ç∑„Éß„É≥„ÅÆÂà©Áî®ÂèØËÉΩ„Å™netcat„Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ„Ç™„É™„Ç∏„Éä„É´„ÅÆnetcat„ÇÑGNU netcat„Å´„ÅØ-x„Ç™„Éó„Ç∑„Éß„É≥„ÅØ„Å™„ÅÑ„ÄÇ„Åì„Åì„Åß‰ΩøÁî®„Åó„Å¶„ÅÑ„Çãnetcat„ÅØIPv6„Å´ÂØæÂøú„Åó„Å¶„ÅÑ„ÇãOpenBSD netcat„ÄÇ\n„ÇÇ„Å°„Çç„ÇìVNETÂÜÖ„ÅÆVM„Å∏„ÅÆSSHÊé•Á∂ö„ÅÆÂà•Ëß£„Å®„Åó„Å¶ProxyCommand„ÅßJump Server„Åã„ÇâServerX„Å∏netcat„Éà„É≥„Éç„É´„Çí‰ΩúÊàê„Åó„Å¶local„Åã„ÇâServerX„Å´„É≠„Ç∞„Ç§„É≥„Åô„Çã„Åì„Å®„ÇÇÂèØËÉΩ„ÄÇ\nlocal$ ssh -2 -o \u0026#39;ProxyCommand ssh [Jump Server] nc -w1 %h %p\u0026#39; [ServerX] ÂÆü„ÅØ„Åì„ÅÆÊñπÊ≥ï„ÅÆ„Åª„ÅÜ„ÅåProxyCommand „Åß„Éó„É≠„Ç≠„Ç∑Ë®≠ÂÆö„ÇíË°å„ÅÜ„Åü„ÇÅ‰∫ãÂâç„Å´Âà•„Ç≥„É≥„ÇΩ„Éº„É´„Åß‰Ωï„Åã„ÇíÁî®ÊÑè„Åô„ÇãÂøÖË¶Å„Åå„Å™„ÅèÈñìÈÅï„ÅÑ„Å™„ÅèSOCKS„Éó„É≠„Ç≠„Ç∑ÁµåÁî±„Åß„ÅÆÊé•Á∂ö„Çà„Çä„ÇÇÊ•Ω„ÄÇ„Åß„ÅØSOCKS„Éó„É≠„Ç≠„Ç∑ÁµåÁî±„ÅßÊé•Á∂ö„Åô„ÇãÁêÜÁî±„ÅØ‰Ωï„ÅãÔºü ÁêÜÁî±„ÅØÂçòÁ¥î„Åß„ÄÅÈÄöÂ∏∏Jump Server„ÅØ„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ë®≠ÂÆö‰∏ä„ÅÆÁêÜÁî±„Åß„É≠„Ç∞„Ç§„É≥„Åó„Å¶„ÇÇ„Åª„Å®„Çì„Å©‰Ωï„ÇÇ„Åß„Åç„Å™„ÅÑ„Çà„ÅÜ„Å´„Åô„Çã„Åü„ÇÅ„Å´Ê©üËÉΩ„ÇíÁÑ°ÂäπÂåñ„Åó„Å¶„ÅÑ„Çã„Åì„Å®„ÅåÂ§ö„Åè„ÄÅ„Çà„Å£„Å¶netcat„Åå‰Ωø„Åà„Å™„ÅÑ(nc„ÅØ„Åä„Çç„Åãssh„Ç≥„Éû„É≥„Éâ‰ª•Â§ñ„Åª„Å®„Çì„Å©‰Ωï„ÇÇ‰Ωø„Åà„Å™„ÅÑ)Áí∞Â¢É„Å†„Å£„Åü„Çä„Åô„Çã„ÄÇ„Åì„ÅÆÂ†¥Âêà„ÄÅ‰∏äË®ò„ÅßË™¨Êòé„Åó„Åü„Çà„ÅÜ„Å´SOCKS„Éó„É≠„Ç≠„Ç∑ÁµåÁî±„Åß„ÅÆSSH„É≠„Ç∞„Ç§„É≥„ÅåÊúâÂäπ„Å™ÊâãÊÆµ„Å®„Å™„Çã„ÄÇ\nSOCKS„Éó„É≠„Ç≠„Ç∑ÁµåÁî±„Åß„ÅÆ„Éñ„É©„Ç¶„Ç∏„É≥„Ç∞ „Éñ„É©„Ç¶„Ç∂„Éº„Å´SOCKS„Éó„É≠„Ç≠„Ç∑ÂØæÂøú„ÅÆ„Éó„É©„Ç∞„Ç§„É≥„Çí\tÂÖ•„Çå„Çã„Åì„Å®„Åß„Éñ„É©„Ç¶„Ç∂„Éº„Å´„Çà„Çã„Éó„É©„Ç§„Éô„Éº„Éà„É™„ÇΩ„Éº„ÇπÔºàÂÜÖÈÉ®„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÂÜÖ„ÅÆ„Ç¢„Éó„É™„Éª„Éü„Éâ„É´„Ç¶„Çß„Ç¢Á≠â„ÅÆ„Ç¶„Çß„ÉñUI„ÇíÊåÅ„Å£„ÅüÁÆ°ÁêÜ„ÉÑ„Éº„É´„Å™„Å©Ôºâ„ÅÆÈñ≤Ë¶ß„ÇÇÂèØËÉΩ„Å®„Å™„Çã„ÄÇÊúâÂêç„Å™„ÇÇ„ÅÆ„Å´SwitchySharp(Google Chrome)„ÇÑFoxyproxy(Firefox)„Å™„Å©„Åå„ÅÇ„Çã„ÄÇ‰ª•‰∏ãÁ∞°Âçò„Å™Ë®≠ÂÆö„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„Çí‰πó„Åõ„Å¶„Åä„Åè„ÄÇÂÖ±„Å´„Äåhttp://yoichika-.cloudapp.net„Äç„Å™URI„Éë„Çø„Éº„É≥„ÅÆÊôÇ„Å´„ÅÆ„ÅøSOCKS„Éó„É≠„Ç≠„Ç∑localhost:12345ÁµåÁî±„Åß„Ç¢„ÇØ„Çª„Çπ„Åô„ÇãË®≠ÂÆö„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ\nGoogle Chrome - SwitchySharp\nFirefox - Foxyproxy\nInternet Explorer - Out-of-box feature\nAs answered in Stack Overflow, Internet Explorer does support SOCKS proxies.\nTools \u0026gt; Internet Options \u0026gt; Connections \u0026gt; LAN Settings \u0026gt; Proxy Server \u0026gt; Advanced Enjoy Accessing private resources with SOCKS Proxy!\n","permalink":"https://unofficialism.info/posts/accessing-private-resource-in-azure-vnet-via-socks-proxy/","summary":"UPDATED 2017-03-22: Added SOCKS Proxy Configuration for Internet Explorer\nÂ§ñÈÉ®„Åã„Çâ„ÅÆÊé•Á∂öÔºàSSH„ÄÅHTTP„Å™„Å©Ôºâ„ÇíÂèó„Åë‰ªò„Åë„Å¶„ÅÑ„Å™„ÅÑAzure ‰ªÆÊÉ≥„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ(‰ª•‰∏ãVNET)ÂÜÖ„ÅÆ„É™„ÇΩ„Éº„Çπ„Å´SOCKS„Éó„É≠„Ç≠„Ç∑„ÇíÁµåÁî±„Åó„Å¶Â§ñÈÉ®„Åã„Çâ„Ç¢„ÇØ„Çª„Çπ„Åó„Åæ„Åó„Çá„ÅÜ„Å®„ÅÑ„ÅÜ„ÅäË©±„ÄÇÊú¨Ë®ò‰∫ã„Åß„ÅØAzure VNETÂÜÖ„ÅÆÂ§ñÈÉ®„Åã„Çâ„ÅÆ„Ç¢„ÇØ„Çª„ÇπË®±ÂèØ„Åó„Å¶„ÅÑ„Å™„ÅÑVM„Å∏„ÅÆSSH„É≠„Ç∞„Ç§„É≥„Å®HTTP„Çµ„Éº„Éê„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Å∏„ÅÆ„Éñ„É©„Ç¶„Ç∏„É≥„Ç∞„ÅÆ2„Å§„ÅÆÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åô„Çã„ÄÇ\nSOCKS(RFC1928) „Å®„ÅØ„Åï„Åæ„Åñ„Åæ„Å™„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅåÈñì„Å´„Éï„Ç°„Ç§„Ç¢„Éº„Ç¶„Ç©„Éº„É´„ÇíÊåü„Çì„Åß„ÅÑ„Å¶„ÇÇÂÆâÂÖ®„Å´Âø´ÈÅ©„Å´„ÇÑ„ÇäÂèñ„Çä„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åô„Çã„Åì„Å®„ÇíÁõÆÁöÑ„Å®„Åó„Å¶‰Ωú„Çâ„Çå„Åü„Éó„É≠„Éà„Ç≥„É´„ÅÆ„Åì„Å®„Åß„ÄÅSOCKS„Éó„É≠„Ç≠„Ç∑„ÅØSOCKS„Éó„É≠„Éà„Ç≥„É´„ÇíÂèó„ÅëÂèñ„Çä„Éï„Ç°„Ç§„Ç¢„Ç¶„Ç©„Éº„É´ÂÜÖÂ§ñ„Å®„ÅÆÊé•Á∂ö„ÇíÂèØËÉΩ„Å´„Åô„Çã„ÇÇ„ÅÆ„Åß„ÅÇ„Çã„ÄÇ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÇÑNetwork Security Group (NSG)„Å´„Çà„Çä„Éç„ÉÉ„Éà„Éº„ÉØ„Éº„ÇØÂàÜÈõ¢Ë®≠ÂÆö„Åï„Çå„ÅüAzure VNETÂÜÖ„ÅÆ„É™„ÇΩ„Éº„Çπ„Å´ÂØæ„Åó„Å¶‰∏ÄÊôÇÁöÑ„Å´Êú¨Êù•Áõ¥Êé•„Ç¢„ÇØ„Çª„ÇπË®±ÂèØ„Åó„Å™„ÅÑ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Åã„Çâ„Ç¢„ÇØ„Çª„Çπ„ÅåÂøÖË¶Å„Å™Áä∂Ê≥Å„ÅØ„ÅÇ„Çã„Åã„Å®ÊÄù„ÅÜ„ÄÇ„Åù„ÅÆ„Çà„ÅÜ„Å™ÊôÇ„Å´ÊØéÂõûË®≠ÂÆöÂ§âÊõ¥„ÅßÂøÖË¶Å„Å™„Éó„É≠„Éà„Ç≥„É´„ÄÅ„Ç¢„ÇØ„Çª„ÇπÂÖà„Å´ÂØæ„Åó„Å¶Á©¥„Çí„ÅÇ„Åë„Çã„ÅÆ„ÅØÈùûÂ∏∏„Å´Èù¢ÂÄí„Åß„ÅÇ„Çä„ÄÅ„Åæ„Åü„Çµ„Ç§„ÉàÈñìVPN„ÄÅ„Éù„Ç§„É≥„ÉàÂØæ„Çµ„Ç§„ÉàVPN„Å®„Å™„Çã„Å®„Åï„Çâ„Å´ÊâãÈñì„Åå„Åã„Åã„Çã„ÄÇ„ÅäÊâãËªΩ„Å´„ÄÅ„ÇÇ„Åó„Åè„ÅØÂÆöÂ∏∏ÁöÑ„Åß„ÅØ„Å™„ÅÑ„Åå‰∏ÄÊôÇÁöÑ„Å´ÂÜÖÈÉ®„É™„ÇΩ„Éº„Çπ„Å´„Ç¢„ÇØ„Çª„Çπ„Åó„Åü„ÅÑÂ†¥Âêà„Å´SOCKS„Éó„É≠„Ç≠„Ç∑ÁµåÁî±„Åß„ÅÆ„Ç¢„ÇØ„Çª„Çπ„ÇíÊ§úË®é„Åó„Å¶„Åø„Å¶„ÅØ„ÅÑ„Åã„Åå„Å†„Çç„ÅÜ„Åã„ÄÇ‰ª•‰∏ã„ÅØSOCKS„Éó„É≠„Ç≠„Ç∑ÁµåÁî±„Å´„Çà„ÇãAzure VNETÂÜÖ„ÅÆ„Éó„É©„Ç§„Éô„Éº„Éà„É™„ÇΩ„Éº„Çπ„Å∏„ÅÆ„Ç¢„ÇØ„Çª„Çπ„Ç§„É°„Éº„Ç∏„Åß„ÅÇ„Çã„ÄÇ\nSOCKS„Éó„É≠„Ç≠„Ç∑„ÅÆ‰ΩúÊàê „Åæ„Åö„ÅØOpenSSH„ÅÆ„ÉÄ„Ç§„Éä„Éü„ÉÉ„ÇØ„Éù„Éº„Éà„Éï„Ç©„ÉØ„Éº„ÉâÊ©üËÉΩ„Çí‰Ωø„Å£„Å¶SOCKS„Éó„É≠„Ç≠„Ç∑„Çí‰ΩúÊàê„Åô„Çã„ÄÇ„ÉÄ„Ç§„Éä„Éü„ÉÉ„ÇØ„Éù„Éº„Éà„Éï„Ç©„ÉØ„Éº„Éâ„ÅØSSH„ÇíSOCKS„Éó„É≠„Ç≠„Ç∑„Å®„Åó„Å¶ÊåØËàû„ÅÜ„Åì„Å®„ÇíÂèØËÉΩ„Å´„Åô„Çã„ÄÇSSH„Åß„Ç¢„ÇØ„Çª„ÇπÂÖà„Éõ„Çπ„Éà„Å® DynamicFoward(-D)„Åß„Éù„Éº„Éà„ÇíÊåáÂÆö„Åô„Çã„Åì„Å®„Åßlocalhost„Å´SOCKS„Éó„É≠„Ç≠„Ç∑„ÅåÁ´ã„Å°‰∏ä„Åå„ÇäÊåáÂÆö„ÅÆTCP„Éù„Éº„Éà(SOCKS„Éó„É≠„Ç≠„Ç∑„Çµ„Éº„Éê„ÅØÂü∫Êú¨ÁöÑ„ÅØ1080„Å†„Åå„ÄÅÂâ≤„ÇäÂΩì„Å¶ÂèØËÉΩ„Å™„Éù„Éº„Éà„Åß„ÅÇ„Çå„Å∞„Å©„ÅÆ„Éù„Éº„Éà„Åß„ÇÇOK)„ÇílocalhostÂÅ¥„Åã„Çâ„É≠„Ç∞„Ç§„É≥ÂÖà„Éõ„Çπ„Éà„ÅÆSSH„Çµ„Éº„Éê„Å´Ëª¢ÈÄÅ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çã„ÄÇ„ÇÇ„Å°„Çç„ÇìÁµåË∑Ø„ÅØÊöóÂè∑Âåñ„Åï„Çå„Çã„ÄÇÁèæÁä∂„ÅÆ„Çµ„Éù„Éº„Éà„Éó„É≠„Éà„Ç≥„É´„ÅØSOCKS4„Å®SOCKS5„ÄÇ\n‰æã„Åà„Å∞‰∏äÂõ≥„Åß„ÅÑ„ÅÜ„Å®Jump Server(Ë∏è„ÅøÂè∞)„Å´DynamicFoward(-D)1080„Åß„É≠„Ç∞„Ç§„É≥„Åô„Çã„Å®„ÄÅJump Server„Å´„Éù„Éº„Éà1080„ÇíËª¢ÈÄÅ„Åô„ÇãSOCKS„Éó„É≠„Ç≠„Ç∑„Åå localhost„Å´Á´ã„Å°‰∏ä„Åå„Çä„ÄÅ„Åù„ÅÆlocalhost:1080„Å´ÂØæ„Åó„Å¶SOCKS4„Åæ„Åü„ÅØSOCKS5„Éó„É≠„Éà„Ç≥„É´„ÅßÊé•Á∂ö„Åô„Çã„Åì„Å®„ÅßJump Server„ÇíÁµåÁî±„Åó„Å¶ÈÄö‰ø°„ÇíË°å„ÅÜ„Åì„Å®„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çã„ÄÇ\nlocalhost„Éù„Éº„Éà1080„ÅÆJump Server„Å∏„ÅÆ„ÉÄ„Ç§„Éä„Éü„ÉÉ„ÇØ„Éï„Ç©„ÉØ„Éº„Éâ„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å´-D„Ç™„Éó„Ç∑„Éß„É≥„ÅßË°å„ÅÜ„ÄÇ\n$ ssh -2 -D 1080 -l [Account] [Jump Server] ÊØéÂõû-D„Ç™„Éó„Ç∑„Éß„É≥ÊåáÂÆö„ÅåÈù¢ÂÄí„Å™Â†¥Âêà„ÅØ„ÄÅÊ¨°„ÅÆ„Çà„ÅÜ„Å´confg(ssh_config)„Å´DynamicForward„ÅÆË®òËø∞„Åô„Çã„Åì„Å®„ÇÇÂèØËÉΩ„ÄÇ\n~/.ssh/config\nHost JumpServer User [AccountÂêç] HostName/IP [Jump Server„Éõ„Çπ„Éà/IP„Ç¢„Éâ„É¨„Çπ] Protocol 2 ForwardAgent yes DynamicForward 1080 ‰∏äË®òOpenSSH„ÅÆË®≠ÂÆö„ÅØ„ÄÅLinux/Mac„ÅÆÂ†¥Âêà„ÅØÊ®ôÊ∫ñTerminal„Çí‰Ωø„Åà„Å∞„Çà„ÅÑ„Åå„ÄÅWindows„ÅÆÂ†¥Âêà„ÅØCygwin„ÄÅXming„Å™„Å©XÁ´ØÊú´„Ç®„Éü„É•„É¨„Éº„Çø„ÇΩ„Éï„Éà„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„ÅÑ„Åü„Å†„ÅèÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ„Åæ„ÅüXÁ´ØÊú´„Ç®„Éü„É•„É¨„Éº„Çø„Éº„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å™„Åè„Å®„ÇÇWindows„Åß„ÅØÊúâÂêç„Å™SSH„ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÇΩ„Éï„ÉàPutty„Åå„ÉÄ„Ç§„Éä„Éü„ÉÉ„ÇØ„Éù„Éº„Éà„Éï„Ç©„ÉØ„Éº„Éâ„Å´ÂØæÂøú„Åó„Å¶„ÅÑ„Çã„Åü„ÇÅPutty„Çí‰Ωø„Å£„Å¶SOCKS„Éó„É≠„Ç≠„Ç∑‰ΩúÊàê„Åô„Çã„Åì„Å®„ÇÇÂèØËÉΩ„ÄÇË©≥„Åó„Åè„ÅØ„ÄåDynamic Port Forwarding with SOCKS over SSH„Äç„ÅåÂèÇËÄÉ„Å´„Å™„Çã„Åã„Å®„ÄÇ\nSOCKS„Éó„É≠„Ç≠„Ç∑„Çí‰Ωø„Å£„ÅüSSHÊé•Á∂ö Ê¨°„Å´‰∏äË®ò„Åß‰ΩúÊàê„Åó„ÅüSOCKS„Éó„É≠„Ç≠„Ç∑„ÇíÁµåÁî±„Åó„Å¶VNETÂÜÖ„ÅÆ„Çµ„Éº„Éê„Å´SSHÊé•Á∂ö„Çí„Åô„Çã„ÄÇ netcat„ÅßSOCKS„Éó„É≠„Ç≠„Ç∑„ÇíÁµåÁî±„Åó„Å¶localhost„Åã„ÇâÁõÆÁöÑ„ÅÆVNETÂÜÖ„Çµ„Éº„ÉêÔºàServerXÔºâÈñì„Å´netcat„Éà„É≥„Éç„É´„Çí‰ΩúÊàê„Åó„Å¶ServerX„Å´„ÅØ„Åù„ÅÆnetcat„Éà„É≥„Éç„É´„ÇíÈÄö„Åò„Å¶Êé•Á∂ö„Åô„Çã„ÄÇ\nlocal$ ssh -2 -l [Account] -o \u0026#39;ProxyCommand nc -x localhost:1080 %h %p\u0026#39; [ServerX] netcat „ÅÆ„Éó„É≠„Ç≠„Ç∑ÊåáÂÆö„ÅØ-x„Ç™„Éó„Ç∑„Éß„É≥„ÅßË°å„ÅÜ„ÄÇ „Åì„Åì„Åß„ÅØ‰∫ãÂâç„Å´‰ΩúÊàê„Åó„ÅüSOCKS„Éó„É≠„Ç≠„Ç∑(localhost:1080)„ÇíÊåáÂÆö„ÄÇ netcat„Éà„É≥„Éç„É´„ÅÆ‰ΩúÊàê„Ç≥„Éû„É≥„Éâ„ÅØProxyCommand„Å´Ë®òËø∞„Åô„Çã„ÄÇ„Åì„Å°„Çâ„ÇÇÊØéÂõûÈï∑„ÅÑ„Ç™„Éó„Ç∑„Éß„É≥ÂÖ•Âäõ„ÇíÈÅø„Åë„Çã„Åü„ÇÅ„Å´ configÔºàssh_configÔºâË®≠ÂÆö„Åô„Çã„Å®‰æøÂà©„Åß„ÅÇ„Çã„ÄÇ","title":"SOCKS„Éó„É≠„Ç≠„Ç∑„ÇíÁµåÁî±„Åó„ÅüAzure VNET„Éó„É©„Ç§„Éô„Éº„Éà„É™„ÇΩ„Éº„Çπ„Å∏„ÅÆ„Ç¢„ÇØ„Çª„Çπ"},{"content":"ARM„Å®Azure Insights API Azure‰∏ä„ÅÆ„Åï„Åæ„Åñ„Åæ„Å™„Çµ„Éº„Éì„Çπ„ÅÆ„É°„Éà„É™„ÉÉ„ÇØÊÉÖÂ†±„ÇíAPIÁµåÁî±„ÅßÂèñÂæó„Åó„Åü„ÅÑ„ÄÇ„Åù„ÅÜ„ÅÑ„ÅÜ„Åì„Å®„Åß„ÅÇ„Çå„Å∞Azure Service Management API„Çí‰Ωø„Åà„Å∞„ÅÑ„ÅÑ„Åò„ÇÉ„Å™„ÅÑ„Åã„Å®„ÅÑ„ÅÜÂ£∞„ÅåËÅû„Åì„Åà„Å¶„Åç„Åù„ÅÜ„Å™„Å®„Åì„Çç„Å†„ÅåÂÆü„ÅØÊó¢„Å´„Åì„ÅÆ„ÇÑ„ÇäÊñπ„ÅØÊôÇ‰ª£ÈÅÖ„Çå„Å®„Å™„Å£„Å¶„ÅÑ„Çã„Åì„Å®„Çí„ÅîÂ≠ò„Åò„Å†„Çç„ÅÜ„ÅãÔºü 2014Âπ¥5Êúà„Åî„ÇçÔºü„Å´ÁôªÂ†¥„Åó„ÅüAzure„ÅÆÊñ∞„Åó„ÅÑËÄÉ„ÅàÊñπ„Å´Resource„ÄÅResourceGroup„ÄÅAzure Resource Manager„Å®„ÅÑ„ÅÜ„ÇÇ„ÅÆ„Åå„ÅÇ„Çã„ÄÇÁ∞°Âçò„Å™Ë™¨Êòé„Åô„Çã„Å®„ÄÅAzure‰∏ä„ÅÆPaaS„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÄÅ‰ªÆÊÉ≥„Éû„Ç∑„É≥„Å™„Å©„Åô„Åπ„Å¶„ÅÆÁÆ°ÁêÜÂèØËÉΩ„Å™Ë≥áÊ∫ê„Çí„É™„ÇΩ„Éº„Çπ(Resource)„Å®„Çà„Å∞„Çå„ÇãÂçò‰Ωç„Å´Á¥∞ÂàÜÂåñ„Åó„ÄÅ„Åù„Çå„Çâ„Çí„Ç∞„É´„Éº„ÉóÂåñ„Åó„Åü„ÇÇ„ÅÆ„ÅåResourceGroup„ÄÅ„Åù„Åó„Å¶ÂÖ®„Å¶„ÅÆ„É™„ÇΩ„Éº„Çπ„ÅØAzure Resource ManagerÔºà‰ª•‰∏ãARMÔºâ„Å®„ÅÑ„ÅÜ„ÇÇ„ÅÆ„ÅßÁÆ°ÁêÜÂèØËÉΩ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ„Åù„Åó„Å¶„Åì„ÅÆARM„ÅßÁÆ°ÁêÜÂèØËÉΩ„Å™‰∏ñÁïå„ÅÆ„É™„ÇΩ„Éº„ÇπÁæ§„Å´Á¥ê„Å•„Åè„É°„Éà„É™„ÉÉ„ÇØ„Éá„Éº„Çø„ÅØAzure Insights API„ÅßÂèñÂæóÂèØËÉΩ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇÊú¨Ë®ò‰∫ã„Åß„ÅØ„Åï„Åæ„Åñ„Åæ„Å™„É™„ÇΩ„Éº„Çπ„ÅÆ‰∏≠„Åß„ÇÇWeb Apps„Å´Áµû„Å£„Å¶„ÄÅAzure Insights REST API (Metric)„Çí‰Ωø„Å£„Å¶„Åù„ÅÆ„É°„Éà„É™„ÉÉ„ÇØ„ÇíÂèñÂæó„Åô„ÇãÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶Á¥π‰ªã„Åô„Çã„ÄÇ\nARM Explorer„Åß„Å©„ÅÆ„É°„Éà„É™„ÉÉ„ÇØ„ÅåÂèñÂæóÂèØËÉΩ„Å™„ÅÆ„ÅãÁ¢∫Ë™ç„Åô„Çã ARM Explorer (https://resources.azure.com/) „Çí„ÅîÂ≠ò„Åò„Å†„Çç„ÅÜ„ÅãÔºü„ÄÄ„Åì„Çå„ÅØ„Åù„ÅÆÂêç„ÅÆÈÄö„ÇäAzure‰∏ä„ÅÆÂÖ®„Å¶„ÅÆ„É™„ÇΩ„Éº„ÇπÔºà„ÅîÂà©Áî®„ÅÆ„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥„Å´Á¥ê„Å•„ÅèÂÖ®„Å¶„ÅÆ„É™„ÇΩ„Éº„ÇπÔºâ„ÅÆ„Ç®„ÇØ„Çπ„Éó„É≠„Éº„É©„Éº„Åß„ÅÇ„Çä„ÄÅ„Åì„Çå„Çí‰Ωø„ÅÜ„Åì„Å®„Åß„Åì„ÅÆARMÁÆ°ÁêÜ‰∏ã„ÅÆ‰∏ñÁïå„ÅÆ„Åô„Åπ„Å¶„ÅÆ„É™„ÇΩ„Éº„Çπ„Çí„Ç®„ÇØ„Çπ„Éó„É≠„Éº„É©„Éº„Éì„É•„Éº„ÅßÈñ≤Ë¶ß„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ„Åì„ÅÆARM Explorer„ÅßÈñ≤Ë¶ßÂèØËÉΩ„Å™ÂêÑ„É™„ÇΩ„Éº„Çπ„ÅÆÊÉÖÂ†±„ÅÆ‰∏≠„Å´metricdefinitions„Å®„ÅÑ„ÅÜ„ÇÇ„ÅÆ„Åå„ÅÇ„Å£„Å¶„ÄÅ„Åì„Çå„Å´„ÅØ„Åù„ÅÆ„É™„ÇΩ„Éº„Çπ„Å´ÂØæ„Åó„Å¶ÊåáÂÆöÂèØËÉΩ„Å™„É°„Éà„É™„ÉÉ„ÇØ„ÅÆÁ®ÆÈ°û„ÇÑ„Åù„ÅÆÂÆöÁæ©ÊÉÖÂ†±„Å™„Å©„ÅåÊ†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇ„É™„ÇΩ„Éº„Çπ„ÅÆ„É°„Éà„É™„ÉÉ„ÇØÂèñÂæó„Çí„Åô„ÇãÈöõ„ÅØ„ÄÅ„Åæ„Åö„ÅØARM Explorer„ÅßÁõÆÁöÑ„ÅÆ„É™„ÇΩ„Éº„Çπ„ÅÆmetricdefinitions„Åã„ÇâÊåáÂÆöÂèØËÉΩ„Å™„É°„Éà„É™„ÉÉ„ÇØ„ÅÆÁ®ÆÈ°û„ÇíÊääÊè°„Åó„Å¶„Åã„ÇâAPI„É™„ÇØ„Ç®„Çπ„Éà„ÇíÁµÑ„ÅøÁ´ã„Å¶„Å¶„ÅÑ„Åü„Å†„Åë„Çå„Å∞„Å®ÊÄù„ÅÜ„ÄÇARM Explorer„Çí‰Ωø„Å£„Å¶Êú¨Ë®ò‰∫ã„ÅßÂèñÂæóÂØæË±°„Å®„Åó„Å¶„ÅÑ„ÇãWeb AppsÔºà„Åì„Åì„Åß„ÅØ„Çµ„Ç§„ÉàÂêçyoichikademo„ÇíÂØæË±°Ôºâ„ÅÆmetricdefinitions„ÇíÈñ≤Ë¶ß„Åó„Å¶„ÅÑ„Çã„ÅÆ„Åå‰ª•‰∏ã„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„Å´„Å™„Çã„ÄÇ\nAzure Insights REST API„É°„Éà„É™„ÉÉ„ÇØÂèñÂæó„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ Azure Insights API„Å´„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å™(1)„É°„Éà„É™„ÉÉ„ÇØÂÆöÁæ©‰∏ÄË¶ß„ÅÆÂèñÂæó„Å®(2)ÂØæË±°„É™„ÇΩ„Éº„Çπ„ÅÆ„É°„Éà„É™„ÉÉ„ÇØÊÉÖÂ†±ÂèñÂæó„ÅÆ2„Å§„ÅÆ„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„Åå„ÅÇ„Çã„ÄÇÂΩìÁÑ∂„Å™„Åå„Çâ„É°„Éà„É™„ÉÉ„ÇØ„ÅÆÂèñÂæó„Å´„ÅØ(2)„ÅÆ„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„Çí‰ΩøÁî®„Åô„Çã„ÄÇ\n(1)„É°„Éà„É™„ÉÉ„ÇØÂÆöÁæ©‰∏ÄË¶ßÂèñÂæó\nGET https://management.azure.com /subscriptions/{-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}/metricDefinitions [Parameters] api-version={api-version} $filter={filter} (2)„É°„Éà„É™„ÉÉ„ÇØÊÉÖÂ†±ÂèñÂæó\nGET https://management.azure.com /subscriptions/{-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/sites/{sitename}/metrics [Parameters] api-version={api-version} $filter={filter} API„ÅÆÂÖ±ÈÄöÈÉ®ÂàÜ„ÅØ‰∏ãË®ò„ÅÆÈÄö„Çä„ÄÇAzure Insights API„Å∏„ÅÆÂÖ®„Å¶„ÅÆË¶ÅÊ±Ç„ÅØAzure Active Directory„Çí‰ΩøÁî®„Åó„Å¶Ë™çË®º„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„ÄÅ„Åì„ÅÆË™çË®º„Å´„Çà„ÇäÂæó„Çâ„Çå„Åü„Éà„Éº„ÇØ„É≥„ÇíÂêÑAPI„É™„ÇØ„Ç®„Çπ„Éà„ÅÆAuthorization„Éò„ÉÉ„ÉÄ„Å´ÊåáÂÆö„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ„Éà„Éº„ÇØ„É≥ÂèñÂæó„ÅÆÊñπÊ≥ï„Å´„ÅØPowerShell„Çí‰ΩøÁî®„Åó„ÅüÊñπÊ≥ï„Å®AzureÁÆ°ÁêÜ„Éù„Éº„Çø„É´„Çí‰ΩøÁî®„Åó„Å¶Ë™çË®º„Åô„Çã2„Å§„ÅÆÊñπÊ≥ï„Åå„ÅÇ„Çã„ÄÇË©≥„Åó„Åè„ÅØ„ÄåAzure „Ç§„É≥„Çµ„Ç§„ÉàË¶ÅÊ±Ç„ÇíË™çË®º„Åô„Çã„Äç„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ„ÄÇ\n{api-version}Ôºö\u0026ldquo;2014-04-01\u0026rdquo; {subscription-id} Ôºö „Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥ID {resource-group-name}Ôºö „É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„ÇíÊåáÂÆö„ÄÇË©≥Á¥∞„ÅØ„Äå„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„Çí‰ΩøÁî®„Åó„Åü Azure „É™„ÇΩ„Éº„Çπ„ÅÆÁÆ°ÁêÜ„Äç„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ Accept„Éò„ÉÉ„ÉÄ„ÉºÔºö\u0026quot;application/json\u0026quot;„ÇíÊåáÂÆö„ÄÇ„Åì„Çå„ÇíÊåáÂÆö„Åó„Å™„ÅÑÂ†¥Âêà„ÄÅÁµêÊûú„ÅØXML„ÅßËøîÂç¥„Åï„Çå„Çã Authorization„Éò„ÉÉ„ÉÄ„Éº„Å´Azure Active Directory „Åã„ÇâÂèñÂæó„Åô„Çã JSON Web TokenÔºàJWTÔºâ „Å´Ë®≠ÂÆö„Åô„Çã„ÄÇË©≥Á¥∞„ÅØ„ÄåAzure „Ç§„É≥„Çµ„Ç§„ÉàË¶ÅÊ±Ç„ÇíË™çË®º„Åô„Çã„Äç„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ ÂÆüÈöõ„ÅÆ„É°„Éà„É™„ÇØ„ÇπÂèñÂæóAPI„Åß„ÅØ$filter„Éë„É©„É°„Éº„Çø„ÅÆ‰ªò‰∏é„ÅåÂøÖË¶Å„Å®„Å™„Çã„ÄÇ$filter„Å´„ÅØ‰∏ª„Å´„É°„Éà„É™„ÉÉ„ÇØ„ÅÆÁ®ÆÈ°û(name.value)„ÄÅÊôÇÈñì„É¨„É≥„Ç∏(startTime - endTime)„ÄÅ„Ç§„É≥„Çø„Éº„Éê„Éº„É´(timeGrain)„ÅÆ3Á®ÆÈ°û„ÅÆÊù°‰ª∂„ÇíÊåáÂÆö„Åô„Çã„ÄÇ\nCpuTime„Å®MemoryWorkingSet„É°„Éà„É™„ÉÉ„ÇØÊåáÂÆö‰æã (ÂÆüÈöõ„ÅØ1Ë°å„Å´„Åæ„Å®„ÇÅ„Çã)\n$filter= (name.value eq ‚ÄòCpuTime‚Äô or name.value eq ‚ÄòMemoryWorkingSet‚Äô) and startTime eq ‚Äò2015-08-01T15:00:00Z‚Äô and endTime eq ‚Äò2015-08-02T15:00:00Z‚Äô and timeGrain eq duration‚ÄôPT1M‚Äô $filter„Éë„É©„É°„Éº„Çø„Å´„ÅØÂÆüÈöõ„ÅØURL Encode„Åã„Åë„ÅüÊñáÂ≠óÂàó„ÇíÊ∏°„Åô„ÄÇ„É°„Éà„É™„ÉÉ„ÇØ„ÅÆ„Ç§„É≥„Çø„Éº„Éê„É´ÔºàtimeGrainÔºâ„ÅØ1ÂàÜÂçò‰Ωç„Å™„ÇâPT1M„ÄÅ5ÂàÜÂçò‰Ωç„Å™„ÇâPT5M„ÄÅ1ÊôÇÈñìÂçò‰Ωç„Å™„Çâ„Å∞PT1H„ÄÅ1Êó•Âçò‰Ωç„Å™„Çâ„Å∞PT1D„Å™„Å©„ÇíÊåáÂÆö„Åô„Çã„ÄÇ\n„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ Azure Insights„ÅÆ„É°„Éà„É™„ÉÉ„ÇØÂèñÂæóAPI„Çí‰Ωø„Å£„Å¶Web App„ÅÆ„É°„Éà„É™„ÉÉ„ÇØ„ÇíÂèñÂæó„Åô„Çã„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ„ÇíGithub„Å´„Ç¢„ÉÉ„Éó„Åó„Åü„ÄÇÂêåÊßò„ÅÆ„Åì„Å®„ÇíËÄÉ„Åà„Å¶„ÅÑ„Çã‰∫∫„Å´„Å®„Å£„Å¶Â∞ë„Åó„Åß„ÇÇÂèÇËÄÉ„Å´„Å™„Çå„Å∞Âπ∏„ÅÑ„Åß„ÅÇ„Çã„ÄÇ\nhttps://github.com/yokawasa/azure-samples/tree/master/GetAppServiceMetrics\n„Åì„ÅÆ„Çµ„É≥„Éó„É´„Åß„ÅØCpuTime„ÄÅMemoryWorkingSet„ÄÅAverageResponseTime„ÅÆ3„Å§„ÅÆ„É°„Éà„É™„ÉÉ„ÇØÊÉÖÂ†±„Çí1ÊôÇÈñì„Åî„Å®„ÅÆ„Ç§„É≥„Çø„Éº„Éê„É´„Åß2015-08-01ÔΩû2015-08-30„ÅÆÊúüÈñìÂàÜÂèñÂæó„Åô„Çã„Çà„ÅÜ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ„Åì„ÅÆÈÉ®ÂàÜ„ÅØ„Éè„Éº„Éâ„Ç≥„Éº„Éá„Ç£„É≥„Ç∞„Åó„Å¶„ÅÑ„Çã„ÅÆ„ÅßÂøÖË¶Å„Å´Âøú„Åò„Å¶„ÇΩ„Éº„Çπ„Ç≥„Éº„ÉâÔºàProgram.csÔºâ„ÇíÈÅ©ÂÆúÂ§âÊõ¥„ÅÑ„Åü„Å†„Åë„Çå„Å∞„Å®ÊÄù„ÅÜ„ÄÇ„Åæ„ÅüÂà©Áî®ËÄÖ„Åî„Å®„ÅÆÊÉÖÂ†±„ÅØË®≠ÂÆö„Éï„Ç°„Ç§„É´App.config„ÅßÊåáÂÆö„Åô„Çã„ÄÇ‰ª•‰∏ãÁ∞°Âçò„Å´App.config„ÅÆË®≠ÂÆöÂÜÖÂÆπ„ÇíËß£Ë™¨„Åô„Çã„ÄÇ\nApp.config\n\u0026lt;appSettings\u0026gt; \u0026lt;add key=\u0026#34;subscriptionId\u0026#34; value=\u0026#34;[your subscription Id]\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;resourceGroup\u0026#34; value=\u0026#34;[your resource group name]\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;siteName\u0026#34; value=\u0026#34;[site Name]\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;tenantId\u0026#34; value=\u0026#34;[you tenant ID]\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;applicationId\u0026#34; value=\u0026#34;[your application id]\u0026#34; /\u0026gt; \u0026lt;add key=\u0026#34;redirectUri\u0026#34; value=\u0026#39;[redirect url]\u0026#39; /\u0026gt; \u0026lt;/appSettings\u0026gt; siteName„ÅØWeb App„Åß„ÅÑ„ÅÜ„Å®„Åì„Çç„ÅÆAppÂêç„ÄÅxxxx.azurewebsites.net„ÅÆxxxÈÉ®ÂàÜ tenant ID„Å®application ID„ÅÆÂèñÂæóÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶„ÅØ„ÄåAzure „Ç§„É≥„Çµ„Ç§„ÉàË¶ÅÊ±Ç„ÇíË™çË®º„Åô„Çã„Äç„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ redirect Uri„ÅØAADË™çË®º„Éà„Éº„ÇØ„É≥ÂèñÂæóÊôÇ„ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„ÉàURI„ÄÇ„Å®„Çä„ÅÇ„Åà„Åöhttp://foobar„Å™„Å©‰Ωï„ÅãÊåáÂÆö„Åó„Å¶„Åä„Åè„ÅßOK LINKS Azure Service Management REST API Reference (old) Azure Service Management monitoring (classic) API (old) Azure Resource Management APIs Azure Insights REST API Reference (MetricÂèñÂæóAPI) Azure „Ç§„É≥„Çµ„Ç§„ÉàË¶ÅÊ±Ç„ÇíË™çË®º„Åô„Çã „É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„Çí‰ΩøÁî®„Åó„Åü Azure „É™„ÇΩ„Éº„Çπ„ÅÆÁÆ°ÁêÜ ","permalink":"https://unofficialism.info/posts/getting-resource-metrics-with-azure-insights-rest-api/","summary":"ARM„Å®Azure Insights API Azure‰∏ä„ÅÆ„Åï„Åæ„Åñ„Åæ„Å™„Çµ„Éº„Éì„Çπ„ÅÆ„É°„Éà„É™„ÉÉ„ÇØÊÉÖÂ†±„ÇíAPIÁµåÁî±„ÅßÂèñÂæó„Åó„Åü„ÅÑ„ÄÇ„Åù„ÅÜ„ÅÑ„ÅÜ„Åì„Å®„Åß„ÅÇ„Çå„Å∞Azure Service Management API„Çí‰Ωø„Åà„Å∞„ÅÑ„ÅÑ„Åò„ÇÉ„Å™„ÅÑ„Åã„Å®„ÅÑ„ÅÜÂ£∞„ÅåËÅû„Åì„Åà„Å¶„Åç„Åù„ÅÜ„Å™„Å®„Åì„Çç„Å†„ÅåÂÆü„ÅØÊó¢„Å´„Åì„ÅÆ„ÇÑ„ÇäÊñπ„ÅØÊôÇ‰ª£ÈÅÖ„Çå„Å®„Å™„Å£„Å¶„ÅÑ„Çã„Åì„Å®„Çí„ÅîÂ≠ò„Åò„Å†„Çç„ÅÜ„ÅãÔºü 2014Âπ¥5Êúà„Åî„ÇçÔºü„Å´ÁôªÂ†¥„Åó„ÅüAzure„ÅÆÊñ∞„Åó„ÅÑËÄÉ„ÅàÊñπ„Å´Resource„ÄÅResourceGroup„ÄÅAzure Resource Manager„Å®„ÅÑ„ÅÜ„ÇÇ„ÅÆ„Åå„ÅÇ„Çã„ÄÇÁ∞°Âçò„Å™Ë™¨Êòé„Åô„Çã„Å®„ÄÅAzure‰∏ä„ÅÆPaaS„Ç§„É≥„Çπ„Çø„É≥„Çπ„ÄÅ‰ªÆÊÉ≥„Éû„Ç∑„É≥„Å™„Å©„Åô„Åπ„Å¶„ÅÆÁÆ°ÁêÜÂèØËÉΩ„Å™Ë≥áÊ∫ê„Çí„É™„ÇΩ„Éº„Çπ(Resource)„Å®„Çà„Å∞„Çå„ÇãÂçò‰Ωç„Å´Á¥∞ÂàÜÂåñ„Åó„ÄÅ„Åù„Çå„Çâ„Çí„Ç∞„É´„Éº„ÉóÂåñ„Åó„Åü„ÇÇ„ÅÆ„ÅåResourceGroup„ÄÅ„Åù„Åó„Å¶ÂÖ®„Å¶„ÅÆ„É™„ÇΩ„Éº„Çπ„ÅØAzure Resource ManagerÔºà‰ª•‰∏ãARMÔºâ„Å®„ÅÑ„ÅÜ„ÇÇ„ÅÆ„ÅßÁÆ°ÁêÜÂèØËÉΩ„Å´„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ„Åù„Åó„Å¶„Åì„ÅÆARM„ÅßÁÆ°ÁêÜÂèØËÉΩ„Å™‰∏ñÁïå„ÅÆ„É™„ÇΩ„Éº„ÇπÁæ§„Å´Á¥ê„Å•„Åè„É°„Éà„É™„ÉÉ„ÇØ„Éá„Éº„Çø„ÅØAzure Insights API„ÅßÂèñÂæóÂèØËÉΩ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇÊú¨Ë®ò‰∫ã„Åß„ÅØ„Åï„Åæ„Åñ„Åæ„Å™„É™„ÇΩ„Éº„Çπ„ÅÆ‰∏≠„Åß„ÇÇWeb Apps„Å´Áµû„Å£„Å¶„ÄÅAzure Insights REST API (Metric)„Çí‰Ωø„Å£„Å¶„Åù„ÅÆ„É°„Éà„É™„ÉÉ„ÇØ„ÇíÂèñÂæó„Åô„ÇãÊñπÊ≥ï„Å´„Å§„ÅÑ„Å¶Á¥π‰ªã„Åô„Çã„ÄÇ\nARM Explorer„Åß„Å©„ÅÆ„É°„Éà„É™„ÉÉ„ÇØ„ÅåÂèñÂæóÂèØËÉΩ„Å™„ÅÆ„ÅãÁ¢∫Ë™ç„Åô„Çã ARM Explorer (https://resources.azure.com/) „Çí„ÅîÂ≠ò„Åò„Å†„Çç„ÅÜ„ÅãÔºü„ÄÄ„Åì„Çå„ÅØ„Åù„ÅÆÂêç„ÅÆÈÄö„ÇäAzure‰∏ä„ÅÆÂÖ®„Å¶„ÅÆ„É™„ÇΩ„Éº„ÇπÔºà„ÅîÂà©Áî®„ÅÆ„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥„Å´Á¥ê„Å•„ÅèÂÖ®„Å¶„ÅÆ„É™„ÇΩ„Éº„ÇπÔºâ„ÅÆ„Ç®„ÇØ„Çπ„Éó„É≠„Éº„É©„Éº„Åß„ÅÇ„Çä„ÄÅ„Åì„Çå„Çí‰Ωø„ÅÜ„Åì„Å®„Åß„Åì„ÅÆARMÁÆ°ÁêÜ‰∏ã„ÅÆ‰∏ñÁïå„ÅÆ„Åô„Åπ„Å¶„ÅÆ„É™„ÇΩ„Éº„Çπ„Çí„Ç®„ÇØ„Çπ„Éó„É≠„Éº„É©„Éº„Éì„É•„Éº„ÅßÈñ≤Ë¶ß„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ„Åì„ÅÆARM Explorer„ÅßÈñ≤Ë¶ßÂèØËÉΩ„Å™ÂêÑ„É™„ÇΩ„Éº„Çπ„ÅÆÊÉÖÂ†±„ÅÆ‰∏≠„Å´metricdefinitions„Å®„ÅÑ„ÅÜ„ÇÇ„ÅÆ„Åå„ÅÇ„Å£„Å¶„ÄÅ„Åì„Çå„Å´„ÅØ„Åù„ÅÆ„É™„ÇΩ„Éº„Çπ„Å´ÂØæ„Åó„Å¶ÊåáÂÆöÂèØËÉΩ„Å™„É°„Éà„É™„ÉÉ„ÇØ„ÅÆÁ®ÆÈ°û„ÇÑ„Åù„ÅÆÂÆöÁæ©ÊÉÖÂ†±„Å™„Å©„ÅåÊ†ºÁ¥ç„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇ„É™„ÇΩ„Éº„Çπ„ÅÆ„É°„Éà„É™„ÉÉ„ÇØÂèñÂæó„Çí„Åô„ÇãÈöõ„ÅØ„ÄÅ„Åæ„Åö„ÅØARM Explorer„ÅßÁõÆÁöÑ„ÅÆ„É™„ÇΩ„Éº„Çπ„ÅÆmetricdefinitions„Åã„ÇâÊåáÂÆöÂèØËÉΩ„Å™„É°„Éà„É™„ÉÉ„ÇØ„ÅÆÁ®ÆÈ°û„ÇíÊääÊè°„Åó„Å¶„Åã„ÇâAPI„É™„ÇØ„Ç®„Çπ„Éà„ÇíÁµÑ„ÅøÁ´ã„Å¶„Å¶„ÅÑ„Åü„Å†„Åë„Çå„Å∞„Å®ÊÄù„ÅÜ„ÄÇARM Explorer„Çí‰Ωø„Å£„Å¶Êú¨Ë®ò‰∫ã„ÅßÂèñÂæóÂØæË±°„Å®„Åó„Å¶„ÅÑ„ÇãWeb AppsÔºà„Åì„Åì„Åß„ÅØ„Çµ„Ç§„ÉàÂêçyoichikademo„ÇíÂØæË±°Ôºâ„ÅÆmetricdefinitions„ÇíÈñ≤Ë¶ß„Åó„Å¶„ÅÑ„Çã„ÅÆ„Åå‰ª•‰∏ã„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„Å´„Å™„Çã„ÄÇ\nAzure Insights REST API„É°„Éà„É™„ÉÉ„ÇØÂèñÂæó„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ Azure Insights API„Å´„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å™(1)„É°„Éà„É™„ÉÉ„ÇØÂÆöÁæ©‰∏ÄË¶ß„ÅÆÂèñÂæó„Å®(2)ÂØæË±°„É™„ÇΩ„Éº„Çπ„ÅÆ„É°„Éà„É™„ÉÉ„ÇØÊÉÖÂ†±ÂèñÂæó„ÅÆ2„Å§„ÅÆ„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„Åå„ÅÇ„Çã„ÄÇÂΩìÁÑ∂„Å™„Åå„Çâ„É°„Éà„É™„ÉÉ„ÇØ„ÅÆÂèñÂæó„Å´„ÅØ(2)„ÅÆ„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„Çí‰ΩøÁî®„Åô„Çã„ÄÇ\n(1)„É°„Éà„É™„ÉÉ„ÇØÂÆöÁæ©‰∏ÄË¶ßÂèñÂæó\nGET https://management.azure.com /subscriptions/{-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}/metricDefinitions [Parameters] api-version={api-version} $filter={filter} (2)„É°„Éà„É™„ÉÉ„ÇØÊÉÖÂ†±ÂèñÂæó\nGET https://management.azure.com /subscriptions/{-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/sites/{sitename}/metrics [Parameters] api-version={api-version} $filter={filter} API„ÅÆÂÖ±ÈÄöÈÉ®ÂàÜ„ÅØ‰∏ãË®ò„ÅÆÈÄö„Çä„ÄÇAzure Insights API„Å∏„ÅÆÂÖ®„Å¶„ÅÆË¶ÅÊ±Ç„ÅØAzure Active Directory„Çí‰ΩøÁî®„Åó„Å¶Ë™çË®º„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„ÄÅ„Åì„ÅÆË™çË®º„Å´„Çà„ÇäÂæó„Çâ„Çå„Åü„Éà„Éº„ÇØ„É≥„ÇíÂêÑAPI„É™„ÇØ„Ç®„Çπ„Éà„ÅÆAuthorization„Éò„ÉÉ„ÉÄ„Å´ÊåáÂÆö„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ„Éà„Éº„ÇØ„É≥ÂèñÂæó„ÅÆÊñπÊ≥ï„Å´„ÅØPowerShell„Çí‰ΩøÁî®„Åó„ÅüÊñπÊ≥ï„Å®AzureÁÆ°ÁêÜ„Éù„Éº„Çø„É´„Çí‰ΩøÁî®„Åó„Å¶Ë™çË®º„Åô„Çã2„Å§„ÅÆÊñπÊ≥ï„Åå„ÅÇ„Çã„ÄÇË©≥„Åó„Åè„ÅØ„ÄåAzure „Ç§„É≥„Çµ„Ç§„ÉàË¶ÅÊ±Ç„ÇíË™çË®º„Åô„Çã„Äç„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ„ÄÇ\n{api-version}Ôºö\u0026ldquo;2014-04-01\u0026rdquo; {subscription-id} Ôºö „Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥ID {resource-group-name}Ôºö „É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„ÇíÊåáÂÆö„ÄÇË©≥Á¥∞„ÅØ„Äå„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„Éó„Çí‰ΩøÁî®„Åó„Åü Azure „É™„ÇΩ„Éº„Çπ„ÅÆÁÆ°ÁêÜ„Äç„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ Accept„Éò„ÉÉ„ÉÄ„ÉºÔºö\u0026quot;application/json\u0026quot;„ÇíÊåáÂÆö„ÄÇ„Åì„Çå„ÇíÊåáÂÆö„Åó„Å™„ÅÑÂ†¥Âêà„ÄÅÁµêÊûú„ÅØXML„ÅßËøîÂç¥„Åï„Çå„Çã Authorization„Éò„ÉÉ„ÉÄ„Éº„Å´Azure Active Directory „Åã„ÇâÂèñÂæó„Åô„Çã JSON Web TokenÔºàJWTÔºâ „Å´Ë®≠ÂÆö„Åô„Çã„ÄÇË©≥Á¥∞„ÅØ„ÄåAzure „Ç§„É≥„Çµ„Ç§„ÉàË¶ÅÊ±Ç„ÇíË™çË®º„Åô„Çã„Äç„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ ÂÆüÈöõ„ÅÆ„É°„Éà„É™„ÇØ„ÇπÂèñÂæóAPI„Åß„ÅØ$filter„Éë„É©„É°„Éº„Çø„ÅÆ‰ªò‰∏é„ÅåÂøÖË¶Å„Å®„Å™„Çã„ÄÇ$filter„Å´„ÅØ‰∏ª„Å´„É°„Éà„É™„ÉÉ„ÇØ„ÅÆÁ®ÆÈ°û(name.","title":"Azure Insights REST API„Çí‰Ωø„Å£„Å¶AzureÂêÑ„É™„ÇΩ„Éº„Çπ„ÅÆ„É°„Éà„É™„ÉÉ„ÇØ„ÇíÊäΩÂá∫„Åô„Çã"},{"content":"Azure Search„ÅÆ„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÊõ¥Êñ∞ÊñπÊ≥ï„Å´„ÅØÂ§ß„Åç„ÅèÂàÜ„Åë„Å¶PUSH„Å®PULL„ÅÆÔºíÁ®ÆÈ°û„ÅÇ„Çã„ÄÇPUSH„ÅØÁõ¥Êé•Indexing API„Çí‰Ωø„Å£„Å¶Azure Search„Å´„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíPOST„Åó„Å¶Êõ¥Êñ∞„ÄÇPULL„ÅØÁâπÂÆö„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å´ÂØæ„Åó„Å¶„Éù„Éº„É™„É≥„Ç∞„Åó„Å¶Êõ¥Êñ∞„Åß„ÄÅAzure Search„ÅÆÂ†¥Âêà„ÄÅDocumentDB„Å®SQL Database„ÅÆ2Á®ÆÈ°û„ÅÆ„Éá„Éº„Çø„ÇΩ„Éº„Çπ„ÇíÂØæË±°„Å´„ÉØ„É≥„Çø„Ç§„É†„ÇÇ„Åó„Åè„ÅØÂÆöÊúüÁöÑ„Å™„Çπ„Ç±„Ç∏„É•„Éº„É´ÂÆüË°å„ÅåÂèØËÉΩ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ„Åì„Åì„Åß„ÅØDocumentDB„Çí„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å®„Åó„Å¶„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÇíÊõ¥Êñ∞„Åô„ÇãÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åô„Çã„ÄÇ\n„Çµ„É≥„Éó„É´ÊßãÊàê„Å®Âá¶ÁêÜ„Éï„É≠„Éº„ÅÆË™¨Êòé „Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å´DocumentDB„ÇíÂà©Áî®„Åô„Çã„ÄÇ„Éá„Éº„Çø„ÄåDOCUMENTDB PYTHON SDK„Å®FEEDPARSER„Åß‰Ωú„ÇãÁ∞°Êòì„ÇØ„É≠„Éº„É©„Éº„Äç„Å´„Åä„ÅÑ„Å¶„ÇØ„É≠„Éº„É™„É≥„Ç∞„Åï„ÇåDocumentDB„Å´‰øùÂ≠ò„Åï„Çå„Åü„Éñ„É≠„Ç∞Ë®ò‰∫ã„Éá„Éº„Çø„Çí‰ΩøÁî®„Åô„Çã„ÄÇ„Åù„Åó„Å¶DocumentDB„ÇíÂÆöÊúüÁöÑ„Å´„Éù„Éº„É™„É≥„Ç∞„ÇíË°å„ÅÑÊõ¥Êñ∞„Åå„ÅÇ„Å£„Åü„É¨„Ç≥„Éº„Éâ„ÅÆ„Åø„ÇíAzure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´ÂèçÊò†„Åô„Çã„Åü„ÇÅ„Å´DocumentDB„Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÇíË®≠ÂÆö„Åô„Çã„ÄÇÂÖ®‰ΩìÊßãÊàê„Å®„Åó„Å¶„ÅØ‰∏ãË®ò„ÅÆÈÄö„Çä„Å®„Å™„Çã„ÄÇ\nDocumentDB„Å®Êõ¥Êñ∞ÂÖàÊ§úÁ¥¢„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆ„Éï„Ç£„Éº„É´„Éâ„ÅÆ„Éû„ÉÉ„Éî„É≥„Ç∞ DocumentDB„Çí„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å®„Åó„Å¶Azure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´Êõ¥Êñ∞„ÇíË°å„ÅÜ„Åü„ÇÅDocumentDB„ÅÆÂèÇÁÖßÂÖà„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÅÆ„Éï„Ç£„Éº„É´„Éâ„Å®Êõ¥Êñ∞ÂÖàAzure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆ„Éï„Ç£„Éº„É´„Éâ„Çí„Éû„ÉÉ„Éî„É≥„Ç∞„ÇíË°å„ÅÜ„ÄÇ„Éû„ÉÉ„Éî„É≥„Ç∞„ÅØ„Éá„Éº„Çø„ÇΩ„Éº„ÇπÂÆöÁæ©‰∏≠„ÅÆDocumentDBÂèÇÁÖßÁî®Query„ÅßË°å„ÅÜ„ÄÇAzure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´„Ç§„É≥„Ç∏„Çß„Çπ„Éà„Åô„Çã„Éï„Ç£„Éº„É´„Éâ„ÇíDocumentDB„ÅÆSELECT„ÇØ„Ç®„É™„ÉºÊåáÂÆö„Åô„Çã„ÅÆ„Å†„Åå„ÄÅAzure Search„Å®DocumentDB„ÅÆ„Éï„Ç£„Éº„É´„Éâ„ÅåÁï∞„Å™„ÇãÂ†¥Âêà„ÅØ‰∏ãÂõ≥„ÅÆ„Çà„ÅÜ„Å´SELECT \u0026ldquo;Docdb„Éï„Ç£„Éº„É´„ÉâÂêç\u0026rdquo; AS \u0026ldquo;Search„Éï„Ç£„Éº„É´„ÉâÂêç\u0026quot;„Åß„Ç§„É≥„Ç∏„Çß„Çπ„ÉàÂÖà„Éï„Ç£„Éº„É´„ÉâÂêç„ÇíÊåáÂÆö„Åô„Çã„ÄÇ„Éá„Éº„Çø„ÇΩ„Éº„ÇπÂÆöÁæ©„Å´„Å§„ÅÑ„Å¶„ÅØÂæåËø∞„ÅÆË®≠ÂÆöÂÜÖÂÆπ„ÇíÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ\nConfiguration ‰ª•‰∏ãÔºëÔΩûÔºî„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó„Åß„Éá„Éº„Çø„ÇΩ„Éº„Çπ„ÅÆ‰ΩúÊàê„ÄÅÊ§úÁ¥¢„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆ‰ΩúÊàê„ÄÅ„Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÅÆ‰ΩúÊàê„ÄÅ„Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÅÆÂÆüË°å„ÇíË°å„ÅÜ„ÄÇ\n(1) „Éá„Éº„Çø„ÇΩ„Éº„Çπ„ÅÆ‰ΩúÊàê\ncredential.connectionString„ÅßÊé•Á∂öÂÖàDocumentDBÊñáÂ≠óÂàó„Å®ÂØæË±°„Éá„Éº„Çø„Éô„Éº„Çπ„ÅÆÊåáÂÆö„ÇíË°å„ÅÜ„ÄÇcontainer.(name|query)„ÅßÂØæË±°„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥Âêç„Å®ÂèÇÁÖßÁî®SELECTÊñá„ÇíÊåáÂÆö„Åô„Çã„ÄÇSELECTÊñá„ÅØDocumentDB„Å®„Ç§„É≥„Ç∏„Çß„Çπ„ÉàÂÖàAzure Search„ÅÆ„Éï„Ç£„Éº„É´„Éâ„Çª„ÉÉ„ÉàÔºà„Éï„Ç£„Éº„É´„ÉâÂêç„Å®Êï∞Ôºâ„ÅåÂêå„Åò„Åß„ÅÇ„Çå„Å∞ÁúÅÁï•ÂèØ„ÄÇË©≥Á¥∞„ÅØ„Åì„Å°„Çâ„ÇíÂèÇÁÖß„ÄÇ\n#!/bin/sh SERVICE_NAME=\u0026#39;\u0026lt;Azure Search Service Name\u0026gt;\u0026#39; API_VER=\u0026#39;2015-02-28-Preview\u0026#39; ADMIN_KEY=\u0026#39;\u0026lt;API KEY\u0026gt;\u0026#39; CONTENT_TYPE=\u0026#39;application/json\u0026#39; URL=\u0026#34;https://$SERVICE_NAME.search.windows.net/datasources?api-version=$API_VER\u0026#34; curl -s\\ -H \u0026#34;Content-Type: $CONTENT_TYPE\u0026#34;\\ -H \u0026#34;api-key: $ADMIN_KEY\u0026#34;\\ -XPOST $URL -d\u0026#39;{ \u0026#34;name\u0026#34;: \u0026#34;docdbds-article\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;documentdb\u0026#34;, \u0026#34;credentials\u0026#34;: { \u0026#34;connectionString\u0026#34;: \u0026#34;AccountEndpoint=https://\u0026lt;DOCUMENTDB_ACCOUNT\u0026gt;.documents.azure.com;AccountKey=\u0026lt;DOCUMENTDB_MASTER_KEY_STRING\u0026gt;;Database=\u0026lt;DOCUMENTDB_DBNAME\u0026gt;\u0026#34; }, \u0026#34;container\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;article_collection\u0026#34;, \u0026#34;query\u0026#34;: \u0026#34;SELECT s.id AS itemno, s.title AS subject, s.content AS body, s.permalink AS url, s.postdate AS date, s._ts FROM Sessions s WHERE s._ts \u0026gt; @HighWaterMark\u0026#34; }, \u0026#34;dataChangeDetectionPolicy\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#Microsoft.Azure.Search.HighWaterMarkChangeDetectionPolicy\u0026#34;, \u0026#34;highWaterMarkColumnName\u0026#34;: \u0026#34;_ts\u0026#34; }, \u0026#34;dataDeletionDetectionPolicy\u0026#34;: { \u0026#34;@odata.type\u0026#34;: \u0026#34;#Microsoft.Azure.Search.SoftDeleteColumnDeletionDetectionPolicy\u0026#34;, \u0026#34;softDeleteColumnName\u0026#34;: \u0026#34;isDeleted\u0026#34;, \u0026#34;softDeleteMarkerValue\u0026#34;: \u0026#34;true\u0026#34; } }\u0026#39; (2) „Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆ‰ΩúÊàê\n‰∏ãË®ò„ÅÆ„Çπ„Ç≠„Éº„Éû„ÅßAzure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Çí‰ΩúÊàê„Åô„Çã„ÄÇ\n{ \u0026#34;name\u0026#34;: \u0026#34;articles-test\u0026#34;, \u0026#34;fields\u0026#34;: [ { \u0026#34;name\u0026#34;:\u0026#34;itemno\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;key\u0026#34;: true, \u0026#34;searchable\u0026#34;: false }, { \u0026#34;name\u0026#34;:\u0026#34;subject\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false}, { \u0026#34;name\u0026#34;:\u0026#34;body\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;,\u0026#34;filterable\u0026#34;:false,\u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false, \u0026#34;analyzer\u0026#34;:\u0026#34;ja.lucene\u0026#34;}, { \u0026#34;name\u0026#34;:\u0026#34;url\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;date\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.DateTimeOffset\u0026#34;, \u0026#34;facetable\u0026#34;:false} ] } (3) DocumentDB„Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÅÆ‰ΩúÊàê\nDocumentDB„Ç§„É≥„Éá„ÇØ„Çµ„Éº‰ΩúÊàê„ÅÆ„Åü„ÇÅ„ÅÆË®≠ÂÆö„ÄÇDatSourceName„Å®targetIndexName„Å´„Åù„Çå„Åû„Çå1„Åß‰ΩúÊàê„Åó„Åü„Éá„Éº„Çø„ÇΩ„Éº„ÇπÂêç„Å®„Ç§„É≥„Ç∏„Çß„Çπ„ÉàÂÖà„ÅÆ„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÂêç„ÇíÊåáÂÆö„Åô„Çã„ÄÇ„Çπ„Ç±„Ç∏„É•„Éº„É´ÂÆüË°å„Åï„Åõ„Åü„ÅÑÂ†¥Âêà„ÅØ‰∏ãË®ò„ÅÆÈÄö„Çäschedule„ÇíË®≠ÂÆö„Åô„Çã„ÄÇ„Åì„Åì„Åß„ÅØinterval„ÇíPT5M„Å®„Åó„Å¶„ÅÑ„Çã„Åå„Åì„Çå„ÅØ5ÂàÜÊØéÂÆüË°å„ÇíÊÑèÂë≥„Åô„Çã„ÄÇË©≥„Åó„Åè„ÅØ„Åì„Å°„Çâ„ÇíÂèÇÁÖß„ÄÇ\n#!/bin/sh SERVICE_NAME=\u0026#39;\u0026lt;Azure Search Service Name\u0026gt;\u0026#39; API_VER=\u0026#39;2015-02-28-Preview\u0026#39; ADMIN_KEY=\u0026#39;\u0026lt;API KEY\u0026gt;\u0026#39; CONTENT_TYPE=\u0026#39;application/json\u0026#39; URL=\u0026#34;https://$SERVICE_NAME.search.windows.net/indexers?api-version=$API_VER\u0026#34; curl -s\\ -H \u0026#34;Content-Type: $CONTENT_TYPE\u0026#34;\\ -H \u0026#34;api-key: $ADMIN_KEY\u0026#34;\\ -XPOST $URL -d\u0026#39;{ \u0026#34;name\u0026#34;: \u0026#34;docdbindexer\u0026#34;, \u0026#34;dataSourceName\u0026#34;: \u0026#34;docdbds-article\u0026#34;, \u0026#34;targetIndexName\u0026#34; : \u0026#34;articles\u0026#34;, \u0026#34;schedule\u0026#34;: { \u0026#34;interval\u0026#34; : \u0026#34;PT5M\u0026#34;, \u0026#34;startTime\u0026#34; :\u0026#34;2015-06-17T00:00:00Z\u0026#34; } }\u0026#39; (4) „Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÅÆÊòéÁ§∫ÁöÑ„Å´ÂÆüË°å\n„Çπ„Ç±„Ç∏„É•„Éº„É´ÂÆüË°å„Åß„ÅØ„Å™„Åè„Ç§„É≥„Éá„ÇØ„Çµ„Éº„Çí„Åô„Åê„Å´ÂÆüË°å„Åó„Åü„ÅÑÂ†¥Âêà„ÅØ‰∏ãË®ò„ÅÆ„Éï„Ç©„Éº„Éû„ÉÉ„Éà„ÅßPOST„É™„ÇØ„Ç®„Çπ„Éà„ÇíÈÄÅ‰ø°„Åô„Çã„ÄÇ\nPOST https://[Search service name].search.windows.net/indexers/[indexer name]/run?api-version=[api-version] api-key: [Search service admin key] ÂÆüË°åÁµêÊûúÁ¢∫Ë™çÊñπÊ≥ï ‰∏äË®ò„Ç§„É°„Éº„Ç∏„ÅÆÈÄö„ÇäAzure„Éù„Éº„Çø„É´(preview)„Çà„ÇäAzure Search ‚Üí indexers„Çø„Ç§„É´„Çí„Åü„Å©„Çã„Åì„Å®„Åß„Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÅÆÂÆüË°åÁµêÊûú„ÇÑÈÅéÂéª„ÅÆÂ±•Ê≠¥„ÇíÁ¢∫Ë™ç„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ„Åü„Å†„Åó„ÄÅ„Åì„Åì„Åß„ÅØAPIÁµåÁî±„ÅßÂèñÂæó„Åô„ÇãÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åô„Çã„ÄÇ\n‰∏ãË®ò„Éï„Ç©„Éº„Éû„ÉÉ„Éà„ÅßGET„É™„ÇØ„Ç®„Çπ„Éà„Åô„Çã„Åì„Å®„Åß„Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÅÆÁèæÂú®„ÅÆÁ®ºÂÉçÁä∂ÊÖã„Å®ÂÆüË°åÂ±•Ê≠¥„ÇíÂèñÂæó„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇÂÆüË°åÂ±•Ê≠¥„ÅØÊúÄÂæå„ÅÆÂÆüË°åÁµêÊûú„Å†„Åë„Åß„ÅØ„Å™„ÅèÊúÄËøëÂÆå‰∫Ü„Åó„Åü50‰ª∂„ÅÆÂÆüË°åÂÜÖÂÆπ„ÅåÂê´„Åæ„Çå„Çã„ÄÇ\nGET https://[Search service name].search.windows.net/indexers/[indexer name]/status?api-version=[api-version] api-key: [Search service admin key] ‰ª•‰∏ãÂÆüË°åÁµêÊûú„ÄÇexecutionHistory„ÅåÂ±•Ê≠¥„ÄÅlastResult„ÅåÊúÄÂæå„ÅÆÂÆüË°åÁµêÊûú„ÄÅstatus„ÅåÁèæÂú®„ÅÆ„Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÅÆ„Çπ„ÉÜ„Éº„Çø„Çπ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ\n{ \u0026#34;@odata.context\u0026#34;: \u0026#34;https://yoichidemo.search.windows.net/$metadata#Microsoft.Azure.Search.V2015_02_28_Preview.IndexerExecutionInfo\u0026#34;, \u0026#34;executionHistory\u0026#34;: [ { \u0026#34;endTime\u0026#34;: \u0026#34;2015-06-25T05:55:01.393Z\u0026#34;, \u0026#34;errorMessage\u0026#34;: \u0026#34;Data source \u0026#39;docdbds-article\u0026#39; does not exist\u0026#34;, \u0026#34;errors\u0026#34;: [], \u0026#34;finalTrackingState\u0026#34;: null, \u0026#34;initialTrackingState\u0026#34;: null, \u0026#34;itemsFailed\u0026#34;: 0, \u0026#34;itemsProcessed\u0026#34;: 0, \u0026#34;startTime\u0026#34;: \u0026#34;2015-06-25T05:55:01.393Z\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;transientFailure\u0026#34; }, ...(omit)... { \u0026#34;endTime\u0026#34;: \u0026#34;2015-06-25T02:15:02.155Z\u0026#34;, \u0026#34;errorMessage\u0026#34;: null, \u0026#34;errors\u0026#34;: [], \u0026#34;finalTrackingState\u0026#34;: \u0026#34;1434871500\u0026#34;, \u0026#34;initialTrackingState\u0026#34;: \u0026#34;1434871500\u0026#34;, \u0026#34;itemsFailed\u0026#34;: 0, \u0026#34;itemsProcessed\u0026#34;: 0, \u0026#34;startTime\u0026#34;: \u0026#34;2015-06-25T02:15:01.452Z\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;success\u0026#34; }, { \u0026#34;endTime\u0026#34;: \u0026#34;2015-06-25T02:10:01.144Z\u0026#34;, \u0026#34;errorMessage\u0026#34;: null, \u0026#34;errors\u0026#34;: [], \u0026#34;finalTrackingState\u0026#34;: \u0026#34;1434871500\u0026#34;, \u0026#34;initialTrackingState\u0026#34;: \u0026#34;1434871500\u0026#34;, \u0026#34;itemsFailed\u0026#34;: 0, \u0026#34;itemsProcessed\u0026#34;: 0, \u0026#34;startTime\u0026#34;: \u0026#34;2015-06-25T02:10:00.022Z\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;success\u0026#34; } ], \u0026#34;lastResult\u0026#34;: { \u0026#34;endTime\u0026#34;: \u0026#34;2015-06-25T05:59:02.016Z\u0026#34;, \u0026#34;errorMessage\u0026#34;: \u0026#34;Data source \u0026#39;docdbds-article\u0026#39; does not exist\u0026#34;, \u0026#34;errors\u0026#34;: [], \u0026#34;finalTrackingState\u0026#34;: null, \u0026#34;initialTrackingState\u0026#34;: null, \u0026#34;itemsFailed\u0026#34;: 0, \u0026#34;itemsProcessed\u0026#34;: 0, \u0026#34;startTime\u0026#34;: \u0026#34;2015-06-25T05:59:02.016Z\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;transientFailure\u0026#34; }, \u0026#34;name\u0026#34;: \u0026#34;docdbindexer\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;running\u0026#34; } Content DB„ÅÆÊúâÂäπÊÄß„Å´„Å§„ÅÑ„Å¶ „Åì„Åì„Åß„ÅØAzure Search„ÅÆfeeding„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„Å®„Åó„Å¶DocumentDB„Çí‰ΩøÁî®„Åó„ÅüPULL„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÊõ¥Êñ∞ÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åó„Åü„ÄÇ„Åì„ÅÆ„Çà„ÅÜ„Å´„ÇØ„É≠„Éº„É™„É≥„Ç∞„Åï„Çå„Åü„Éá„Éº„Çø„ÇíÁõ¥Êé•Azure Search„ÅÆIndex API„Çí‰Ωø„Å£„Å¶„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÇíÊõ¥Êñ∞„Åô„Çã„ÅÆ„Åß„ÅØ„Å™„Åè„ÄÅ‰ªäÂõû„ÅÆDocumentDB„ÅÆ„Çà„ÅÜ„Å´ÊâÄË¨ÇContent DB„Å´Ê†ºÁ¥ç„Åó„Å¶„Åã„Çâ„Åù„Çå„ÇíÂÖÉ„Å´„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÇíÊõ¥Êñ∞„Åô„Çã„ÅÆ„Å´„ÅØ„ÅÑ„Åè„Å§„ÅãÊÑèÂë≥„Åå„ÅÇ„Çã„ÄÇ‰æã„Åà„Å∞„ÄÅ„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÊßãÈÄ†„ÇíÂ§âÊõ¥„Åó„Åü„ÅÑÂ†¥Âêà„ÄÅÂÜç„Éï„Ç£„Éº„Éâ„ÅåÂøÖË¶Å„Å´„Å™„Çã„ÅåContent DB„Åå„ÅÇ„Çå„Å∞ÂÜçÂ∫¶„ÇØ„É≠„Éº„É™„É≥„Ç∞„Åô„ÇãÂøÖË¶Å„Åå„Å™„ÅÑ„ÄÇÈÄöÂ∏∏„ÇØ„É≠„Éº„É™„É≥„Ç∞ÔºàÁâπ„Å´„Éï„É´„ÇØ„É≠„Éº„É™„É≥„Ç∞Ôºâ„ÅÆ„Ç≥„Çπ„Éà„ÅØÂ§ß„Åç„ÅÑ„ÄÇ„Åæ„Åü„ÄÅContent DB„Åå„ÅÇ„Çå„Å∞Âà•„Ç¢„Ç´„Ç¶„É≥„Éà„ÄÅ„É™„Éº„Ç∏„Éß„É≥„Å´„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆ„É¨„Éó„É™„Ç´„ÅÆÊßãÁØâ„ÄÅ‰ªñ„Å´„ÄÅÂêå‰∏Ä„ÅÆ„Éá„Éº„Çø„Çí‰Ωø„Å£„Å¶Âà•ÊßãÈÄ†„ÅÆ„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇíÊßãÁØâ„Åô„Çã„Å®„ÅÑ„Å£„Åü„Åì„Å®„ÇÇÂÆπÊòì„Å´ÂèØËÉΩ„Å´„Å™„Çã„ÄÇ\n„Åï„Çâ„Å´„ÄÅÁèæÊôÇÁÇπ„ÅßAzure Search„Åå„Éá„Éº„ÇøÂä†Â∑•„ÅÆ„Åü„ÇÅ„ÅÆ„Éë„Ç§„Éó„É©„Ç§„É≥„ÅÆ‰ªïÁµÑ„ÅøÔºàLucene/Solr, ElasticSearch„Åß„ÅÑ„ÅÜ„Å®„Åì„Çç„ÅÆ„Ç´„Çπ„Çø„É†AnalyzerÔºâ„Åå„Å™„ÅÑ„Åì„Å®„Åã„Çâ„ÄÅ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´Êîæ„ÇäËæº„ÇÄÂâç„ÅÆ‰∏ÄÊôÇ„Éá„Éº„ÇøÂä†Â∑•Áî®„ÅÆ„Éá„Éº„Çø„Éô„Éº„Çπ„Å®„Åó„Å¶„ÇÇÊúâÂäπ„Åß„ÅÇ„Çã„Å®ËÄÉ„Åà„Å¶„ÅÑ„Çã„ÄÇ\nLINKS „Ç§„É≥„Éá„ÇØ„Çµ„Éº„Çí‰ΩøÁî®„Åó„Åü DocumentDB „Å® Azure Search „ÅÆÊé•Á∂ö ","permalink":"https://unofficialism.info/posts/levelage-documentdb-as-azuresearch-datasource/","summary":"Azure Search„ÅÆ„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÊõ¥Êñ∞ÊñπÊ≥ï„Å´„ÅØÂ§ß„Åç„ÅèÂàÜ„Åë„Å¶PUSH„Å®PULL„ÅÆÔºíÁ®ÆÈ°û„ÅÇ„Çã„ÄÇPUSH„ÅØÁõ¥Êé•Indexing API„Çí‰Ωø„Å£„Å¶Azure Search„Å´„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíPOST„Åó„Å¶Êõ¥Êñ∞„ÄÇPULL„ÅØÁâπÂÆö„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å´ÂØæ„Åó„Å¶„Éù„Éº„É™„É≥„Ç∞„Åó„Å¶Êõ¥Êñ∞„Åß„ÄÅAzure Search„ÅÆÂ†¥Âêà„ÄÅDocumentDB„Å®SQL Database„ÅÆ2Á®ÆÈ°û„ÅÆ„Éá„Éº„Çø„ÇΩ„Éº„Çπ„ÇíÂØæË±°„Å´„ÉØ„É≥„Çø„Ç§„É†„ÇÇ„Åó„Åè„ÅØÂÆöÊúüÁöÑ„Å™„Çπ„Ç±„Ç∏„É•„Éº„É´ÂÆüË°å„ÅåÂèØËÉΩ„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ„Åì„Åì„Åß„ÅØDocumentDB„Çí„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å®„Åó„Å¶„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÇíÊõ¥Êñ∞„Åô„ÇãÊñπÊ≥ï„ÇíÁ¥π‰ªã„Åô„Çã„ÄÇ\n„Çµ„É≥„Éó„É´ÊßãÊàê„Å®Âá¶ÁêÜ„Éï„É≠„Éº„ÅÆË™¨Êòé „Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å´DocumentDB„ÇíÂà©Áî®„Åô„Çã„ÄÇ„Éá„Éº„Çø„ÄåDOCUMENTDB PYTHON SDK„Å®FEEDPARSER„Åß‰Ωú„ÇãÁ∞°Êòì„ÇØ„É≠„Éº„É©„Éº„Äç„Å´„Åä„ÅÑ„Å¶„ÇØ„É≠„Éº„É™„É≥„Ç∞„Åï„ÇåDocumentDB„Å´‰øùÂ≠ò„Åï„Çå„Åü„Éñ„É≠„Ç∞Ë®ò‰∫ã„Éá„Éº„Çø„Çí‰ΩøÁî®„Åô„Çã„ÄÇ„Åù„Åó„Å¶DocumentDB„ÇíÂÆöÊúüÁöÑ„Å´„Éù„Éº„É™„É≥„Ç∞„ÇíË°å„ÅÑÊõ¥Êñ∞„Åå„ÅÇ„Å£„Åü„É¨„Ç≥„Éº„Éâ„ÅÆ„Åø„ÇíAzure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´ÂèçÊò†„Åô„Çã„Åü„ÇÅ„Å´DocumentDB„Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÇíË®≠ÂÆö„Åô„Çã„ÄÇÂÖ®‰ΩìÊßãÊàê„Å®„Åó„Å¶„ÅØ‰∏ãË®ò„ÅÆÈÄö„Çä„Å®„Å™„Çã„ÄÇ\nDocumentDB„Å®Êõ¥Êñ∞ÂÖàÊ§úÁ¥¢„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆ„Éï„Ç£„Éº„É´„Éâ„ÅÆ„Éû„ÉÉ„Éî„É≥„Ç∞ DocumentDB„Çí„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å®„Åó„Å¶Azure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´Êõ¥Êñ∞„ÇíË°å„ÅÜ„Åü„ÇÅDocumentDB„ÅÆÂèÇÁÖßÂÖà„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÅÆ„Éï„Ç£„Éº„É´„Éâ„Å®Êõ¥Êñ∞ÂÖàAzure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆ„Éï„Ç£„Éº„É´„Éâ„Çí„Éû„ÉÉ„Éî„É≥„Ç∞„ÇíË°å„ÅÜ„ÄÇ„Éû„ÉÉ„Éî„É≥„Ç∞„ÅØ„Éá„Éº„Çø„ÇΩ„Éº„ÇπÂÆöÁæ©‰∏≠„ÅÆDocumentDBÂèÇÁÖßÁî®Query„ÅßË°å„ÅÜ„ÄÇAzure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´„Ç§„É≥„Ç∏„Çß„Çπ„Éà„Åô„Çã„Éï„Ç£„Éº„É´„Éâ„ÇíDocumentDB„ÅÆSELECT„ÇØ„Ç®„É™„ÉºÊåáÂÆö„Åô„Çã„ÅÆ„Å†„Åå„ÄÅAzure Search„Å®DocumentDB„ÅÆ„Éï„Ç£„Éº„É´„Éâ„ÅåÁï∞„Å™„ÇãÂ†¥Âêà„ÅØ‰∏ãÂõ≥„ÅÆ„Çà„ÅÜ„Å´SELECT \u0026ldquo;Docdb„Éï„Ç£„Éº„É´„ÉâÂêç\u0026rdquo; AS \u0026ldquo;Search„Éï„Ç£„Éº„É´„ÉâÂêç\u0026quot;„Åß„Ç§„É≥„Ç∏„Çß„Çπ„ÉàÂÖà„Éï„Ç£„Éº„É´„ÉâÂêç„ÇíÊåáÂÆö„Åô„Çã„ÄÇ„Éá„Éº„Çø„ÇΩ„Éº„ÇπÂÆöÁæ©„Å´„Å§„ÅÑ„Å¶„ÅØÂæåËø∞„ÅÆË®≠ÂÆöÂÜÖÂÆπ„ÇíÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ\nConfiguration ‰ª•‰∏ãÔºëÔΩûÔºî„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó„Åß„Éá„Éº„Çø„ÇΩ„Éº„Çπ„ÅÆ‰ΩúÊàê„ÄÅÊ§úÁ¥¢„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÅÆ‰ΩúÊàê„ÄÅ„Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÅÆ‰ΩúÊàê„ÄÅ„Ç§„É≥„Éá„ÇØ„Çµ„Éº„ÅÆÂÆüË°å„ÇíË°å„ÅÜ„ÄÇ\n(1) „Éá„Éº„Çø„ÇΩ„Éº„Çπ„ÅÆ‰ΩúÊàê\ncredential.connectionString„ÅßÊé•Á∂öÂÖàDocumentDBÊñáÂ≠óÂàó„Å®ÂØæË±°„Éá„Éº„Çø„Éô„Éº„Çπ„ÅÆÊåáÂÆö„ÇíË°å„ÅÜ„ÄÇcontainer.(name|query)„ÅßÂØæË±°„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥Âêç„Å®ÂèÇÁÖßÁî®SELECTÊñá„ÇíÊåáÂÆö„Åô„Çã„ÄÇSELECTÊñá„ÅØDocumentDB„Å®„Ç§„É≥„Ç∏„Çß„Çπ„ÉàÂÖàAzure Search„ÅÆ„Éï„Ç£„Éº„É´„Éâ„Çª„ÉÉ„ÉàÔºà„Éï„Ç£„Éº„É´„ÉâÂêç„Å®Êï∞Ôºâ„ÅåÂêå„Åò„Åß„ÅÇ„Çå„Å∞ÁúÅÁï•ÂèØ„ÄÇË©≥Á¥∞„ÅØ„Åì„Å°„Çâ„ÇíÂèÇÁÖß„ÄÇ\n#!/bin/sh SERVICE_NAME=\u0026#39;\u0026lt;Azure Search Service Name\u0026gt;\u0026#39; API_VER=\u0026#39;2015-02-28-Preview\u0026#39; ADMIN_KEY=\u0026#39;\u0026lt;API KEY\u0026gt;\u0026#39; CONTENT_TYPE=\u0026#39;application/json\u0026#39; URL=\u0026#34;https://$SERVICE_NAME.search.windows.net/datasources?api-version=$API_VER\u0026#34; curl -s\\ -H \u0026#34;Content-Type: $CONTENT_TYPE\u0026#34;\\ -H \u0026#34;api-key: $ADMIN_KEY\u0026#34;\\ -XPOST $URL -d\u0026#39;{ \u0026#34;name\u0026#34;: \u0026#34;docdbds-article\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;documentdb\u0026#34;, \u0026#34;credentials\u0026#34;: { \u0026#34;connectionString\u0026#34;: \u0026#34;AccountEndpoint=https://\u0026lt;DOCUMENTDB_ACCOUNT\u0026gt;.documents.azure.com;AccountKey=\u0026lt;DOCUMENTDB_MASTER_KEY_STRING\u0026gt;;Database=\u0026lt;DOCUMENTDB_DBNAME\u0026gt;\u0026#34; }, \u0026#34;container\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;article_collection\u0026#34;, \u0026#34;query\u0026#34;: \u0026#34;SELECT s.id AS itemno, s.title AS subject, s.content AS body, s.","title":"DocumentDB„ÇíAzure Search„ÅÆ„Éá„Éº„Çø„ÇΩ„Éº„Çπ„Å®„Åó„Å¶Âà©Áî®„Åô„Çã"},{"content":"DocumentDB Python SDK„Å®feedparser„Çí‰Ωø„Å£„Å¶Á∞°Êòì„ÇØ„É≠„Éº„É©„Éº„Çí‰Ωú„Çä„Åæ„Åó„Çá„ÅÜ„Å®„ÅÑ„ÅÜ„ÅäË©±„ÄÇ„Åì„Åì„Åß„ÅØDocumentDB„Çí„ÇØ„É≠„Éº„É™„É≥„Ç∞ÁµêÊûú„ÅÆÊ†ºÁ¥çÂÖà„Éá„Éº„Çø„Çπ„Éà„Ç¢„Å®„Åó„Å¶‰ΩøÁî®„Åô„Çã„ÄÇ„ÇØ„É≠„Éº„É´ÂØæË±°„ÅØAzureÊó•Êú¨Ë™û„Éñ„É≠„Ç∞„ÅÆRSS„Éï„Ç£„Éº„Éâ„ÄÅ„Åì„Çå„Çífeedparser„Çí‰Ωø„Å£„Å¶„Éâ„Ç≠„É•„É°„É≥„ÉàËß£Êûê„ÄÅÂøÖË¶Å„Éá„Éº„Çø„ÅÆÊäΩÂá∫„ÄÅ„Åù„Åó„Å¶„Åù„ÅÆÁµêÊûú„Çí‰ªäÂõû‰ΩøÁî®„Åô„Çãpydocumentdb„Å®„ÅÑ„ÅÜDocumentDB Python SDK„Çí‰Ωø„Å£„Å¶DocumentDB„Å´Ê†ºÁ¥ç„Åô„Çã„Å®„ÅÑ„ÅÜ„ÉØ„Éº„ÇØ„Éï„É≠„Éº„Å´„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ\nDocumentDB Python SDK - pydocumentdb Azure„ÅßÊèê‰æõ„Åï„Çå„Å¶„ÅÑ„Çã„Å©„ÅÆ„Çµ„Éº„Éì„Çπ„Å´„ÇÇ„ÅÇ„Å¶„ÅØ„Åæ„Çã„Åì„Å®„Åß„ÅÇ„Çã„Åå„ÄÅDocumentDB„ÇíÊìç‰Ωú„Åô„Çã„Åü„ÇÅ„ÅÆÂÖ®„Å¶„ÅÆ„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„ÅØREST API„Å®„Åó„Å¶Êèê‰æõ„Åï„Çå„Å¶„Åä„ÇäREST API„ÇíÂÜÖÈÉ®ÁöÑ„Å´‰ΩøÁî®„Åó„Å¶„Éû„Ç§„ÇØ„É≠„ÇΩ„Éï„ÉàË¨πË£Ω„ÇÇ„Åó„Åè„ÅØÂÄã‰∫∫„ÅÆ„Ç≥„É≥„Éà„É™„Éì„É•„Éº„Ç∑„Éß„É≥„Å´„Çà„ÇãË§áÊï∞„ÅÆË®ÄË™û„ÅÆSDK„ÅåÁî®ÊÑè„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇ„Åù„ÅÆ‰∏≠„Åß„ÇÇpydocumentdb„ÅØPythonÁî®„ÅÆDocumentDB SDK„Åß„ÅÇ„Çä„ÄÅ„Ç™„Éº„Éó„É≥„ÇΩ„Éº„Çπ„Å®„Åó„Å¶„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„ÅØÂÖ®„Å¶Github„ÅßÂÖ¨Èñã„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇ\npydocumentdb„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éà„ÉÉ„Éó(Github) pydocumentdb„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ(Github) Azure DocumentDB REST API Reference Pre-Requirements„Åù„ÅÆÔºë: PythonÂÆüË°åÁí∞Â¢É„Å®„É©„Ç§„Éñ„É©„É™ ÂÆüË°åÁí∞Â¢É„Å®„Åó„Å¶Python2.7Á≥ª„ÅåÂøÖË¶Å„Å®„Å™„Çã„ÄÇ„Åæ„Åü„ÄÅ‰ªäÂõû„ÇØ„É≠„Éº„É©„Éº„Åå‰ΩøÁî®„Åó„Å¶„ÅÑ„ÇãDocumentDB Python SDK„Åß„ÅÇ„Çãpydocumentdb„Å®RSS„Éï„Ç£„Éº„ÉâËß£Êûê„É©„Ç§„Éñ„É©„É™feedparser„ÅÆÔºí„Å§„ÅÆ„É©„Ç§„Éñ„É©„É™„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´„ÅåÂøÖË¶Å„Å®„Å™„Çã„ÄÇ\npydocumentdb„Ç§„É≥„Çπ„Éà„Éº„É´\n$ sudo pip install pydocumentdb feedparser„Ç§„É≥„Çπ„Éà„Éº„É´\n$ sudo pip install feedparser „Å°„Å™„Åø„Å´pip„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØ‰∏ãË®ò„ÅÆÈÄö„Çä„Éû„Éã„É•„Ç¢„É´„ÇÇ„Åó„Åè„ÅØ„Ç§„É≥„Çπ„Éà„Éº„É©„Éº„Çí‰ΩøÁî®„Åó„Å¶pip„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„ÅåÂøÖË¶Å„Å®„Å™„Çã\npip „Éû„Éã„É•„Ç¢„É´„Ç§„É≥„Çπ„Éà„Éº„É´\n# download get-pip.py $ wget https://bootstrap.pypa.io/get-pip.py # run the following (which may require administrator access) $ sudo python get-pip.py # upgrade pip $ sudo pip install -U pip „Ç§„É≥„Çπ„Éà„Éº„É©„Éº„Çí‰ΩøÁî®\n# apt-get„ÅÆÂ†¥Âêà $ sudo apt-get install python-pip # yum„ÅÆÂ†¥Âêà $ sudo yum install python-pip Pre-requirements„Åù„ÅÆÔºí: DocumentDB„Ç¢„Ç´„Ç¶„É≥„Éà AzureÊñ∞„Éù„Éº„Çø„É´„Çà„Çä‰∏ãË®ò„Ç§„É°„Éº„Ç∏„ÅÆ„Éï„É≠„Éº„ÅßDocumentDB„Ç¢„Ç´„Ç¶„É≥„Éà„Çí‰ΩúÊàê„Åô„Çã„ÄÇ\nDocumentDB„Ç¢„Ç´„Ç¶„É≥„Éà„Çí‰ΩúÊàê„Åó„Åü„Çâ‰ªäÂ∫¶„ÅØ„Éá„Éº„Çø„ÇíÊ†ºÁ¥ç„Åô„Çã„Åü„ÇÅ„ÅÆDocumentDB„Éá„Éº„Çø„Éô„Éº„Çπ„Å®„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„Çí‰ΩúÊàê„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇDocumentDB„Éá„Éº„Çø„Éô„Éº„Çπ„Å®„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÅØAzureÊñ∞„Éù„Éº„Çø„É´„Åã„Çâ‰ΩúÊàêÂèØËÉΩ„Åß„ÅÇ„Çã„Åå„ÄÅ‰ªäÂõû„ÅÆ„ÇØ„É≠„Éº„É©„Éº„Éó„É≠„Ç∞„É©„É†„Åß„ÅØpydocumentdb„Çí‰Ωø„Å£„Å¶‰ΩúÊàê„Åô„Çã„Çà„ÅÜ„Å´„Åó„Å¶„ÅÑ„Çã„ÄÇ\nRSS„ÇØ„É≠„Éº„É©„Éº„Å®„Åù„ÅÆÂÆüË°åÁµêÊûú RSS„ÇØ„É≠„Éº„É©„Éº„ÅÆ„ÇΩ„Éº„Çπ„Ç≥„Éº„ÉâÔºàrssCrawler4Docdb.pyÔºâ„Å®„Åù„ÅÆÂÆüË°åÁµêÊûú„ÅØ‰∏ãË®ò„ÅÆÈÄö„Çä„ÄÇ„ÇÇ„Åó„ÇØ„É≠„Éº„É™„É≥„Ç∞„ÇíÂÆöÊúüÁöÑ„Å´ÂÆüË°å„Åô„ÇãÂ†¥Âêà„ÅØ„Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„Çí„Ç∏„Éß„Éñ„Çπ„Ç±„Ç∏„É•„Éº„É©„ÉºÔºàcron„Å™„Å©Ôºâ„Å´ÁôªÈå≤„Åè„Å†„Åï„ÅÑ„ÄÇÊåáÂÆö„ÅÆRSS„Éï„Ç£„Éº„Éâ„Å´Êñ∞„Åó„ÅèËøΩÂä†„Åï„Çå„ÅüË®ò‰∫ã„ÅÆ„Åø„ÅåDocumentDB„Å´ÂèçÊò†„Åï„Çå„Çã„Çà„ÅÜ„Çπ„ÇØ„É™„Éó„Éà‰∏ä„ÅØÈáçË§á„ÉÅ„Çß„ÉÉ„ÇØ„ÇíÂÖ•„Çå„Å¶„ÅÑ„Çã„ÄÇ\n#!/usr/bin/env python # -*- coding: utf-8 -*- import feedparser import pydocumentdb.documents as documents import pydocumentdb.document_client as document_client import pydocumentdb.errors as errors import pydocumentdb.http_constants as http_constants Docdb_masterKey = \u0026#39;\u0026lt;Your Documentdb master key string\u0026gt;\u0026#39; Docdb_host = \u0026#39;https://\u0026lt;documentdb account\u0026gt;.documents.azure.com:443/\u0026#39; Docdb_dbname = \u0026#39;\u0026lt;documentdb database name\u0026gt;\u0026#39; Docdb_colname = \u0026#39;\u0026lt;documentdb collection name\u0026gt;\u0026#39; feedurl=\u0026#39;http://blogs.msdn.com/b/windowsazurej/atom.aspx\u0026#39; def rsscrawling(): # create documentDb client instance client = document_client.DocumentClient(Docdb_host, {\u0026#39;masterKey\u0026#39;: Docdb_masterKey}) # create a database if not yet created database_definition = {\u0026#39;id\u0026#39;: Docdb_dbname } databases = list(client.QueryDatabases({ \u0026#39;query\u0026#39;: \u0026#39;SELECT * FROM root r WHERE r.id=@id\u0026#39;, \u0026#39;parameters\u0026#39;: [ { \u0026#39;name\u0026#39;:\u0026#39;@id\u0026#39;, \u0026#39;value\u0026#39;: database_definition[\u0026#39;id\u0026#39;] } ] })) if ( len(databases) \u0026gt; 0 ): feeddb = databases[0] else: print \u0026#34;database is created:%s\u0026#34; % Docdb_dbname feeddb = client.CreateDatabase(database_definition) # create a collection if not yet created collection_definition = { \u0026#39;id\u0026#39;: Docdb_colname } collections = list(client.QueryCollections( feeddb[\u0026#39;_self\u0026#39;], { \u0026#39;query\u0026#39;: \u0026#39;SELECT * FROM root r WHERE r.id=@id\u0026#39;, \u0026#39;parameters\u0026#39;: [ { \u0026#39;name\u0026#39;:\u0026#39;@id\u0026#39;, \u0026#39;value\u0026#39;: collection_definition[\u0026#39;id\u0026#39;] } ] })) if ( len(collections) \u0026gt; 0 ): collection = collections[0] else: print \u0026#34;collection is created:%s\u0026#34; % Docdb_colname collection = client.CreateCollection( feeddb[\u0026#39;_self\u0026#39;], collection_definition) # request \u0026amp; parse rss feed via feedparser feed=feedparser.parse(feedurl) for entry in feed[ \u0026#39;entries\u0026#39; ]: document_definition = { \u0026#39;title\u0026#39;:entry[ \u0026#39;title\u0026#39;], \u0026#39;content\u0026#39;:entry[\u0026#39;description\u0026#39;], \u0026#39;permalink\u0026#39;:entry[ \u0026#39;link\u0026#39; ], \u0026#39;postdate\u0026#39;:entry[\u0026#39;date\u0026#39;] } # check if duplicated documents = list(client.QueryDocuments( collection[\u0026#39;_self\u0026#39;], { \u0026#39;query\u0026#39;: \u0026#39;SELECT * FROM root r WHERE r.permalink=@permalink\u0026#39;, \u0026#39;parameters\u0026#39;: [ { \u0026#39;name\u0026#39;:\u0026#39;@permalink\u0026#39;, \u0026#39;value\u0026#39;:document_definition[\u0026#39;permalink\u0026#39;] } ] })) if (len(documents) \u0026lt; 1): # only create if it\u0026#39;s fully new document print \u0026#34;document is added:title:%s\u0026#34; % entry[\u0026#39;title\u0026#39;] created_document = client.CreateDocument( collection[\u0026#39;_self\u0026#39;], document_definition) if __name__ == \u0026#39;__main__\u0026#39;: rsscrawling() [ÂÆüË°åÁµêÊûú]\ndatabase is created:feeddb collection is created:article_collection document is added:title:Ê•≠Áïå„Éà„ÉÉ„Éó„ÅÆ„ÇØ„É©„Ç¶„Éâ „Ç¢„Éä„É™„Çπ„Éà„Åå„Éû„Ç§„ÇØ„É≠„ÇΩ„Éï„Éà„Å´Ëª¢Ë∫´„Åó„ÅüÁêÜÁî± document is added:title:Azure Linux VM „ÅÆ„Ç§„É≥„Éï„É©„Çπ„Éà„É©„ÇØ„ÉÅ„É£„ÅÆÁõ£Ë¶ñ„Å®Ë®∫Êñ≠ document is added:title:Azure App Service „ÅÆ Web „Ç¢„Éó„É™Áî® Support Site Extension „ÅÆËøΩÂä†Êõ¥Êñ∞ document is added:title:Azure CDN „Åß„Ç´„Çπ„Çø„É†„ÅÆ„Ç™„É™„Ç∏„É≥ „Çµ„Éº„Éê„Éº„Çí„Çµ„Éù„Éº„Éà document is added:title:Tinfoil Security „ÅÆ Azure App Service Âêë„Åë Web ËÑÜÂº±ÊÄß„Çπ„Ç≠„É£„É≥Ê©üËÉΩ document is added:title:Azure Site Extensions „ÅÆËá™ÂãïÊõ¥Êñ∞„ÅåÂèØËÉΩ„Å´ document is added:title:DocumentDB „Å∏„ÅÆ„Éá„Éº„Çø„ÅÆ„Ç§„É≥„Éù„Éº„Éà„Åå„Çà„ÇäÈ´òÈÄü„ÄÅÁ∞°Âçò„Å´ document is added:title:Query Store: „Éá„Éº„Çø„Éô„Éº„ÇπÁâà„Éï„É©„Ç§„Éà „Éá„Éº„Çø „É¨„Ç≥„Éº„ÉÄ„ÉºÊ©üËÉΩ document is added:title:Azure App Service „ÅÆ Web „Ç¢„Éó„É™„Åß‰ΩøÁî®„Åï„Çå„Çã TLS „ÅÆ‰∏≠ÈñìË®ºÊòéÊõ∏ document is added:title:Azure „Åß Cloud Foundry „Çí„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ document is added:title:Azure Media Indexer „ÅÆÊõ¥Êñ∞Áâà v1.2.1 „Çí„É™„É™„Éº„Çπ: ÂâçÂõû„Åã„Çâ„ÅÆ‰øÆÊ≠£ÁÇπ„Å´„Å§„ÅÑ„Å¶ document is added:title:„ÇØ„É©„Ç¶„ÉâÁí∞Â¢É„Åß„Ç®„É≥„Éâ„ÉÑ„Éº„Ç®„É≥„Éâ„ÅÆ„Éì„Éá„Ç™ „ÉØ„Éº„ÇØ„Éï„É≠„Éº„ÇíÊßãÁØâ„Åô„Çã document is added:title:Azure Media Player „ÅÆÊõ¥Êñ∞„Å® UserVoice „Éï„Ç©„Éº„É©„É†„ÅÆ„ÅäÁü•„Çâ„Åõ document is added:title:Microsoft Azure Èñ¢ÈÄ£„Éã„É•„Éº„Çπ 2015 Âπ¥ 5 Êúà„ÅÆ„Åæ„Å®„ÇÅ document is added:title:Azure Media Services Âêë„Åë Hyperlapse „ÅÆ„Éë„Éñ„É™„ÉÉ„ÇØ „Éó„É¨„Éì„É•„Éº„ÇíÁô∫Ë°® document is added:title:6 Êúà 1 Êó•‰ª•Èôç„ÅÆ Application Insights „ÅÆÊñôÈáëË®≠ÂÆö document is added:title:StorSimple Update 1 „ÇíÁô∫Ë°®: Azure Government „ÅßÊèê‰æõÈñãÂßã„ÄÅ‰ªñÁ§æ„ÇØ„É©„Ç¶„Éâ„Å® ZRS „Çí„Çµ„Éù„Éº„Éà„ÄÅ5000/7000 „Ç∑„É™„Éº„Ç∫„Åã„Çâ„ÅÆÁßªË°å„Å´ÂØæÂøú document is added:title:ÊàêÂäü„Åã„ÇâËª¢ËêΩ„ÅÆÂç±Ê©ü„Å´Áõ¥Èù¢„Åó„Åü Sleeve Music„ÄÇÁµåÈ®ìË±ä„Åã„Å™ÈñãÁô∫ËÄÖ„Å®ÈÅ©Âàá„Å™„ÉÑ„Éº„É´„ÅÆÈÅ∏Êäû„ÅßÊñ∞„Åü„Å™„Ç¢„Ç§„Éá„Ç¢„ÇíÂâµÂá∫ document is added:title:Azure Storage „Å´Èñ¢„Åô„Çã Build 2015 „Åß„ÅÆÁô∫Ë°® document is added:title:Visual Studio Code „Å® Azure App Service „ÅÆÈÄ£Êê∫„ÅßÂÆüÁèæ„Åß„Åç„Çã„Åì„Å® document is added:title:Azure Automation „Åß„Ç∞„É©„Éï„Ç£„ÉÉ„ÇØÂΩ¢Âºè„Å®„ÉÜ„Ç≠„Çπ„ÉàÂΩ¢Âºè„ÅÆ‰ΩúÊàêÊ©üËÉΩ„ÇíÂ∞éÂÖ• document is added:title:Êé•Á∂öÊÄß„ÅÆÈ´ò„ÅÑÂÆâÂÆö„Åó„Åü„Éè„Ç§„Éñ„É™„ÉÉ„Éâ „ÇØ„É©„Ç¶„Éâ„ÅÆÂÆüÁèæ„Å´Âêë„Åë„ÅüÊñ∞„Åó„ÅÑ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØÊ©üËÉΩ document is added:title:DocumentDB „ÅÆÊñ∞„Åó„ÅÑ„Ç§„É≥„Éù„Éº„Éà „Ç™„Éó„Ç∑„Éß„É≥ document is added:title:Azure Site Recovery „Åå NetApp Private Storage for Microsoft Azure „Çí„Çµ„Éù„Éº„Éà document is added:title:Application Insights „Åß ASP.NET 5 „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Çí„Çµ„Éù„Éº„Éà ","permalink":"https://unofficialism.info/posts/crawler-with-documentdb-python-sdk-and-feedparser/","summary":"DocumentDB Python SDK„Å®feedparser„Çí‰Ωø„Å£„Å¶Á∞°Êòì„ÇØ„É≠„Éº„É©„Éº„Çí‰Ωú„Çä„Åæ„Åó„Çá„ÅÜ„Å®„ÅÑ„ÅÜ„ÅäË©±„ÄÇ„Åì„Åì„Åß„ÅØDocumentDB„Çí„ÇØ„É≠„Éº„É™„É≥„Ç∞ÁµêÊûú„ÅÆÊ†ºÁ¥çÂÖà„Éá„Éº„Çø„Çπ„Éà„Ç¢„Å®„Åó„Å¶‰ΩøÁî®„Åô„Çã„ÄÇ„ÇØ„É≠„Éº„É´ÂØæË±°„ÅØAzureÊó•Êú¨Ë™û„Éñ„É≠„Ç∞„ÅÆRSS„Éï„Ç£„Éº„Éâ„ÄÅ„Åì„Çå„Çífeedparser„Çí‰Ωø„Å£„Å¶„Éâ„Ç≠„É•„É°„É≥„ÉàËß£Êûê„ÄÅÂøÖË¶Å„Éá„Éº„Çø„ÅÆÊäΩÂá∫„ÄÅ„Åù„Åó„Å¶„Åù„ÅÆÁµêÊûú„Çí‰ªäÂõû‰ΩøÁî®„Åô„Çãpydocumentdb„Å®„ÅÑ„ÅÜDocumentDB Python SDK„Çí‰Ωø„Å£„Å¶DocumentDB„Å´Ê†ºÁ¥ç„Åô„Çã„Å®„ÅÑ„ÅÜ„ÉØ„Éº„ÇØ„Éï„É≠„Éº„Å´„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ\nDocumentDB Python SDK - pydocumentdb Azure„ÅßÊèê‰æõ„Åï„Çå„Å¶„ÅÑ„Çã„Å©„ÅÆ„Çµ„Éº„Éì„Çπ„Å´„ÇÇ„ÅÇ„Å¶„ÅØ„Åæ„Çã„Åì„Å®„Åß„ÅÇ„Çã„Åå„ÄÅDocumentDB„ÇíÊìç‰Ωú„Åô„Çã„Åü„ÇÅ„ÅÆÂÖ®„Å¶„ÅÆ„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„ÅØREST API„Å®„Åó„Å¶Êèê‰æõ„Åï„Çå„Å¶„Åä„ÇäREST API„ÇíÂÜÖÈÉ®ÁöÑ„Å´‰ΩøÁî®„Åó„Å¶„Éû„Ç§„ÇØ„É≠„ÇΩ„Éï„ÉàË¨πË£Ω„ÇÇ„Åó„Åè„ÅØÂÄã‰∫∫„ÅÆ„Ç≥„É≥„Éà„É™„Éì„É•„Éº„Ç∑„Éß„É≥„Å´„Çà„ÇãË§áÊï∞„ÅÆË®ÄË™û„ÅÆSDK„ÅåÁî®ÊÑè„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇ„Åù„ÅÆ‰∏≠„Åß„ÇÇpydocumentdb„ÅØPythonÁî®„ÅÆDocumentDB SDK„Åß„ÅÇ„Çä„ÄÅ„Ç™„Éº„Éó„É≥„ÇΩ„Éº„Çπ„Å®„Åó„Å¶„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„ÅØÂÖ®„Å¶Github„ÅßÂÖ¨Èñã„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇ\npydocumentdb„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éà„ÉÉ„Éó(Github) pydocumentdb„Çµ„É≥„Éó„É´„Ç≥„Éº„Éâ(Github) Azure DocumentDB REST API Reference Pre-Requirements„Åù„ÅÆÔºë: PythonÂÆüË°åÁí∞Â¢É„Å®„É©„Ç§„Éñ„É©„É™ ÂÆüË°åÁí∞Â¢É„Å®„Åó„Å¶Python2.7Á≥ª„ÅåÂøÖË¶Å„Å®„Å™„Çã„ÄÇ„Åæ„Åü„ÄÅ‰ªäÂõû„ÇØ„É≠„Éº„É©„Éº„Åå‰ΩøÁî®„Åó„Å¶„ÅÑ„ÇãDocumentDB Python SDK„Åß„ÅÇ„Çãpydocumentdb„Å®RSS„Éï„Ç£„Éº„ÉâËß£Êûê„É©„Ç§„Éñ„É©„É™feedparser„ÅÆÔºí„Å§„ÅÆ„É©„Ç§„Éñ„É©„É™„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´„ÅåÂøÖË¶Å„Å®„Å™„Çã„ÄÇ\npydocumentdb„Ç§„É≥„Çπ„Éà„Éº„É´\n$ sudo pip install pydocumentdb feedparser„Ç§„É≥„Çπ„Éà„Éº„É´\n$ sudo pip install feedparser „Å°„Å™„Åø„Å´pip„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÅØ‰∏ãË®ò„ÅÆÈÄö„Çä„Éû„Éã„É•„Ç¢„É´„ÇÇ„Åó„Åè„ÅØ„Ç§„É≥„Çπ„Éà„Éº„É©„Éº„Çí‰ΩøÁî®„Åó„Å¶pip„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„ÅåÂøÖË¶Å„Å®„Å™„Çã\npip „Éû„Éã„É•„Ç¢„É´„Ç§„É≥„Çπ„Éà„Éº„É´\n# download get-pip.py $ wget https://bootstrap.pypa.io/get-pip.py # run the following (which may require administrator access) $ sudo python get-pip.py # upgrade pip $ sudo pip install -U pip „Ç§„É≥„Çπ„Éà„Éº„É©„Éº„Çí‰ΩøÁî®","title":"DocumentDB Python SDK„Å®feedparser„Åß‰Ωú„ÇãÁ∞°Êòì„ÇØ„É≠„Éº„É©„Éº"},{"content":"Wikipedia„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅØ Creative Commons License„Åä„Çà„Å≥ GNU Free Documentation License„ÅÆ‰∏ã„Å´„É©„Ç§„Çª„É≥„Çπ„Åï„Çå„Å¶„Åä„ÇäWikipediaË≤°Âõ£„ÅØÂÜçÈÖçÂ∏É„ÇÑÂÜçÂà©Áî®„ÅÆ„Åü„ÇÅ„Å´ÊÉú„Åó„Åí„ÇÇ„Å™„Åè„Åì„ÅÆË≤¥Èáç„Å™„Éá„Éº„Çø„Éô„Éº„Çπ„ÅÆ„ÉÄ„É≥„Éó„Éï„Ç°„Ç§„É´ÔºàXML„Éï„Ç°„Ç§„É´Ôºâ„Çí‰∏ÄËà¨Êèê‰æõ„Åó„Å¶„ÅÑ„Çã„ÄÇÂÖ®ÊñáÊ§úÁ¥¢„ÅÆÊ§úË®º„ÅßÂ§ßÈáè„ÅÆ„Éá„Éº„Çø„ÅåÂøÖË¶Å„Å™„Å®„Åç„Åì„ÅÆWikipedia„ÅÆ„Çà„ÅÜ„Å™Áîü„Åç„Åü„Éá„Éº„Çø„Çí‰Ωø„Åà„Çã„ÅÆ„ÅØÈùûÂ∏∏„Å´Êúâ„Çä„Åå„Åü„ÅÑ„ÄÇ„Åì„Çå„ÅØ„Åì„ÅÆWikipedia„Éá„Éº„Çø„Éô„Éº„Çπ„ÉÄ„É≥„ÉóÔºàÊó•Êú¨Ë™ûÔºâ„ÇíÂÖÉ„Å´Azure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÇíÁîüÊàê„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„Å®„ÅÑ„ÅÜ„ÅäË©±„ÄÇ\nWikipedia:„Éá„Éº„Çø„Éô„Éº„Çπ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ „Ç¶„Ç£„Ç≠„É°„Éá„Ç£„Ç¢Ë≤°Âõ£„Å´„Çà„ÇãÂÖ®„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Éá„Éº„Çø„Éô„Éº„Çπ„Éª„ÉÄ„É≥„Éó WikipediaÊó•Êú¨Ë™ûÁâà„ÅÆ„ÉÄ„É≥„Éó„Éá„Éº„Çø„É¨„Éù„Ç∏„Éà„É™(Êó•Êú¨Ë™ûÊúÄÊñ∞Áâà) Âà©Áî®„Åô„ÇãWikipedia XML„Éï„Ç°„Ç§„É´„Å®„Åù„ÅÆÂÆöÁæ© ÊúÄÊñ∞ÁâàÊó•Êú¨Ë™û„É¨„Éù„Ç∏„Éà„É™„Å´„ÅØË§áÊï∞„ÅÆXML„Éï„Ç°„Ç§„É´„ÅåÁî®ÊÑè„Åï„Çå„Å¶„ÅÑ„Çã„Åå„Åì„Åì„Åß„ÅØÂÖ®„Éö„Éº„Ç∏„ÅÆ„Çø„Ç§„Éà„É´„ÄÅ„Éá„Ç£„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥„Å®„ÅÑ„Å£„ÅüË¶ÅÁ¥Ñ„Éá„Éº„Çø„ÇíÈõÜÁ¥Ñ„Åó„Å¶„ÅÑ„Çã„Éï„Ç°„Ç§„É´jawiki-latest-abstract.xml„ÇíÂà©Áî®„Åô„Çã„ÄÇXML„ÅÆ„Éï„Ç©„Éº„Éû„ÉÉ„Éà„ÅØÊ¨°„ÅÆ„Å®„Åä„Çä„ÄÇ„Åì„ÅÆ‰∏≠„Åã„Çâtitle, url, abstract„ÇíÊäΩÂá∫„Åó„Å¶Azure Search„Å´ÊäïÂÖ•„Åô„Çã„ÄÇ\n\u0026lt;doc\u0026gt; \u0026lt;title\u0026gt;Wikipedia: Ëá™ÁÑ∂Ë®ÄË™û\u0026lt;/title\u0026gt; \u0026lt;url\u0026gt;http://ja.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E8%A8%80%E8%AA%9E\u0026lt;/url\u0026gt; \u0026lt;abstract\u0026gt;Ëá™ÁÑ∂Ë®ÄË™ûÔºà„Åó„Åú„Çì„Åí„Çì„Åî„ÄÅÔºâ„Å®„ÅØ„ÄÅ‰∫∫Èñì„Å´„Çà„Å£„Å¶Êó•Â∏∏„ÅÆÊÑèÊÄùÁñéÈÄö„ÅÆ„Åü„ÇÅ„Å´Áî®„ÅÑ„Çâ„Çå„Çã„ÄÅÊñáÂåñÁöÑËÉåÊôØ„ÇíÊåÅ„Å£„Å¶Ëá™ÁÑ∂„Å´Áô∫Â±ï„Åó„Å¶„Åç„ÅüË®òÂè∑‰ΩìÁ≥ª„Åß„ÅÇ„Çã„ÄÇÂ§ßÂà•„Åô„Çã„Å®Èü≥Â£∞„Å´\u0026gt;„Çà„ÇãË©±„ÅóË®ÄËëâ„Å®ÊñáÂ≠ó„ÇÑË®òÂè∑„Å®„Åó„Å¶Êõ∏„Åã„Çå„ÇãÊõ∏„ÅçË®ÄËëâ„Åå„ÅÇ„Çã„ÄÇ\u0026lt;/abstract\u0026gt; \u0026lt;links\u0026gt; \u0026lt;sublink linktype=\u0026#34;nav\u0026#34;\u0026gt;\u0026lt;anchor\u0026gt;Ê¶ÇË¶Å\u0026lt;/anchor\u0026gt;\u0026lt;link\u0026gt;http://ja.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E8%A8%80%E8%AA%9E#.E6.A6.82.E8.A6.81\u0026lt;/link\u0026gt;\u0026lt;/sublink\u0026gt; \u0026lt;sublink linktype=\u0026#34;nav\u0026#34;\u0026gt;\u0026lt;anchor\u0026gt;Èñ¢ÈÄ£È†ÖÁõÆ\u0026lt;/anchor\u0026gt;\u0026lt;link\u0026gt;http://ja.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E8%A8%80%E8%AA%9E#.E9.96.A2.E9.80.A3.E9.A0.85.E7.9B.AE\u0026lt;/link\u0026gt;\u0026lt;/sublink\u0026gt; \u0026lt;/links\u0026gt; \u0026lt;/doc\u0026gt; Â∞ö„ÄÅÂÆüÈöõ„Å´„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„Åø„Çã„Å®„Çè„Åã„Çã„Å®ÊÄù„ÅÜ„Åå„Åì„ÅÆ„Éï„Ç°„Ç§„É´„ÅØ„Çµ„Ç§„Ç∫„ÅåÊØîËºÉÁöÑÂ§ß„Åç„ÅèÈõÜÁ¥Ñ„Åï„Çå„Å¶„ÅÑ„Çã„Éâ„Ç≠„É•„É°„É≥„ÉàÊï∞„ÇÇÂÆü„Å´Â§ö„ÅÑ„ÄÇ„Ç´„Ç¶„É≥„Éà„Åó„Å¶„Åø„Åü„Å®„Åì„ÇçÁèæÊôÇÁÇπÔºà2015/06/09Ôºâ„Åß969541„ÄÄ‰ª∂„ÅÇ„Å£„Åü„ÄÇAzure Search„ÅÆÊñôÈáë„Éó„É©„É≥„ÅÆ„ÅÜ„Å°Free„Éó„É©„É≥„ÅØÊúÄÂ§ß„Éâ„Ç≠„É•„É°„É≥„ÉàÊï∞„Åå10,000„Åß„ÅÇ„Çã„Åì„Å®„Åã„Çâ„Åì„Åì„ÅßÂà©Áî®„Åô„ÇãÊñôÈáë„Éó„É©„É≥„ÅØFree„Åß„ÅØ„Å™„ÅèÊ®ôÊ∫ñ„Éó„É©„É≥„ÇíÈÅ∏Êäû„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ\nIndex Schema „Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÂêç„ÅØwikipedia„ÄÅ„Éï„Ç£„Éº„É´„Éâ„ÅØ„Ç≠„Éº„Éï„Ç£„Éº„É´„Éâ„ÅÆ„Åü„ÇÅ„ÅÆitemid„Éï„Ç£„Éº„É´„Éâ„Å®‰∏äË®òwikipedia XML„Éï„Ç°„Ç§„É´„ÅÆtitle, url, abstract„ÇíÊ†ºÁ¥ç„Åô„Çã„Åü„ÇÅ„ÅÆ3„Éï„Ç£„Éº„É´„Éâ„ÇíÂÆöÁæ©„ÄÇ\n{ \u0026#34;name\u0026#34;: \u0026#34;wikipedia\u0026#34;, \u0026#34;fields\u0026#34;: [ { \u0026#34;name\u0026#34;:\u0026#34;itemid\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;key\u0026#34;: true, \u0026#34;searchable\u0026#34;: false }, { \u0026#34;name\u0026#34;:\u0026#34;title\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false}, { \u0026#34;name\u0026#34;:\u0026#34;abstract\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false, \u0026#34;analyzer\u0026#34;:\u0026#34;ja.lucene\u0026#34; }, { \u0026#34;name\u0026#34;:\u0026#34;url\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false } ] } Azure SearchÊäïÂÖ•Áî®JSON„Éá„Éº„Çø„ÅÆÁîüÊàê Wikipedia XML„Éï„Ç°„Ç§„É´„Åã„ÇâAzure SearchÊäïÂÖ•Áî®„ÅÆJSON„Éá„Éº„Çø„ÇíÁîüÊàê„Åô„Çã„Çπ„ÇØ„É™„Éó„Éà(xml2json.pl)„Çí‰Ωú„Å£„Å¶„Åø„Åü„ÄÇÂ∑®Â§ß„Éï„Ç°„Ç§„É´„ÅÆDOMÊßãÈÄ†„Çí‰∏ÄÂ∫¶„Å´„Ç™„É≥„É°„É¢„É™Â±ïÈñã„Åô„Çã„Åì„Å®„ÅØÁâ©ÁêÜÁöÑ„Å´‰∏çÂèØËÉΩ„Åß„ÅÇ„Çã„Åü„ÇÅ„ÄÅXML::Twig„É¢„Ç∏„É•„Éº„É´„Çí‰Ωø„Å£„Å¶„Éâ„Ç≠„É•„É°„É≥„ÉàÊØé„Å´„Ç≥„Éº„É´„Éê„ÉÉ„ÇØÈñ¢Êï∞„Åã„Çâ„Éï„Ç£„Éº„É´„Éâ„Éá„Éº„Çø„ÇíÊäΩÂá∫„Åô„Çã„Çà„ÅÜ„Å´Â∑•Â§´„ÇíÂáù„Çâ„Åó„Å¶„ÅÑ„Çã„ÄÇ\n#!/usr/bin/perl -w use strict; use XML::Twig; use Getopt::Std; use Encode; use JSON; my $UPLOAD_THRESHOLD=100; my %opts=(); getopts(\u0026#39;c‚≠ï\u0026#39;, \\%opts) or die \u0026#34;Wrong Options!\\n\u0026#34;; my $inputfile=$opts{\u0026#39;c\u0026#39;}; my $outputpath=$opts{\u0026#39;o\u0026#39;}; usage() if ( $inputfile eq \u0026#39;\u0026#39; || $outputpath eq \u0026#39;\u0026#39; ); my($tmpcounter,$itemcounter, $filecounter) = (0,0,0); my $itemsarr = []; my $twig = new XML::Twig( twig_handlers =\u0026gt; { doc =\u0026gt; \\\u0026amp;doc } ); $twig-\u0026gt;parsefile($inputfile); if ($tmpcounter) { flush2json($itemsarr, \u0026#34;items-$filecounter.json\u0026#34;); } sub doc { my($twig, $doc)= @_; my $item = { itemid =\u0026gt; \u0026#34;$itemcounter\u0026#34;, title=\u0026gt; utf8string($doc-\u0026gt;first_child(\u0026#39;title\u0026#39;)-\u0026gt;text), abstract=\u0026gt; utf8string($doc-\u0026gt;first_child(\u0026#39;abstract\u0026#39;)-\u0026gt;text), url =\u0026gt;$doc-\u0026gt;first_child(\u0026#39;url\u0026#39;)-\u0026gt;text }; push($itemsarr,$item); $tmpcounter++; $itemcounter++; if ($tmpcounter % $UPLOAD_THRESHOLD == 0 ){ flush2json($itemsarr, \u0026#34;items-$filecounter.json\u0026#34;); $tmpcounter=0; $filecounter++; $itemsarr=[]; } $twig-\u0026gt;purge; } sub flush2json { my ($iarr, $f)=@_; my $outarr-\u0026gt;{\u0026#39;value\u0026#39;}=$iarr; my $json = JSON-\u0026gt;new(); my $js = $json-\u0026gt;encode($outarr); open(P, \u0026#34;\u0026gt; $outputpath/$f\u0026#34;) or die \u0026#34;can\u0026#39;t open: $outputpath/$f \\n\u0026#34;; print P \u0026#34;$js\u0026#34;; close P; } sub usage { print STDERR \u0026#34;Usage: $0 -c \u0026lt;inputxml\u0026gt; -o \u0026lt;outputpath\u0026gt;\\n\u0026#34;; exit(1); } sub utf8string { my $s= shift; if (utf8::is_utf8($s)) { return encode(\u0026#39;utf-8\u0026#39;, $s); } return $s; } __END__ Ê¨°„ÅÆ„Çà„ÅÜ„Å´-c„Éë„É©„É°„Éº„Çø„Åß„Ç§„É≥„Éó„ÉÉ„Éà„Éï„Ç°„Ç§„É´„Çí„ÄÅ-o„Éë„É©„É°„Éº„Çø„ÅßJSONÂá∫Âäõ„ÅÆ„Åü„ÇÅ„ÅÆ„Éë„Çπ„ÇíÊåáÂÆö„Åô„Çã„ÄÇÂÆüË°å„Åô„Çã„Å®-o„Éë„É©„É°„Éº„Çø„ÅßÊåáÂÆö„Åó„Åü„Éë„Çπ„Å´items-N.json (N:0‰ª•‰∏ä„ÅÆÊï¥Êï∞)„Å™„Éï„Ç°„Ç§„É´„ÅåÂ§ßÈáè„Å´ÁîüÊàê„Åï„Çå„Çã„ÄÇÁèæÊôÇÁÇπ„Åß„ÅÆ„Éá„Éº„Çø„Åã„ÇâÁîüÊàê„Åï„Çå„ÅüJSON„Éï„Ç°„Ç§„É´„ÇíÊï∞„Åà„Å¶„Åø„Åü„Å®„Åì„Ççitems-0.json \u0026hellip;items-9692.json„ÅßÂêàË®à9693ÂÄã„Å†„Å£„Åü„ÄÇ\n$ xml2json.pl -c ./jawiki-latest-abstract.xml -o \u0026lt;path to output\u0026gt; Azure Search„Å´JSON„Éá„Éº„Çø„ÇíÊäïÂÖ• ‰∏äË®ò„Çπ„ÉÜ„ÉÉ„Éó„ÅßÁîüÊàê„Åï„Çå„ÅüJSON„Éï„Ç°„Ç§„É´„Åã„ÇâAzure Search„Å´POST„Åô„Çã„Åü„ÇÅ„ÅÆÁ∞°Êòì„Çπ„ÇØ„É™„Éó„ÉàÔºàAzureSearch-AddItemsFromFile.shÔºâ„Çí‰Ωú„Çã„ÄÇ\n#!/bin/sh if [ $# -ne 1 ] then echo \u0026#34;Usage: $0 \u0026lt;json.file\u0026gt;\u0026#34; exit 1; fi SERVICE_NAME=\u0026#39;\u0026lt;Azure Search Service Name\u0026gt;\u0026#39; API_VER=\u0026#39;2015-02-28-Preview\u0026#39; ADMIN_KEY=\u0026#39;\u0026lt;API KEY\u0026gt;\u0026#39; CONTENT_TYPE=\u0026#39;application/json\u0026#39; INDEX_NAME=\u0026#39;wikipedia\u0026#39; URL=\u0026#34;https://$SERVICE_NAME.search.windows.net/indexes/$INDEX_NAME/docs/index?api-version=$API_VER\u0026#34; JSON=`cat $1` curl \\ -H \u0026#34;Content-Type: $CONTENT_TYPE\u0026#34;\\ -H \u0026#34;api-key: $ADMIN_KEY\u0026#34;\\ -XPOST $URL -d \u0026#34;$JSON\u0026#34; ÊúÄÂæå„Å´Â§ßÈáè„Å´ÁîüÊàê„Åï„Çå„ÅüJSON„Éï„Ç°„Ç§„É´Áæ§„Çí„Éï„Ç°„Ç§„É´Âêç„ÇíÔºë„Å§„Åö„Å§„Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÅÆÁ¨¨‰∏ÄÂºïÊï∞„Å´ÊåáÂÆö„Åó„Å¶ÂÆüË°å„Åó„Å¶„ÅÑ„Åè„ÄÇ1‰∏áËøë„ÅÑ„Éï„Ç°„Ç§„É´„Å™„ÅÆ„ÅßÂÖ®„Å¶ÊäïÂÖ•„ÅåÂÆå‰∫Ü„Åô„Çã„Åæ„Åß„Å´Â∞ë„ÄÖÊôÇÈñì„ÅØ„Åã„Åã„Çä„Åæ„Åô„ÄÇ\nfor i in `ls -1tr *.json`;do echo $i; ./AzureSearch-AddItemsFromFile.sh $i;done ","permalink":"https://unofficialism.info/posts/putting-wikipedia-data-into-azure-search/","summary":"Wikipedia„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅØ Creative Commons License„Åä„Çà„Å≥ GNU Free Documentation License„ÅÆ‰∏ã„Å´„É©„Ç§„Çª„É≥„Çπ„Åï„Çå„Å¶„Åä„ÇäWikipediaË≤°Âõ£„ÅØÂÜçÈÖçÂ∏É„ÇÑÂÜçÂà©Áî®„ÅÆ„Åü„ÇÅ„Å´ÊÉú„Åó„Åí„ÇÇ„Å™„Åè„Åì„ÅÆË≤¥Èáç„Å™„Éá„Éº„Çø„Éô„Éº„Çπ„ÅÆ„ÉÄ„É≥„Éó„Éï„Ç°„Ç§„É´ÔºàXML„Éï„Ç°„Ç§„É´Ôºâ„Çí‰∏ÄËà¨Êèê‰æõ„Åó„Å¶„ÅÑ„Çã„ÄÇÂÖ®ÊñáÊ§úÁ¥¢„ÅÆÊ§úË®º„ÅßÂ§ßÈáè„ÅÆ„Éá„Éº„Çø„ÅåÂøÖË¶Å„Å™„Å®„Åç„Åì„ÅÆWikipedia„ÅÆ„Çà„ÅÜ„Å™Áîü„Åç„Åü„Éá„Éº„Çø„Çí‰Ωø„Åà„Çã„ÅÆ„ÅØÈùûÂ∏∏„Å´Êúâ„Çä„Åå„Åü„ÅÑ„ÄÇ„Åì„Çå„ÅØ„Åì„ÅÆWikipedia„Éá„Éº„Çø„Éô„Éº„Çπ„ÉÄ„É≥„ÉóÔºàÊó•Êú¨Ë™ûÔºâ„ÇíÂÖÉ„Å´Azure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÇíÁîüÊàê„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„Å®„ÅÑ„ÅÜ„ÅäË©±„ÄÇ\nWikipedia:„Éá„Éº„Çø„Éô„Éº„Çπ„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ „Ç¶„Ç£„Ç≠„É°„Éá„Ç£„Ç¢Ë≤°Âõ£„Å´„Çà„ÇãÂÖ®„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Éá„Éº„Çø„Éô„Éº„Çπ„Éª„ÉÄ„É≥„Éó WikipediaÊó•Êú¨Ë™ûÁâà„ÅÆ„ÉÄ„É≥„Éó„Éá„Éº„Çø„É¨„Éù„Ç∏„Éà„É™(Êó•Êú¨Ë™ûÊúÄÊñ∞Áâà) Âà©Áî®„Åô„ÇãWikipedia XML„Éï„Ç°„Ç§„É´„Å®„Åù„ÅÆÂÆöÁæ© ÊúÄÊñ∞ÁâàÊó•Êú¨Ë™û„É¨„Éù„Ç∏„Éà„É™„Å´„ÅØË§áÊï∞„ÅÆXML„Éï„Ç°„Ç§„É´„ÅåÁî®ÊÑè„Åï„Çå„Å¶„ÅÑ„Çã„Åå„Åì„Åì„Åß„ÅØÂÖ®„Éö„Éº„Ç∏„ÅÆ„Çø„Ç§„Éà„É´„ÄÅ„Éá„Ç£„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥„Å®„ÅÑ„Å£„ÅüË¶ÅÁ¥Ñ„Éá„Éº„Çø„ÇíÈõÜÁ¥Ñ„Åó„Å¶„ÅÑ„Çã„Éï„Ç°„Ç§„É´jawiki-latest-abstract.xml„ÇíÂà©Áî®„Åô„Çã„ÄÇXML„ÅÆ„Éï„Ç©„Éº„Éû„ÉÉ„Éà„ÅØÊ¨°„ÅÆ„Å®„Åä„Çä„ÄÇ„Åì„ÅÆ‰∏≠„Åã„Çâtitle, url, abstract„ÇíÊäΩÂá∫„Åó„Å¶Azure Search„Å´ÊäïÂÖ•„Åô„Çã„ÄÇ\n\u0026lt;doc\u0026gt; \u0026lt;title\u0026gt;Wikipedia: Ëá™ÁÑ∂Ë®ÄË™û\u0026lt;/title\u0026gt; \u0026lt;url\u0026gt;http://ja.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E8%A8%80%E8%AA%9E\u0026lt;/url\u0026gt; \u0026lt;abstract\u0026gt;Ëá™ÁÑ∂Ë®ÄË™ûÔºà„Åó„Åú„Çì„Åí„Çì„Åî„ÄÅÔºâ„Å®„ÅØ„ÄÅ‰∫∫Èñì„Å´„Çà„Å£„Å¶Êó•Â∏∏„ÅÆÊÑèÊÄùÁñéÈÄö„ÅÆ„Åü„ÇÅ„Å´Áî®„ÅÑ„Çâ„Çå„Çã„ÄÅÊñáÂåñÁöÑËÉåÊôØ„ÇíÊåÅ„Å£„Å¶Ëá™ÁÑ∂„Å´Áô∫Â±ï„Åó„Å¶„Åç„ÅüË®òÂè∑‰ΩìÁ≥ª„Åß„ÅÇ„Çã„ÄÇÂ§ßÂà•„Åô„Çã„Å®Èü≥Â£∞„Å´\u0026gt;„Çà„ÇãË©±„ÅóË®ÄËëâ„Å®ÊñáÂ≠ó„ÇÑË®òÂè∑„Å®„Åó„Å¶Êõ∏„Åã„Çå„ÇãÊõ∏„ÅçË®ÄËëâ„Åå„ÅÇ„Çã„ÄÇ\u0026lt;/abstract\u0026gt; \u0026lt;links\u0026gt; \u0026lt;sublink linktype=\u0026#34;nav\u0026#34;\u0026gt;\u0026lt;anchor\u0026gt;Ê¶ÇË¶Å\u0026lt;/anchor\u0026gt;\u0026lt;link\u0026gt;http://ja.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E8%A8%80%E8%AA%9E#.E6.A6.82.E8.A6.81\u0026lt;/link\u0026gt;\u0026lt;/sublink\u0026gt; \u0026lt;sublink linktype=\u0026#34;nav\u0026#34;\u0026gt;\u0026lt;anchor\u0026gt;Èñ¢ÈÄ£È†ÖÁõÆ\u0026lt;/anchor\u0026gt;\u0026lt;link\u0026gt;http://ja.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E8%A8%80%E8%AA%9E#.E9.96.A2.E9.80.A3.E9.A0.85.E7.9B.AE\u0026lt;/link\u0026gt;\u0026lt;/sublink\u0026gt; \u0026lt;/links\u0026gt; \u0026lt;/doc\u0026gt; Â∞ö„ÄÅÂÆüÈöõ„Å´„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Å¶„Åø„Çã„Å®„Çè„Åã„Çã„Å®ÊÄù„ÅÜ„Åå„Åì„ÅÆ„Éï„Ç°„Ç§„É´„ÅØ„Çµ„Ç§„Ç∫„ÅåÊØîËºÉÁöÑÂ§ß„Åç„ÅèÈõÜÁ¥Ñ„Åï„Çå„Å¶„ÅÑ„Çã„Éâ„Ç≠„É•„É°„É≥„ÉàÊï∞„ÇÇÂÆü„Å´Â§ö„ÅÑ„ÄÇ„Ç´„Ç¶„É≥„Éà„Åó„Å¶„Åø„Åü„Å®„Åì„ÇçÁèæÊôÇÁÇπÔºà2015/06/09Ôºâ„Åß969541„ÄÄ‰ª∂„ÅÇ„Å£„Åü„ÄÇAzure Search„ÅÆÊñôÈáë„Éó„É©„É≥„ÅÆ„ÅÜ„Å°Free„Éó„É©„É≥„ÅØÊúÄÂ§ß„Éâ„Ç≠„É•„É°„É≥„ÉàÊï∞„Åå10,000„Åß„ÅÇ„Çã„Åì„Å®„Åã„Çâ„Åì„Åì„ÅßÂà©Áî®„Åô„ÇãÊñôÈáë„Éó„É©„É≥„ÅØFree„Åß„ÅØ„Å™„ÅèÊ®ôÊ∫ñ„Éó„É©„É≥„ÇíÈÅ∏Êäû„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÄÇ\nIndex Schema „Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÂêç„ÅØwikipedia„ÄÅ„Éï„Ç£„Éº„É´„Éâ„ÅØ„Ç≠„Éº„Éï„Ç£„Éº„É´„Éâ„ÅÆ„Åü„ÇÅ„ÅÆitemid„Éï„Ç£„Éº„É´„Éâ„Å®‰∏äË®òwikipedia XML„Éï„Ç°„Ç§„É´„ÅÆtitle, url, abstract„ÇíÊ†ºÁ¥ç„Åô„Çã„Åü„ÇÅ„ÅÆ3„Éï„Ç£„Éº„É´„Éâ„ÇíÂÆöÁæ©„ÄÇ\n{ \u0026#34;name\u0026#34;: \u0026#34;wikipedia\u0026#34;, \u0026#34;fields\u0026#34;: [ { \u0026#34;name\u0026#34;:\u0026#34;itemid\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;key\u0026#34;: true, \u0026#34;searchable\u0026#34;: false }, { \u0026#34;name\u0026#34;:\u0026#34;title\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false}, { \u0026#34;name\u0026#34;:\u0026#34;abstract\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false, \u0026#34;analyzer\u0026#34;:\u0026#34;ja.lucene\u0026#34; }, { \u0026#34;name\u0026#34;:\u0026#34;url\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false } ] } Azure SearchÊäïÂÖ•Áî®JSON„Éá„Éº„Çø„ÅÆÁîüÊàê Wikipedia XML„Éï„Ç°„Ç§„É´„Åã„ÇâAzure SearchÊäïÂÖ•Áî®„ÅÆJSON„Éá„Éº„Çø„ÇíÁîüÊàê„Åô„Çã„Çπ„ÇØ„É™„Éó„Éà(xml2json.","title":"Wikipedia„Éá„Éº„Çø„Éô„Éº„Çπ„ÇíÂÖÉ„Å´Azure Search„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÇíÁîüÊàê„Åô„Çã"},{"content":"cUrl„ÅØUNIX/LinuxÁ≥ª„Åß„ÅØÊúâÂêç„Å™URL„Çí‰Ωø„Å£„Åü„Éá„Éº„ÇøÈÄÅÂèó‰ø°„Ç≥„Éû„É≥„Éâ„ÅßÊâãËªΩ„Å´RESTÁ≥ªÂá¶ÁêÜ„ÇíÂÆüË°å„Åô„Çã„Å®„Åç„Å´„Å®„Å¶„ÇÇÈáçÂÆù„Åó„Å¶„ÅÑ„Çã„ÄÇ„Åù„Çì„Å™cUrl„Ç≥„Éû„É≥„Éâ„Çí‰Ωø„Å£„Å¶Azure Search„Çí„ÅäÊâãËªΩ„Å´‰Ωø„Å£„Å¶„Åø„Çà„ÅÜ„Å®„ÅÑ„ÅÜ„ÅäË©±„ÄÇ\n„ÅØ„Åò„ÇÅ„Å´ „Åæ„Å†„ÅÆ‰∫∫„ÅØAzure„Éù„Éº„Çø„É´„Çà„ÇäAzure Search„Çµ„Éº„Éì„Çπ„Çí‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ„Äå„Éù„Éº„Çø„É´„Åß„ÅÆ Azure Search „Çµ„Éº„Éì„Çπ„ÅÆ‰ΩúÊàê„Äç„Å´ÂÑ™„Åó„ÅèÊâãÈ†Ü„ÅåÊõ∏„Åã„Çå„Å¶„ÅÑ„Çã„ÅÆ„Åß„ÅîÂèÇËÄÉ„Å´„ÄÇÊñôÈáë„Éó„É©„É≥„ÅØÁÑ°Êñô„Å®Ê®ôÊ∫ñ„Éó„É©„É≥„Åå„ÅÇ„Çã„Åå„ÉÜ„Çπ„Éà„Åß„ÅÇ„Çå„Å∞ÁÑ°Êñô„Éó„É©„É≥„ÅßÂçÅÂàÜ„ÄÇ„Åæ„Åö„ÅØAPI„Ç≠„Éº„Åæ„ÅßÂèñÂæó„Åè„Å†„Åï„ÅÑ„ÄÇAPIÂÆüË°å„ÅÆ„Åü„ÇÅ„Å´„ÅØAPI„Ç≠„Éº„ÅåÂøÖË¶Å„ÄÇ\ncURL„ÅßSearch Service REST API„ÇíÂÆüË°å Search Service REST API„ÅÆ‰∏≠„Åã„Çâ„ÅÑ„Åè„Å§„Åã‰ª£Ë°®ÁöÑ„Å™API„Çí„Éî„ÉÉ„ÇØ„Ç¢„ÉÉ„Éó„Åó„Å¶cUrl„Åß„ÇØ„Ç®„É™„ÇíÁµÑ„ÅøÁ´ã„Å¶„Å¶„Åø„Çã„ÄÇ„Åì„Åì„Åß„ÅØ„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÊñ∞Ë¶è‰ΩúÊàê„ÄÅ„Åù„Åì„Å´„ÅÑ„Åè„Å§„Åã„Éâ„Ç≠„É•„É°„É≥„Éà„ÇíËøΩÂä†„ÄÅ„Åù„Åó„Å¶„Éâ„Ç≠„É•„É°„É≥„Éà„ÇíÊ§úÁ¥¢„Åô„Çã„Éª„Éª„Å®„ÅÑ„Å£„ÅüÂü∫Êú¨ÁöÑ„Å™„Ç∑„Éä„É™„Ç™„ÇíÂÆüË°å„Åô„Çã„ÄÇ„Éù„Ç§„É≥„Éà„Å®„Åó„Å¶„ÅØcUrl„ÅÆ-H„Ç™„Éó„Ç∑„Éß„É≥„Åß„Éò„ÉÉ„ÉÄÂÆöÁæ©„ÄÅ-X„Ç™„Éó„Ç∑„Éß„É≥„ÅßHTTP„É°„ÇΩ„ÉÉ„ÉâÊåáÂÆö„ÄÅ-d„Ç™„Éó„Ç∑„Éß„É≥„Åß„É™„ÇØ„Ç®„Çπ„Éà„Éú„Éá„Ç£„ÇíÊåáÂÆö„Åô„Çã„Éª„Éª„Éª„Å®„ÅÑ„Å£„Åü„Å®„Åì„Çç„ÄÇÂ∞ö„ÄÅ‰∏ãË®ò„Çµ„É≥„Éó„É´„Åß„ÅØÁèæÊôÇÁÇπÔºà2015-06-05Ôºâ„ÅßÊúÄÊñ∞„ÅÆAPI„Éê„Éº„Ç∏„Éß„É≥2015-02-28-Preview„Çí‰ΩøÁî®„Åó„Å¶„ÅÑ„Çã„ÄÇ\n1. „Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÊñ∞Ë¶è‰ΩúÊàê articles„Å®„ÅÑ„ÅÜÂêçÂâç„ÅÆ„Éñ„É≠„Ç∞Ë®ò‰∫ã„ÇíÊ†ºÁ¥ç„Åô„Çã„Åü„ÇÅ„ÅÆ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Çí‰ΩúÊàê„Åô„Çã„ÄÇ„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÁîüÊàê„Å´„ÅØCreate Index (Azure Search Service REST API)„ÇíÂà©Áî®„Åô„Çã„ÄÇ\n#!/bin/sh SERVICE_NAME=\u0026#39;\u0026lt;Azure Search Service Name\u0026gt;\u0026#39; API_VER=\u0026#39;2015-02-28-Preview\u0026#39; ADMIN_KEY=\u0026#39;\u0026lt;API KEY\u0026gt;\u0026#39; CONTENT_TYPE=\u0026#39;application/json\u0026#39; URL=\u0026#34;https://$SERVICE_NAME.search.windows.net/indexes?api-version=$API_VER\u0026#34; curl -s\\ -H \u0026#34;Content-Type: $CONTENT_TYPE\u0026#34;\\ -H \u0026#34;api-key: $ADMIN_KEY\u0026#34;\\ -XPOST $URL -d\u0026#39;{ \u0026#34;name\u0026#34;: \u0026#34;articles\u0026#34;, \u0026#34;fields\u0026#34;: [ { \u0026#34;name\u0026#34;:\u0026#34;itemid\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;key\u0026#34;: true, \u0026#34;searchable\u0026#34;: false }, { \u0026#34;name\u0026#34;:\u0026#34;title\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false}, { \u0026#34;name\u0026#34;:\u0026#34;content\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false, \u0026#34;analyzer\u0026#34;:\u0026#34;ja.lucene\u0026#34; }, { \u0026#34;name\u0026#34;:\u0026#34;permalink\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false }, { \u0026#34;name\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Collection(Edm.String)\u0026#34;}, { \u0026#34;name\u0026#34;:\u0026#34;postdate\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.DateTimeOffset\u0026#34;, \u0026#34;facetable\u0026#34;:false} ], \u0026#34;suggesters\u0026#34;: [ { \u0026#34;name\u0026#34;:\u0026#34;testsg\u0026#34;, \u0026#34;searchMode\u0026#34;:\u0026#34;analyzingInfixMatching\u0026#34;, \u0026#34;sourceFields\u0026#34;:[\u0026#34;title\u0026#34;,\u0026#34;tags\u0026#34;] } ] }\u0026#39; 2. „Éâ„Ç≠„É•„É°„É≥„Éà„ÅÆËøΩÂä† 1„Åß‰ΩúÊàê„Åó„Åü„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å´„ÅÑ„Åè„Å§„Åã„Éâ„Ç≠„É•„É°„É≥„Éà„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åó„Å¶„Åø„Çã„ÄÇ„Éá„Éº„Çø„ÇΩ„Éº„Çπ„ÅØMicrosoft Azure Japan Blog„ÅÆRSS„ÄÇ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Å∏„ÅÆ„Éâ„Ç≠„É•„É°„É≥„Éà„ÅÆ„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâAPI„ÅØAdd, Update or Delete Documents (Azure Search Service REST AP„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ„ÄÇ\n#!/bin/sh SERVICE_NAME=\u0026#39;\u0026lt;Azure Search Service Name\u0026gt;\u0026#39; API_VER=\u0026#39;2015-02-28-Preview\u0026#39; ADMIN_KEY=\u0026#39;\u0026lt;API KEY\u0026gt;\u0026#39; CONTENT_TYPE=\u0026#39;application/json\u0026#39; INDEX_NAME=\u0026#39;articles\u0026#39; URL=\u0026#34;https://$SERVICE_NAME.search.windows.net/indexes/$INDEX_NAME/docs/index?api-version=$API_VER\u0026#34; curl \\ -H \u0026#34;Content-Type: $CONTENT_TYPE\u0026#34;\\ -H \u0026#34;api-key: $ADMIN_KEY\u0026#34;\\ -XPOST $URL -d\u0026#39;{ \u0026#34;value\u0026#34;: [ { \u0026#34;@search.action\u0026#34;: \u0026#34;upload\u0026#34;, \u0026#34;itemid\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;DocumentDB „ÅÆÊñ∞„Åó„ÅÑ„Ç§„É≥„Éù„Éº„Éà „Ç™„Éó„Ç∑„Éß„É≥\u0026#34;, \u0026#34;content\u0026#34;:\u0026#34;„Åì„ÅÆ„Éù„Çπ„Éà„ÅØ„ÄÅ5 Êúà 5 Êó•„Å´ÊäïÁ®ø„Åï„Çå„Åü New DocumentDB Import Options „ÅÆÁøªË®≥„Åß„Åô„ÄÇ 4 Êúà 8 Êó•„Å´„ÄÅ„Åï„Åæ„Åñ„Åæ„Å™„ÇΩ„Éº„Çπ„Åã„Çâ DocumentDB „Å´„Éá„Éº„Çø„Çí„Ç§\u0026gt;„É≥„Éù„Éº„Éà„Åß„Åç„Çã„Ç™„Éº„Éó„É≥ „ÇΩ„Éº„Çπ „ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„ÄÅAzure DocumentDB Data Migration Tool „Åå„É™„É™„Éº„Çπ„Åï„Çå„Åæ„Åó„Åü„ÄÇ„Åì„ÅÆ„ÉÑ„Éº„É´„Åß„ÅØ‰∏ª„Å´Ê¨°„ÅÆ„ÇΩ„Éº„Çπ„Åã„Çâ„Éá„Éº„Çø„Çí„Ç§„É≥„Éù\u0026gt;„Éº„Éà„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ JSON „Éï„Ç°„Ç§„É´ MongoDB SQL Server CSV „Éï„Ç°„Ç§„É´ DocumentDB „Ç≥„É¨„ÇØ„Ç∑„Éß„É≥ „Åù„Åó„Å¶‰ªäÂõû„ÄÅ„Åï„Çâ„Å´ 2 „Å§„ÅÆ„Ç§„É≥„Éù„Éº„Éà „Ç™„Éó„Ç∑„Éß„É≥„Åå„Çµ„Éù„Éº„Éà\u0026gt;„Åï„Çå„Åæ„Åó„Åü„ÄÇAzure Table Storage „Å®„ÄÅJSON/CSV/MongoDB „ÅÆÂêÑ„Ç®„ÇØ„Çπ„Éù„Éº„Éà „Éï„Ç°„Ç§„É´„ÅÆ URL „Åß„Åô„ÄÇ Azure Table Storage Azure Table Storage „Åã„Çâ DocumentDB „Å∏„Éá „Éº„Çø„Çí„Ç§„É≥„Éù„Éº„Éà„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åó„Åü„ÄÇÊé•Á∂öÊñáÂ≠óÂàó„Å®„ÉÜ„Éº„Éñ„É´Âêç„ÇíÊåáÂÆö„Åô„Çã„Å†„Åë„Åß„ÄÅAzure Table „ÅÆ„Åô„Åπ„Å¶„ÅÆ„Ç®„É≥„Éà„É™„Çí„Ç§„É≥„Éù„Éº„Éà„Åß„Åç„Åæ„Åô\u0026#34;, \u0026#34;permalink\u0026#34;:\u0026#34;http://blogs.msdn.com/b/windowsazurej/archive/2015/06/01/new-documentdb-import-options.aspx\u0026#34;, \u0026#34;tags\u0026#34;:[\u0026#34;azure\u0026#34;, \u0026#34;db\u0026#34;, \u0026#34;documentdb\u0026#34;, \u0026#34;nosql\u0026#34;], \u0026#34;postdate\u0026#34;:\u0026#34;2015-05-31T00:00:00Z\u0026#34; }, { \u0026#34;@search.action\u0026#34;: \u0026#34;upload\u0026#34;, \u0026#34;itemid\u0026#34;: \u0026#34;2\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Application Insights „ÅÆ„Éë„Éñ„É™„ÉÉ„ÇØ „Éó„É¨„Éì„É•„Éº„ÇíÁô∫Ë°®\u0026#34;, \u0026#34;content\u0026#34;:\u0026#34;„Åì„ÅÆ„Éù„Çπ„Éà„ÅØ„ÄÅ4 Êúà 29 Êó•„Å´ÊäïÁ®ø„Åï„Çå„Åü Announcing Application Insights Public Preview „ÅÆÁøªË®≥„Åß„Åô„ÄÇ ÂÖàÊó•„ÅÆ BUILD „Ç´„É≥„Éï„Ç°„É¨„É≥„Çπ (Ëã±Ë™û) „Åß„ÅØ\u0026gt;„Åï„Åæ„Åñ„Åæ„Å™Áô∫Ë°®„Åå„ÅÇ„Çä„Åæ„Åó„Åü„ÄÇ Somasegar „ÅÆ„Éñ„É≠„Ç∞ „ÇÑ Brian Harry „ÅÆ„Éñ„É≠„Ç∞ (Ëã±Ë™û) „Çí„ÅîË¶ß„Å´„Å™„Å£„ÅüÊñπ„ÅØ„ÅîÂ≠òÁü•„Åã„Å®ÊÄù„ÅÑ„Åæ„Åô„Åå„ÄÅ„Éû„Ç§„ÇØ„É≠„ÇΩ„Éï„Éà„ÅØ Visual Studio Application Insights „ÅÆ„Éë„Éñ„É™„ÉÉ„ÇØ „Éó„É¨„Éì„É•„Éº„ÇíÁô∫Ë°®„Åó„Åæ„Åó„Åü„ÄÇ„Åì„ÅÆ„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„Åß„ÅØ„ÄÅ „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ „Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÁÆ°ÁêÜ „Å® Âà©Áî®Áä∂Ê≥ÅÂàÜÊûê „ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Å¶„Åï\u0026gt;„Åæ„Åñ„Åæ„Å™„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÂàÜÊûê„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ Application Insights „ÅØ„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆ„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÄÅÂèØÁî®ÊÄß„ÄÅÂà©Áî®Áä∂Ê≥Å„Çí„ÅÇ„Çâ„ÇÜ„ÇãËßíÂ∫¶„Åã„ÇâÂåÖÊã¨ÁöÑ„Å´ÊääÊè°„Åß„Åç „ÇãÈñãÁô∫ËÄÖÂêë„Åë„ÅÆ„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„Åß„Åô„ÄÇ„Éà„É©„Éñ„É´„Ç∑„É•„Éº„ÉÜ„Ç£„É≥„Ç∞„ÇÑË®∫Êñ≠„ÇíËøÖÈÄü„Å´ÂÆüÊñΩ„Åß„Åç„ÇãÁõ¥Ë¶≥ÁöÑ„Å™„Éì„É•„Éº„Å®Âº∑Âäõ„Å™„ÉÑ„Éº„É´„Å´„Çà„Çä„ÄÅ„É¶„Éº„Ç∂„Éº„ÅÆ„Ç¢„ÇØ„ÉÜ„Ç£„Éì„ÉÜ„Ç£„Å®Âà©Áî®Áä∂Ê≥Å„Çí ÂàÜÊûê„Åó„ÄÅÂàÜÊûêÁµêÊûú„Å´Âøú„Åò„Å¶Â∞ÜÊù•„ÅÆÊäïË≥á„ÅÆÂÑ™ÂÖàÈ†Ü‰Ωç„ÇíÊ±∫ÂÆö„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô\u0026#34;, \u0026#34;permalink\u0026#34;:\u0026#34;http://blogs.msdn.com/b/windowsazurej/archive/2015/05/26/announcing-application-insights-public-preview.aspx\u0026#34;, \u0026#34;tags\u0026#34;:[\u0026#34;azure\u0026#34;, \u0026#34;applicationinsights\u0026#34;, \u0026#34;insights\u0026#34;, \u0026#34;monitoring\u0026#34;], \u0026#34;postdate\u0026#34;:\u0026#34;2015-05-25T00:00:00Z\u0026#34; }, { \u0026#34;@search.action\u0026#34;: \u0026#34;upload\u0026#34;, \u0026#34;itemid\u0026#34;: \u0026#34;4\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;DocumentDB SDK „Åß„Éë„Éº„ÉÜ„Ç£„Ç∑„Éß„É≥ÂàÜÂâ≤„Çí„Çµ„Éù„Éº„Éà\u0026#34;, \u0026#34;content\u0026#34;:\u0026#34;„Åì„ÅÆ„Éù„Çπ„Éà„ÅØ„ÄÅ4 Êúà 30 Êó•„Å´ÊäïÁ®ø„Åï„Çå„Åü Announcing partitioning support in the DocumentDB SDK „ÅÆÁøªË®≥„Åß „Åô„ÄÇ „Éû„Ç§„ÇØ„É≠„ÇΩ„Éï„Éà„ÅØ„ÄÅ.NET SDK „Å´Êñ∞„Åó„ÅÑÊ©üËÉΩ„ÇíËøΩÂä†„Åó„Åü„Åì„Å®„ÇíÁô∫Ë°®„Åó„Åæ„Åó„Åü„ÄÇ„Åì„ÅÆÊ©üËÉΩ„Å´„Çà„Å£„Å¶„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ „Éá„Éº\u0026gt;„Çø„ÅÆ„Éë„Éº„ÉÜ„Ç£„Ç∑„Éß„É≥ÂàÜÂâ≤Ê©üËÉΩ„Çí Azure DocumentDB „Çí‰ΩøÁî®„Åó„Å¶Á∞°Âçò„Å´ÈñãÁô∫„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åó„Åü„ÄÇ DocumentDB „Çµ„Éº„Éì„Çπ„ÅÆ„Éó „É¨„Éì„É•„ÉºÊúüÈñì‰∏≠„ÄÅÁßÅ„Åü„Å°„ÅØÈñãÁô∫ËÄÖ„ÅÆÁöÜÊßò„ÅåÂÄãÂà•„ÅÆÂÄ§„ÇÑ„Çø„Ç§„É†„Çπ„Çø„É≥„Éó„ÅÆÁØÑÂõ≤„ÅÆ„É´„ÉÉ„ÇØ„Ç¢„ÉÉ„Éó „ÉÜ„Éº„Éñ„É´„Çí‰ΩøÁî®„Åó„Åü„Çä„ÄÅ„Ç™„Éñ„Ç∏„Çß\u0026gt;„ÇØ„Éà ID „Çí‰∏ÄË≤´„Åó„Å¶„Éè„ÉÉ„Ç∑„É•Âåñ„Åô„Çã„Å™„Å©„Åï„Åæ„Åñ„Åæ„Å™Á®ÆÈ°û„ÅÆÈ°û‰ºº„ÅÆ„Éá„Éº„Çø „Ç¢„ÇØ„Çª„ÇπÂ±§„ÇíÂÆüË£Ö„Åó„Å¶„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥ÂÖ®‰Ωì„ÅÆ„Éá„Éº„Çø„Çí„Éë\u0026gt;„Éº„ÉÜ„Ç£„Ç∑„Éß„É≥ÂàÜÂâ≤„Åó„Å¶„ÅÑ„Åü„ÅÆ„ÇíÁõÆ„Å´„Åó„Åæ„Åó„Åü„ÄÇ„Åì„Çå„Å´„Å§„ÅÑ„Å¶„ÄÅÁöÜÊßò„Åã„Çâ„ÄåSDK „Åß„Éú„Ç§„É©„Éº„Éó„É¨„Éº„Éà„ÅÆ„Éë„Éº„ÉÜ„Ç£„Ç∑„Éß„É≥ÂàÜÂâ≤„Çø„Çπ„ÇØ „ÇíÂÆüË°å„Åô„Çã„Éò„É´„Éë„Éº „ÇØ„É©„Çπ„ÇÑ„Éò„É´„Éë„Éº „É°„ÇΩ„ÉÉ„Éâ„ÇíËøΩÂä†„Åô„Çå„Å∞„ÄÅÂ§ßË¶èÊ®°„Å™ DocumentDB „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÈñãÁô∫„ÇíÁ∞°Áï•Âåñ„Åß„Åç„Çã „ÅÆ„Åß„ÅØ„Å™„ÅÑ„Åã„Äç„Å®„ÅÑ„ÅÜÊòéÂø´„Å™„ÅîÊåáÊëò„Çí„ÅÑ„Åü„Å†„Åç„Åæ„Åó„Åü„ÄÇ „Åù„Åì„Åß„ÄÅSDK ÂÜÖ„Åß„Éë„Éº„ÉÜ„Ç£„Ç∑„Éß„É≥ÂàÜÂâ≤„Çí„Çµ„Éù„Éº„Éà„Åô„Çã„Åü„ÇÅ„Å´\u0026#34;, \u0026#34;permalink\u0026#34;:\u0026#34;http://blogs.msdn.com/b/windowsazurej/archive/2015/06/01/announcing-partitioning-support-in-the-documentdb-sdk.aspx\u0026#34;, \u0026#34;tags\u0026#34;:[\u0026#34;db\u0026#34;, \u0026#34;documentdb\u0026#34;, \u0026#34;nosql\u0026#34;], \u0026#34;postdate\u0026#34;:\u0026#34;2015-05-03T00:00:00Z\u0026#34; } ] }\u0026#39; 3. „Éâ„Ç≠„É•„É°„É≥„Éà„ÅÆÊ§úÁ¥¢ ËøΩÂä†„Åï„Çå„Åü„Éâ„Ç≠„É•„É°„É≥„Éà„ÇíÂÆüÈöõ„Å´Ê§úÁ¥¢„Åó„Å¶„Åø„Çã„ÄÇ‰∏ãË®ò„Çµ„É≥„Éó„É´„ÅØ\u0026quot;DocumentDB\u0026quot;„Ç≠„Éº„ÉØ„Éº„Éâ„ÅßÊ§úÁ¥¢„Çí„Åó„Å¶‰∏ä‰ΩçÔºï„Å§„ÅÆÁµêÊûú„ÇíÂèñÂæó„ÄÅ„É¨„Çπ„Éù„É≥„Çπ„Éï„Ç£„Éº„É´„Éâ„Å®„Åó„Å¶itemid„Å®title„Éï„Ç£„Éº„É´„Éâ„ÇíÊåáÂÆö„Åó„Å¶„ÅÑ„Çã„ÄÇ„Éâ„Ç≠„É•„É°„É≥„Éà„ÅÆÊ§úÁ¥¢API„ÅØSearch Documents (Azure Search Service REST API)„ÇíÂèÇÁÖß„Åè„Å†„Åï„ÅÑ„ÄÇ\n#!/bin/sh SERVICE_NAME=\u0026#39;\u0026lt;Azure Search Service Name\u0026gt;\u0026#39; API_VER=\u0026#39;2015-02-28-Preview\u0026#39; ADMIN_KEY=\u0026#39;\u0026lt;API KEY\u0026gt;\u0026#39; CONTENT_TYPE=\u0026#39;application/json\u0026#39; INDEX_NAME=\u0026#39;articles\u0026#39; URL=\u0026#34;https://$SERVICE_NAME.search.windows.net/indexes/$INDEX_NAME/docs?api-version=$API_VER\u0026#34; curl -s\\ -H \u0026#34;Content-Type: $CONTENT_TYPE\u0026#34;\\ -H \u0026#34;api-key: $ADMIN_KEY\u0026#34;\\ -XGET $URL\\ \u0026#34;\u0026amp;search=DocumentDB\u0026#34;\\ \u0026#34;\u0026amp;\\$select=itemid,title\u0026#34;\\ \u0026#34;\u0026amp;\\$count=true\u0026#34;\\ \u0026#34;\u0026amp;\\$top=5\u0026#34; „Åü„Å†„Åó‰∏äË®ò„ÅÆÂÆüË°åÁµêÊûú„ÅØÊ¨°„ÅÆ„Çà„ÅÜ„Å´Êó•Êú¨Ë™û„Éû„É´„ÉÅ„Éê„Ç§„ÉàÊñáÂ≠ó„Åå„Åô„Åπ„Å¶\u0026quot;\\uHHHH\u0026quot;„ÅÆ„Çà„ÅÜ„Å™„É¶„Éã„Ç≥„Éº„Éâ„ÅÆ16ÈÄ≤Ë°®Áèæ„Åß„Ç®„É≥„Ç≥„Éº„Éâ„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇ„Åï„Çâ„Å´1Ë°å„É¨„Çπ„Éù„É≥„Çπ„Åß„ÅÇ„Çã„Åü„ÇÅÁµêÊûú„ÅÆJSONÊßãÈÄ†„ÅåÈùûÂ∏∏„Å´ÂàÜ„Åã„Çä„Å•„Çâ„ÅèÂèØË™≠ÊÄß„ÅÆ„Å™„ÅÑÁä∂Ê≥Å„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ\n{\u0026#34;@odata.context\u0026#34;:\u0026#34;https://yoichikaecdemo0.search.windows.net/indexes(\u0026#39;articles\u0026#39;)/$metadata#docs(itemid,title)\u0026#34;,\u0026#34;@odata.count\u0026#34;:2,\u0026#34;value\u0026#34;:[{\u0026#34;@search.score\u0026#34;:1.1298637,\u0026#34;itemid\u0026#34;:\u0026#34;1\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;DocumentDB \\u306e\\u65b0\\u3057\\u3044\\u30a4\\u30f3\\u30dd\\u30fc\\u30c8 \\u30aa\\u30d7\\u30b7\\u30e7\\u30f3\u0026#34;},{\u0026#34;@search.score\u0026#34;:1.058217,\u0026#34;itemid\u0026#34;:\u0026#34;4\u0026#34;,\u0026#34;title\u0026#34;:\u0026#34;DocumentDB SDK \\u3067\\u30d1\\u30fc\\u30c6\\u30a3\\u30b7\\u30e7\\u30f3\\u5206\\u5272\\u3092\\u30b5\\u30dd\\u30fc\\u30c8\u0026#34;}]} „Åù„Åì„Åß‰∏äË®ò„ÅÆÁµêÊûúÂá∫Âäõ„Å´ÂØæ„Åó„Å¶ÔºàÔºëÔºâJSON„ÇíË¶ã„ÇÑ„Åô„ÅèPretify„Åó„Å¶„ÄÅÔºàÔºíÔºâ16ÈÄ≤Êï∞Ë°®Áèæ„Åß„Ç®„É≥„Ç≥„Éº„Éâ„Åï„Çå„ÅüUnicode„Çí„Éá„Ç≥„Éº„Éâ„Åô„ÇãÔºí„Å§„ÅÆÂá¶ÁêÜ„ÇíÂä†„Åà„Åü„ÅÑ„ÄÇ„Åæ„Åö„ÅØÔºàÔºëÔºâJSON Pretify„Å†„Åå„ÄÅPython2.6‰ª•‰∏ä„ÅÆÁí∞Â¢É„Åß„ÅÇ„Çå„Å∞„Åß„Äåpython -mjson.tool„Äç„Ç≥„Éû„É≥„Éâ„ÅßJSON„ÇíPretifyÂá∫Âäõ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇÊ¨°„Å´ÔºàÔºíÔºâ16ÈÄ≤Êï∞Ë°®Áèæ„ÅÆ„Éá„Ç≥„Éº„Éâ„ÅØStackOverflow„ÅßË¶ã„Å§„Åë„Åü„ÉØ„É≥„É©„Ç§„Éä„Éº„Äåperl -Xpne \u0026rsquo;s/\\u([0-9a-fA-F]{4})/chr(hex($1))/eg\u0026rsquo;„Äç„Çí‰ΩøÁî®„Åô„Çã„ÄÇÂÖà„ÅÆcUrl„Ç≥„Éû„É≥„Éâ„Å´„Åì„ÅÆÔºí„Å§„ÅÆÂá¶ÁêÜ„Çí„Éë„Ç§„Éó„Åß„Å§„Å™„Åí„Å¶Âä†„Åà„Å¶„Åø„Åü„ÅÆ„Åå‰∏ãË®ò„Ç≥„Éº„Éâ„ÄÇ\n#!/bin/sh SERVICE_NAME=\u0026#39;\u0026lt;Azure Search Service Name\u0026gt;\u0026#39; API_VER=\u0026#39;2015-02-28-Preview\u0026#39; ADMIN_KEY=\u0026#39;\u0026lt;API KEY\u0026gt;\u0026#39; CONTENT_TYPE=\u0026#39;application/json\u0026#39; INDEX_NAME=\u0026#39;articles\u0026#39; URL=\u0026#34;https://$SERVICE_NAME.search.windows.net/indexes/$INDEX_NAME/docs?api-version=$API_VER\u0026#34; { curl -s\\ -H \u0026#34;Content-Type: $CONTENT_TYPE\u0026#34;\\ -H \u0026#34;api-key: $ADMIN_KEY\u0026#34;\\ -XGET $URL\\ \u0026#34;\u0026amp;search=DocumentDB\u0026#34;\\ \u0026#34;\u0026amp;\\$select=itemid,title\u0026#34;\\ \u0026#34;\u0026amp;\\$count=true\u0026#34;\\ \u0026#34;\u0026amp;\\$top=5\u0026#34; } | python -mjson.tool| perl -Xpne \u0026#39;s/\\\\u([0-9a-fA-F]{4})/chr(hex($1))/eg\u0026#39; ‰ª•‰∏ã„ÅÆÂÆüË°åÁµêÊûú„ÅÆ„Å®„Åä„ÇäÁÑ°‰∫ãJSON PretifyÔºã„Éá„Ç≥„Éº„Éâ„Åï„Çå„ÅüÂá∫Âäõ„Å®„Å™„Å£„Åü„ÄÇ\n{ \u0026#34;@odata.context\u0026#34;: \u0026#34;https://yoichikaecdemo0.search.windows.net/indexes(\u0026#39;articles\u0026#39;)/$metadata#docs(itemid,title)\u0026#34;, \u0026#34;@odata.count\u0026#34;: 2, \u0026#34;value\u0026#34;: [ { \u0026#34;@search.score\u0026#34;: 1.1298637, \u0026#34;itemid\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;DocumentDB „ÅÆÊñ∞„Åó„ÅÑ„Ç§„É≥„Éù„Éº„Éà „Ç™„Éó„Ç∑„Éß„É≥\u0026#34; }, { \u0026#34;@search.score\u0026#34;: 1.058217, \u0026#34;itemid\u0026#34;: \u0026#34;4\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;DocumentDB SDK „Åß„Éë„Éº„ÉÜ„Ç£„Ç∑„Éß„É≥ÂàÜÂâ≤„Çí„Çµ„Éù„Éº„Éà\u0026#34; } ] } REST UI„ÉÑ„Éº„É´ ‰ªäÂõûcUrl„Ç≥„Éû„É≥„Éâ„Åß„ÅÆ„ÅäÊâãËªΩ„Å´APIÂÆüË°å„ÇíÁ¥π‰ªã„Åó„Åü„ÅåRESTÁ≥ªÂá¶ÁêÜ„ÅÆÂÆüË°å„Å®„ÅÑ„ÅÜ„Åì„Å®„Åß„ÅÇ„Çå„Å∞Fiddler„ÇÑPostman„ÅÆ„Çà„ÅÜ„Å™„ÉÑ„Éº„É´„ÅÆ„Åª„ÅÜ„Åå„Ç®„É≥„Ç≥„Éº„Éâ„Éª„Éá„Ç≥„Éº„Éâ„ÄÅJSON/XML„ÅÆÊï¥ÂΩ¢Ë°®Á§∫„Å™„Å©Èù¢ÂÄí„Å™Âá¶ÁêÜ„ÇíËá™Âãï„Åß„ÇÑ„Å£„Å¶„Åè„Çå„ÇãÂàÜÊ•Ω„Å†„Å£„Åü„Çä„Åô„Çã„ÄÇÁâπ„Å´Postman„ÅØ„Åä„Åô„Åô„ÇÅ„ÄÇ\nAzure Search „Åß Chrome Postman „Çí‰ΩøÁî®„Åô„ÇãÊñπÊ≥ï Azure Search „Åß Telerik Fiddler „Çí‰ΩøÁî®„Åô„ÇãÊñπÊ≥ï ","permalink":"https://unofficialism.info/posts/getting-started-azure-search-with-curl/","summary":"cUrl„ÅØUNIX/LinuxÁ≥ª„Åß„ÅØÊúâÂêç„Å™URL„Çí‰Ωø„Å£„Åü„Éá„Éº„ÇøÈÄÅÂèó‰ø°„Ç≥„Éû„É≥„Éâ„ÅßÊâãËªΩ„Å´RESTÁ≥ªÂá¶ÁêÜ„ÇíÂÆüË°å„Åô„Çã„Å®„Åç„Å´„Å®„Å¶„ÇÇÈáçÂÆù„Åó„Å¶„ÅÑ„Çã„ÄÇ„Åù„Çì„Å™cUrl„Ç≥„Éû„É≥„Éâ„Çí‰Ωø„Å£„Å¶Azure Search„Çí„ÅäÊâãËªΩ„Å´‰Ωø„Å£„Å¶„Åø„Çà„ÅÜ„Å®„ÅÑ„ÅÜ„ÅäË©±„ÄÇ\n„ÅØ„Åò„ÇÅ„Å´ „Åæ„Å†„ÅÆ‰∫∫„ÅØAzure„Éù„Éº„Çø„É´„Çà„ÇäAzure Search„Çµ„Éº„Éì„Çπ„Çí‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ„Äå„Éù„Éº„Çø„É´„Åß„ÅÆ Azure Search „Çµ„Éº„Éì„Çπ„ÅÆ‰ΩúÊàê„Äç„Å´ÂÑ™„Åó„ÅèÊâãÈ†Ü„ÅåÊõ∏„Åã„Çå„Å¶„ÅÑ„Çã„ÅÆ„Åß„ÅîÂèÇËÄÉ„Å´„ÄÇÊñôÈáë„Éó„É©„É≥„ÅØÁÑ°Êñô„Å®Ê®ôÊ∫ñ„Éó„É©„É≥„Åå„ÅÇ„Çã„Åå„ÉÜ„Çπ„Éà„Åß„ÅÇ„Çå„Å∞ÁÑ°Êñô„Éó„É©„É≥„ÅßÂçÅÂàÜ„ÄÇ„Åæ„Åö„ÅØAPI„Ç≠„Éº„Åæ„ÅßÂèñÂæó„Åè„Å†„Åï„ÅÑ„ÄÇAPIÂÆüË°å„ÅÆ„Åü„ÇÅ„Å´„ÅØAPI„Ç≠„Éº„ÅåÂøÖË¶Å„ÄÇ\ncURL„ÅßSearch Service REST API„ÇíÂÆüË°å Search Service REST API„ÅÆ‰∏≠„Åã„Çâ„ÅÑ„Åè„Å§„Åã‰ª£Ë°®ÁöÑ„Å™API„Çí„Éî„ÉÉ„ÇØ„Ç¢„ÉÉ„Éó„Åó„Å¶cUrl„Åß„ÇØ„Ç®„É™„ÇíÁµÑ„ÅøÁ´ã„Å¶„Å¶„Åø„Çã„ÄÇ„Åì„Åì„Åß„ÅØ„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÊñ∞Ë¶è‰ΩúÊàê„ÄÅ„Åù„Åì„Å´„ÅÑ„Åè„Å§„Åã„Éâ„Ç≠„É•„É°„É≥„Éà„ÇíËøΩÂä†„ÄÅ„Åù„Åó„Å¶„Éâ„Ç≠„É•„É°„É≥„Éà„ÇíÊ§úÁ¥¢„Åô„Çã„Éª„Éª„Å®„ÅÑ„Å£„ÅüÂü∫Êú¨ÁöÑ„Å™„Ç∑„Éä„É™„Ç™„ÇíÂÆüË°å„Åô„Çã„ÄÇ„Éù„Ç§„É≥„Éà„Å®„Åó„Å¶„ÅØcUrl„ÅÆ-H„Ç™„Éó„Ç∑„Éß„É≥„Åß„Éò„ÉÉ„ÉÄÂÆöÁæ©„ÄÅ-X„Ç™„Éó„Ç∑„Éß„É≥„ÅßHTTP„É°„ÇΩ„ÉÉ„ÉâÊåáÂÆö„ÄÅ-d„Ç™„Éó„Ç∑„Éß„É≥„Åß„É™„ÇØ„Ç®„Çπ„Éà„Éú„Éá„Ç£„ÇíÊåáÂÆö„Åô„Çã„Éª„Éª„Éª„Å®„ÅÑ„Å£„Åü„Å®„Åì„Çç„ÄÇÂ∞ö„ÄÅ‰∏ãË®ò„Çµ„É≥„Éó„É´„Åß„ÅØÁèæÊôÇÁÇπÔºà2015-06-05Ôºâ„ÅßÊúÄÊñ∞„ÅÆAPI„Éê„Éº„Ç∏„Éß„É≥2015-02-28-Preview„Çí‰ΩøÁî®„Åó„Å¶„ÅÑ„Çã„ÄÇ\n1. „Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÊñ∞Ë¶è‰ΩúÊàê articles„Å®„ÅÑ„ÅÜÂêçÂâç„ÅÆ„Éñ„É≠„Ç∞Ë®ò‰∫ã„ÇíÊ†ºÁ¥ç„Åô„Çã„Åü„ÇÅ„ÅÆ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Çí‰ΩúÊàê„Åô„Çã„ÄÇ„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÁîüÊàê„Å´„ÅØCreate Index (Azure Search Service REST API)„ÇíÂà©Áî®„Åô„Çã„ÄÇ\n#!/bin/sh SERVICE_NAME=\u0026#39;\u0026lt;Azure Search Service Name\u0026gt;\u0026#39; API_VER=\u0026#39;2015-02-28-Preview\u0026#39; ADMIN_KEY=\u0026#39;\u0026lt;API KEY\u0026gt;\u0026#39; CONTENT_TYPE=\u0026#39;application/json\u0026#39; URL=\u0026#34;https://$SERVICE_NAME.search.windows.net/indexes?api-version=$API_VER\u0026#34; curl -s\\ -H \u0026#34;Content-Type: $CONTENT_TYPE\u0026#34;\\ -H \u0026#34;api-key: $ADMIN_KEY\u0026#34;\\ -XPOST $URL -d\u0026#39;{ \u0026#34;name\u0026#34;: \u0026#34;articles\u0026#34;, \u0026#34;fields\u0026#34;: [ { \u0026#34;name\u0026#34;:\u0026#34;itemid\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;key\u0026#34;: true, \u0026#34;searchable\u0026#34;: false }, { \u0026#34;name\u0026#34;:\u0026#34;title\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false}, { \u0026#34;name\u0026#34;:\u0026#34;content\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;Edm.String\u0026#34;, \u0026#34;filterable\u0026#34;:false, \u0026#34;sortable\u0026#34;:false, \u0026#34;facetable\u0026#34;:false, \u0026#34;analyzer\u0026#34;:\u0026#34;ja.","title":"cUrl„Ç≥„Éû„É≥„Éâ„ÅßÂßã„ÇÅ„ÇãÁ∞°ÂçòAzure Search"}]